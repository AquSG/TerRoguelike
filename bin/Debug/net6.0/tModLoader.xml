<?xml version="1.0"?>
<doc>
    <assembly>
        <name>tModLoader</name>
    </assembly>
    <members>
        <member name="T:Terraria.Audio.SoundUpdateCallback">
            <summary>
            <see cref="T:Terraria.Audio.ActiveSound"/>'s update callback.
            <br/> Returning false here will force the sound to end abruptly.
            <br/> Tip: Use <see cref="M:Terraria.Audio.ProjectileAudioTracker.IsActiveAndInGame"/> to tie sounds to projectiles.
            </summary>
            <param name="soundInstance"> The sound object instance. </param>
            <returns> Whether the sound effect should continue to play. </returns>
        </member>
        <member name="T:Terraria.Audio.GStreamerAudioSupport">
             <summary>
             We require a WMAUDIO2/wmav2 decoder to read the windows wavebank. FFMPEG has the only one available to us.
             GStreamer replaces FFMPEG support in the latest FAudio releases.
             Unfortunately GStreamer just ends up using FFMPEG as a backend to the gstlibav.dll plugin anyway
             Slimming the FFMPEG for GStreamer would _probably_ require rebuilding the gstlibav plugin, or writing our own.
            
             If we ever need GStreamer support for FAudio in the future... add the following directory structure to Libraries/Native/Windows
             gstreamer
             │   avcodec-58.dll
             │   avfilter-7.dll
             │   avformat-58.dll
             │   avutil-56.dll
             │   bz2.dll
             │   ffi-7.dll
             │   glib-2.0-0.dll
             │   gmodule-2.0-0.dll
             │   gobject-2.0-0.dll
             │   gstapp-1.0-0.dll
             │   gstaudio-1.0-0.dll
             │   gstbase-1.0-0.dll
             │   gstpbutils-1.0-0.dll
             │   gstreamer-1.0-0.dll
             │   gsttag-1.0-0.dll
             │   gstvideo-1.0-0.dll
             │   intl-8.dll
             │   libwinpthread-1.dll
             │   orc-0.4-0.dll
             │   swresample-3.dll
             │   z-1.dll
             │
             └───plugins
                     gstapp.dll
                     gstaudioconvert.dll
                     gstaudioresample.dll
                     gstcoreelements.dll
                     gstlibav.dll
                     gstplayback.dll
             </summary>
        </member>
        <member name="M:Terraria.Audio.GStreamerAudioSupport.Init">
            <summary>
            Call this before loading the FAudio dll
            </summary>
        </member>
        <member name="M:Terraria.Audio.SoundEngine.PlaySound(System.Nullable{Terraria.Audio.SoundStyle}@,System.Nullable{Microsoft.Xna.Framework.Vector2},Terraria.Audio.SoundUpdateCallback)">
            <inheritdoc cref="M:Terraria.Audio.SoundEngine.PlaySound(Terraria.Audio.SoundStyle@,System.Nullable{Microsoft.Xna.Framework.Vector2},Terraria.Audio.SoundUpdateCallback)" />
            <summary>
            Attempts to play a sound style with the provided sound style (if it's not null), and returns a valid <see cref="T:ReLogic.Utilities.SlotId"/> handle to it on success.
            </summary>
        </member>
        <member name="M:Terraria.Audio.SoundEngine.PlaySound(Terraria.Audio.SoundStyle@,System.Nullable{Microsoft.Xna.Framework.Vector2},Terraria.Audio.SoundUpdateCallback)">
            <summary>
            Attempts to play a sound with the provided sound style, and returns a valid <see cref="T:ReLogic.Utilities.SlotId"/> handle to it on success.
            </summary>
            <param name="style"> The sound style that describes everything about the played sound. </param>
            <param name="position"> An optional 2D position to play the sound at. When null, this sound will be heard everywhere. </param>
            <param name="updateCallback"> A callback for customizing the behavior of the created sound instance, like tying its existence to a projectile using <see cref="T:Terraria.Audio.ProjectileAudioTracker"/>. </param>
        </member>
        <member name="M:Terraria.Audio.SoundEngine.TryGetActiveSound(ReLogic.Utilities.SlotId,Terraria.Audio.ActiveSound@)">
            <inheritdoc cref="M:Terraria.Audio.SoundPlayer.TryGetActiveSound(ReLogic.Utilities.SlotId,Terraria.Audio.ActiveSound@)"/>
        </member>
        <member name="M:Terraria.Audio.SoundPlayer.TryGetActiveSound(ReLogic.Utilities.SlotId,Terraria.Audio.ActiveSound@)">
            <summary>
            Safely attempts to get a currently playing <see cref="T:Terraria.Audio.ActiveSound"/> instance, tied to the provided <see cref="T:ReLogic.Utilities.SlotId"/>.
            </summary>
        </member>
        <member name="T:Terraria.Audio.SoundStyle">
            <summary>
            This data type describes in detail how a sound should be played.
            <br/> Passable to the <see cref="M:Terraria.Audio.SoundEngine.PlaySound(Terraria.Audio.SoundStyle@,System.Nullable{Microsoft.Xna.Framework.Vector2},Terraria.Audio.SoundUpdateCallback)"/> method.
            </summary>
        </member>
        <member name="P:Terraria.Audio.SoundStyle.SoundPath">
            <summary> The sound effect to play. </summary>
        </member>
        <member name="P:Terraria.Audio.SoundStyle.Type">
            <summary>
            Controls which volume setting will this be affected by.
            <br/> Ambience sounds also don't play when the game is out of focus.
            </summary>
        </member>
        <member name="P:Terraria.Audio.SoundStyle.Identifier">
            <summary> If defined, this string will be the only thing used to determine which styles should instances be shared with. </summary>
        </member>
        <member name="P:Terraria.Audio.SoundStyle.MaxInstances">
            <summary>
            The max amount of sound instances that this style will allow creating, before stopping a playing sound or refusing to play a new one.
            <br/> Set to 0 for no limits.
            </summary>
        </member>
        <member name="P:Terraria.Audio.SoundStyle.SoundLimitBehavior">
            <summary> Determines what the action taken when the max amount of sound instances is reached. </summary>
        </member>
        <member name="P:Terraria.Audio.SoundStyle.PlayOnlyIfFocused">
            <summary> If true, this sound won't play if the game's window isn't selected. </summary>
        </member>
        <member name="P:Terraria.Audio.SoundStyle.IsLooped">
            <summary> Whether or not to loop played sounds. </summary>
        </member>
        <member name="P:Terraria.Audio.SoundStyle.UsesMusicPitch">
            <summary>
            Whether or not this sound obeys the <see cref="F:Terraria.Main.musicPitch"/> field to decide its pitch.<br/>
            Defaults to false. Used in vanilla by the sounds for the Bell, the (Magical) Harp, and The Axe.<br/>
            Could prove useful, but is kept internal for the moment.
            </summary>
        </member>
        <member name="P:Terraria.Audio.SoundStyle.Variants">
            <summary>
            An array of possible suffixes to randomly append to after <see cref="P:Terraria.Audio.SoundStyle.SoundPath"/>.
            <br/> Setting this property resets <see cref="P:Terraria.Audio.SoundStyle.VariantsWeights"/>.
            </summary>
        </member>
        <member name="P:Terraria.Audio.SoundStyle.VariantsWeights">
            <summary>
            An array of randomization weights to optionally go with <see cref="P:Terraria.Audio.SoundStyle.Variants"/>.
            <br/> Set this last, if at all, as the <see cref="P:Terraria.Audio.SoundStyle.Variants"/>'s setter resets all weights data.
            </summary>
        </member>
        <member name="P:Terraria.Audio.SoundStyle.Volume">
            <summary> The volume multiplier to play sounds with. </summary>
        </member>
        <member name="P:Terraria.Audio.SoundStyle.Pitch">
            <summary>
            The pitch <b>offset</b> to play sounds with.
            <para/>In XNA and FNA, Pitch ranges from -1.0f (down one octave) to 1.0f (up one octave). 0.0f is unity (normal) pitch.
            </summary>
        </member>
        <member name="P:Terraria.Audio.SoundStyle.PitchVariance">
            <summary>
            The pitch offset randomness value. Cannot be negative.
            <br/>With Pitch at 0.0, and PitchVariance at 1.0, used pitch will range from -0.5 to 0.5. 
            <para/>In XNA and FNA, Pitch ranges from -1.0f (down one octave) to 1.0f (up one octave). 0.0f is unity (normal) pitch.
            </summary>
        </member>
        <member name="P:Terraria.Audio.SoundStyle.PitchRange">
            <summary>
            A helper property for controlling both Pitch and PitchVariance at once.
            <para/>In XNA and FNA, Pitch ranges from -1.0f (down one octave) to 1.0f (up one octave). 0.0f is unity (normal) pitch.
            </summary>
        </member>
        <member name="T:Terraria.Chest">
            <summary>
            Represents a non-<see cref="T:Terraria.Player"/> inventory, such as chests, portable storage, or NPC shops.
            </summary>
        </member>
        <member name="F:Terraria.Chest.chestStackRange">
            <summary>
            The maximum distance, in world coordinates, that a player can quick-stack items into chests.
            </summary>
        </member>
        <member name="F:Terraria.Chest.maxChestTypes">
            <summary>
            The number of vanilla chest styles contained in <see cref="F:Terraria.ID.TileID.Containers"/>.
            </summary>
        </member>
        <member name="F:Terraria.Chest.chestTypeToIcon">
            <summary>
            Associates a <see cref="F:Terraria.ID.TileID.Containers"/> style with the item type (<see cref="F:Terraria.Item.type"/>) that is shown when the chest is moused over. Differs from <see cref="F:Terraria.Chest.chestItemSpawn"/> to show key items for locked chest styles.
            <br/> <see cref="F:Terraria.Chest.maxChestTypes"/> elements long.
            </summary>
        </member>
        <member name="F:Terraria.Chest.chestItemSpawn">
            <summary>
            Associates a <see cref="F:Terraria.ID.TileID.Containers"/> style with the item type (<see cref="F:Terraria.Item.type"/>) that is dropped when the chest is destroyed.
            <br/> <see cref="F:Terraria.Chest.maxChestTypes"/> elements long.
            </summary>
        </member>
        <member name="F:Terraria.Chest.maxChestTypes2">
            <summary>
            The number of vanilla chest styles contained in <see cref="F:Terraria.ID.TileID.Containers2"/>.
            </summary>
        </member>
        <member name="F:Terraria.Chest.chestTypeToIcon2">
            <summary>
            Associates a <see cref="F:Terraria.ID.TileID.Containers2"/> style with the item type (<see cref="F:Terraria.Item.type"/>) that is shown when the chest is moused over.
            <br/> <see cref="F:Terraria.Chest.maxChestTypes2"/> elements long. Differs from <see cref="F:Terraria.Chest.chestItemSpawn2"/> to show key items for locked chest styles.
            </summary>
        </member>
        <member name="F:Terraria.Chest.chestItemSpawn2">
            <summary>
            Associates a <see cref="F:Terraria.ID.TileID.Containers2"/> style with the item type (<see cref="F:Terraria.Item.type"/>) that is dropped when the chest is destroyed.
            <br/> <see cref="F:Terraria.Chest.maxChestTypes2"/> elements long.
            </summary>
        </member>
        <member name="F:Terraria.Chest.maxDresserTypes">
            <summary>
            The number of vanilla dresser styles contained in <see cref="F:Terraria.ID.TileID.Dressers"/>.
            </summary>
        </member>
        <member name="F:Terraria.Chest.dresserTypeToIcon">
            <summary>
            Associates a <see cref="F:Terraria.ID.TileID.Dressers"/> style with the item type (<see cref="F:Terraria.Item.type"/>) that is shown when the dresser is moused over.
            <br/> <see cref="F:Terraria.Chest.maxDresserTypes"/> elements long.
            </summary>
        </member>
        <member name="F:Terraria.Chest.dresserItemSpawn">
            <summary>
            Associates a <see cref="F:Terraria.ID.TileID.Dressers"/> style with the item type (<see cref="F:Terraria.Item.type"/>) that is dropped when the dresser is destroyed.
            <br/> <see cref="F:Terraria.Chest.maxDresserTypes"/> elements long.
            </summary>
        </member>
        <member name="F:Terraria.Chest.maxItems">
            <summary>
            The maximum number of items chests can contain.
            </summary>
        </member>
        <member name="F:Terraria.Chest.MaxNameLength">
            <summary>
            The maximum length that <see cref="F:Terraria.Chest.name"/> is allowed to be.
            </summary>
        </member>
        <member name="F:Terraria.Chest.item">
            <summary>
            The items this chest contains.
            <br/> <see cref="F:Terraria.Chest.maxItems"/> elements long.
            </summary>
        </member>
        <member name="F:Terraria.Chest.x">
            <summary>
            The x-coordinate of this chest in the world, in tile coordinates. (Top left corner tile)
            </summary>
        </member>
        <member name="F:Terraria.Chest.y">
            <summary>
            The y-coordinate of this chest in the world, in tile coordinates. (Top left corner tile)
            </summary>
        </member>
        <member name="F:Terraria.Chest.bankChest">
            <summary>
            <strong>Unused.</strong>
            <br/> If <see langword="true"/>, this chest is a portable storage (such as <see cref="F:Terraria.ID.ItemID.PiggyBank"/>) linked to a player.
            </summary>
        </member>
        <member name="F:Terraria.Chest.name">
            <summary>
            The player-assigned name of this chest. May not exceed <see cref="F:Terraria.Chest.MaxNameLength"/> characters in length.
            </summary>
        </member>
        <member name="F:Terraria.Chest.frameCounter">
            <summary>
            The number of ticks this chest has been on its current <see cref="F:Terraria.Chest.frame"/> value.
            </summary>
        </member>
        <member name="F:Terraria.Chest.frame">
            <summary>
            The current frame of this chest's animation.
            </summary>
        </member>
        <member name="F:Terraria.Chest.eatingAnimationTime">
            <summary>
            The duration of this chest's eating animation in ticks.
            <br/> The eating animation plays when an item is quick-stacked into this chest.
            </summary>
        </member>
        <member name="M:Terraria.Chest.#ctor(System.Boolean)">
            <summary>
            Create a new <see cref="T:Terraria.Chest"/> with no name.
            </summary>
        </member>
        <member name="M:Terraria.Chest.GetCurrentlyOpenChests">
            <summary>
            Gets a list of currently-open chests in the world.
            <br/> Never called on <see cref="F:Terraria.ID.NetmodeID.MultiplayerClient"/>.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> containing the indices in <see cref="F:Terraria.Main.chest"/> of all chests any active <see cref="T:Terraria.Player"/> has open.</returns>
        </member>
        <member name="M:Terraria.Chest.IsLocked(System.Int32,System.Int32)">
            <summary>
            Determines if the chest at <see cref="F:Terraria.Main.tile"/>[<paramref name="x"/>, <paramref name="y"/>] is locked.
            </summary>
            <param name="x">The x-coordinate of the chest to check, in tile coordinates.</param>
            <param name="y">The y-coordinate of the chest to check, in tile coordinates.</param>
            <returns><see langword="true"/> if the chest is locked, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Terraria.Chest.IsLocked(System.Int32,System.Int32,Terraria.Tile)">
            <inheritdoc cref="M:Terraria.Chest.IsLocked(System.Int32,System.Int32)"/>
            <param name="x"><inheritdoc cref="M:Terraria.Chest.IsLocked(System.Int32,System.Int32)"/></param>
            <param name="y"><inheritdoc cref="M:Terraria.Chest.IsLocked(System.Int32,System.Int32)"/></param>
            <param name="t">The <see cref="T:Terraria.Tile"/> at <see cref="F:Terraria.Main.tile"/>[<paramref name="x"/>, <paramref name="y"/>]</param>
        </member>
        <member name="M:Terraria.Chest.ServerPlaceItem(System.Int32,System.Int32)">
            <summary>
            Attempts to move the item in <paramref name="plr"/>'s inventory or Void Vault into nearby chests.
            <br/> Only called on <see cref="F:Terraria.ID.NetmodeID.Server"/>.
            </summary>
            <param name="plr">The index of the <see cref="T:Terraria.Player"/> in <see cref="F:Terraria.Main.player"/> to try moving an item for.</param>
            <param name="slot">
            The <see cref="T:Terraria.ID.PlayerItemSlotID"/> to move an item from.
            <br/> If <c><paramref name="slot"/> &lt; 58</c>, then that slot of <paramref name="plr"/>'s inventory is moved.
            <br/> If <c><paramref name="slot"/> >= <see cref="F:Terraria.ID.PlayerItemSlotID.Bank4_0"/> &amp;&amp; <paramref name="slot"/> &lt; <see cref="F:Terraria.ID.PlayerItemSlotID.Bank4_0"/> + 40</c>, then that slot (minus <see cref="F:Terraria.ID.PlayerItemSlotID.Bank4_0"/>) of <paramref name="plr"/>'s Void Vault is moved.
            <br/> Otherwise, no item is moved.
            </param>
            <remarks>
            It's recommended to use <see cref="M:Terraria.Player.QuickStackAllChests"/> to handle this automatically.
            </remarks>
        </member>
        <member name="M:Terraria.Chest.PutItemInNearbyChest(Terraria.Item,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Attempts to move the given item into any chests near the given position. Cannot place items into a chest if <see cref="M:Terraria.Chest.IsPlayerInChest(System.Int32)"/> or  if that chest <see cref="M:Terraria.Chest.IsLocked(System.Int32,System.Int32)"/>
            </summary>
            <param name="item">The item to attempt moving.</param>
            <param name="position">The position to attempt moving from.</param>
            <returns>
            If on <see cref="F:Terraria.ID.NetmodeID.MultiplayerClient"/>, <paramref name="item"/> without modification.
            <br/> Otherwise, <paramref name="item"/> after being quick-stacked into any nearby chests. May be <see cref="P:Terraria.Item.IsAir"/>.
            </returns>
        </member>
        <member name="M:Terraria.Chest.VisualizeChestTransfer(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Terraria.Item,System.Int32)">
            <summary>
            Visually moves <paramref name="item"/> from <paramref name="position"/> to <paramref name="chestPosition"/>.
            <br/> If called on <see cref="F:Terraria.ID.NetmodeID.MultiplayerClient"/>, sync the transfer to all clients.
            </summary>
            <param name="position">The original position of <paramref name="item"/> in world coordinates.</param>
            <param name="chestPosition">The position of the destination chest in world coordinates.</param>
            <param name="item">The item to move. Only <see cref="F:Terraria.Item.type"/> is read.</param>
            <param name="amountMoved"><strong>Unused.</strong></param>
        </member>
        <member name="M:Terraria.Chest.VisualizeChestTransfer_CoinsBatch(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int64)">
            <summary>
            Visually moves <paramref name="coinsMoved"/> worth of coins from <paramref name="position"/> to <paramref name="chestPosition"/>.
            <br/> If called on <see cref="F:Terraria.ID.NetmodeID.MultiplayerClient"/>, sync the transfer to all clients.
            </summary>
            <param name="position">The original position of the coins in world coordinates.</param>
            <param name="chestPosition">The position of the destination chest in world coordinates.</param>
            <param name="coinsMoved">The value of the coins moved in copper coins.</param>
        </member>
        <member name="M:Terraria.Chest.Unlock(System.Int32,System.Int32)">
            <summary>
            Unlocks a locked chest.
            </summary>
            <param name="X">The x-coordinate of the locked chest, in tile coordinates.</param>
            <param name="Y">The y-coordinate of the locked chest, in tile coordinates.</param>
            <returns><see langword="true"/> if the chest successfully unlocked, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Terraria.Chest.Lock(System.Int32,System.Int32)">
            <summary>
            Locks an unlocked chest.
            </summary>
            <param name="X">The x-coordinate of the unlocked chest, in tile coordinates.</param>
            <param name="Y">The y-coordinate of the unlocked chest, in tile coordinates.</param>
            <returns><see langword="true"/> if the chest successfully locked, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Terraria.Chest.UsingChest(System.Int32)">
            <summary>
            Gets the <see cref="T:Terraria.Player"/> currently using the given chest, if any.
            </summary>
            <param name="i">The index of the chest in <see cref="F:Terraria.Main.chest"/> to check.</param>
            <returns>The index in <see cref="F:Terraria.Main.player"/> of the <see cref="T:Terraria.Player"/> using this chest, or <c>-1</c> if no player is using this chest.</returns>
        </member>
        <member name="M:Terraria.Chest.FindChest(System.Int32,System.Int32)">
            <summary>
            Tries to find a <see cref="T:Terraria.Chest"/> located at (<paramref name="X"/>, <paramref name="Y"/>) (tile coordinates).
            </summary>
            <param name="X">The x-coordinate to check, in tile coordinates.</param>
            <param name="Y">The y-coordinate to check, in tile coordinates.</param>
            <returns>The index in <see cref="F:Terraria.Main.chest"/> of the chest at (<paramref name="X"/>, <paramref name="Y"/>), or <c>-1</c> if one doesn't exist.</returns>
            <remarks>
            If you don't have the top-left corner of the chest tile, use <see cref="M:Terraria.Chest.FindChestByGuessing(System.Int32,System.Int32)"/>.
            </remarks>
        </member>
        <member name="M:Terraria.Chest.FindChestByGuessing(System.Int32,System.Int32)">
            <summary>
            Tries to find the <see cref="T:Terraria.Chest"/> associated with the tile at (<paramref name="X"/>, <paramref name="Y"/>) (tile coordinates).
            </summary>
            <param name="X">The x-coordinate to check, in tile coordinates.</param>
            <param name="Y">The y-coordinate to check, in tile coordinates.</param>
            <returns>The index in <see cref="F:Terraria.Main.chest"/> of the chest associated with the tile at (<paramref name="X"/>, <paramref name="Y"/>), or <c>-1</c> if one doesn't exist.</returns>
            <remarks>
            If you have the top-left corner of the chest tile, use <see cref="M:Terraria.Chest.FindChest(System.Int32,System.Int32)"/>.
            </remarks>
        </member>
        <member name="M:Terraria.Chest.FindEmptyChest(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Determines if a new chest can exist at tile coordinates (<paramref name="x"/>, <paramref name="y"/>).
            </summary>
            <param name="x">The x-coordinate to check, in tile coordinates.</param>
            <param name="y">The y-coordinate to check, in tile coordinates.</param>
            <param name="type">Unused, but required for use with <see cref="F:Terraria.DataStructures.PlacementHook.hook"/>.</param>
            <param name="style">Unused, but required for use with <see cref="F:Terraria.DataStructures.PlacementHook.hook"/>.</param>
            <param name="direction">Unused, but required for use with <see cref="F:Terraria.DataStructures.PlacementHook.hook"/>.</param>
            <param name="alternate">Unused, but required for use with <see cref="F:Terraria.DataStructures.PlacementHook.hook"/>.</param>
            <returns>
            <c>-1</c> if there exists a chest in <see cref="F:Terraria.Main.chest"/> at the coordinates (<paramref name="x"/>, <paramref name="y"/>), or if <see cref="F:Terraria.Main.chest"/> contains no <see langword="null"/> elements.
            <br/> Otherwise, the index in <see cref="F:Terraria.Main.chest"/> of the first <see langword="null"/> element.
            </returns>
        </member>
        <member name="M:Terraria.Chest.NearOtherChests(System.Int32,System.Int32)">
            <summary>
            Determines if there are any chests near the tile coordinates (<paramref name="x"/>, <paramref name="y"/>).
            </summary>
            <param name="x">The x-coordinate to check, in tile coordinates.</param>
            <param name="y">The y-coordinate to check, in tile coordinates.</param>
            <returns><see langword="true"/> if any position in <see cref="F:Terraria.Main.tile"/> within [-25, 25) tiles horizontally and [-8, 8) tiles vertically has a tile (<see cref="P:Terraria.Tile.HasTile"/>) and if that tile's <see cref="P:Terraria.Tile.TileType"/> is in <see cref="F:Terraria.ID.TileID.Sets.BasicChest"/>. Otherwise, returns <see langword="false"/>.</returns>
        </member>
        <member name="M:Terraria.Chest.AfterPlacement_Hook(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Registers a placed chest into the world.
            </summary>
            <param name="x">The x-coordinate to check, in tile coordinates.</param>
            <param name="y">The y-coordinate to check, in tile coordinates.</param>
            <param name="type">The tile type of the placed chest.</param>
            <param name="style">The tile style of the placed chest.</param>
            <param name="direction">Unused, but required for use with <see cref="F:Terraria.DataStructures.PlacementHook.hook"/>.</param>
            <param name="alternate">Unused, but required for use with <see cref="F:Terraria.DataStructures.PlacementHook.hook"/>.</param>
            <returns>
            <c>-1</c> if there exists a chest in <see cref="F:Terraria.Main.chest"/> at the coordinates (<paramref name="x"/>, <paramref name="y"/>), or if <see cref="F:Terraria.Main.chest"/> contains no <see langword="null"/> elements.
            <br/> Otherwise, the index in <see cref="F:Terraria.Main.chest"/> of the newly-created chest.
            </returns>
        </member>
        <member name="M:Terraria.Chest.CreateChest(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates and registers a new chest into the world.
            </summary>
            <param name="X">The x-coordinate to check, in tile coordinates.</param>
            <param name="Y">The y-coordinate to check, in tile coordinates.</param>
            <param name="id">The index in <see cref="F:Terraria.Main.chest"/> that this chest should use. If <c><paramref name="id"/> != -1</c>, placement cannot fail.</param>
            <returns>
            <c>-1</c> if <c><paramref name="id"/> == -1</c> and <see cref="M:Terraria.Chest.FindEmptyChest(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/> returns <c>-1</c>.
            <br/> Otherwise, the index in <see cref="F:Terraria.Main.chest"/> of the newly-created chest.
            </returns>
            <remarks>
            It is recommended to use <see cref="M:Terraria.WorldGen.PlaceChest(System.Int32,System.Int32,System.UInt16,System.Boolean,System.Int32)"/> to place chests into the world.
            </remarks>
        </member>
        <member name="M:Terraria.Chest.CanDestroyChest(System.Int32,System.Int32)">
            <summary>
            Determines if the chest at (<paramref name="X"/>, <paramref name="Y"/>) can be destroyed.
            </summary>
            <param name="X">The x-coordinate to check, in tile coordinates.</param>
            <param name="Y">The y-coordinate to check, in tile coordinates.</param>
            <returns><see langword="false"/> if a chest exists at (<paramref name="X"/>, <paramref name="Y"/>) and if any element in that chest's <see cref="F:Terraria.Chest.item"/> array is not <see cref="P:Terraria.Item.IsAir"/>. Otherwise, returns <see langword="true"/>.</returns>
        </member>
        <member name="M:Terraria.Chest.DestroyChest(System.Int32,System.Int32)">
            <summary>
            Attempts to destroy the chest at (<paramref name="X"/>, <paramref name="Y"/>).
            </summary>
            <param name="X">The x-coordinate to check, in tile coordinates.</param>
            <param name="Y">The y-coordinate to check, in tile coordinates.</param>
            <returns><see langword="false"/> if a chest exists at (<paramref name="X"/>, <paramref name="Y"/>) and if any element in that chest's <see cref="F:Terraria.Chest.item"/> array is not <see cref="P:Terraria.Item.IsAir"/>. Otherwise, returns <see langword="true"/>.</returns>
        </member>
        <member name="M:Terraria.Chest.DestroyChestDirect(System.Int32,System.Int32,System.Int32)">
            <summary>
            Forcibly destroys the chest at (<paramref name="X"/>, <paramref name="Y"/>) with ID <paramref name="id"/> if it exists.
            <br/> <strong>Warning: This will destroy any items contained within the chest.</strong>
            </summary>
            <param name="X">The x-coordinate to check, in tile coordinates.</param>
            <param name="Y">The y-coordinate to check, in tile coordinates.</param>
            <param name="id">The index in <see cref="F:Terraria.Main.chest"/> of the chest to destroy.</param>
        </member>
        <member name="M:Terraria.Chest.AddItemToShop(Terraria.Item)">
            <summary>
            Adds an item to the first empty slot in this shop.
            </summary>
            <param name="newItem">The item to add.</param>
            <returns><c>0</c> if the item could not be added to the shop, or the index in <see cref="F:Terraria.Chest.item"/> if the item was successfully added.</returns>
        </member>
        <member name="M:Terraria.Chest.SetupTravelShop">
            <summary>
            Sets up the <see cref="F:Terraria.ID.NPCID.TravellingMerchant"/>'s shop.
            </summary>
        </member>
        <member name="M:Terraria.Chest.AskForChestToEatItem(Microsoft.Xna.Framework.Vector2,System.Int32)">
            <summary>
            Visually opens the chest at <paramref name="worldPosition"/> for <paramref name="duration"/> ticks.
            </summary>
            <param name="worldPosition">The position of the chest to ask, in tile coordinates.</param>
            <param name="duration">The duration of the eating animation in ticks.</param>
        </member>
        <member name="M:Terraria.Chest.UpdateChestFrames">
            <summary>
            Visually updates all chests' frames.
            <br/> Chests that are being used (<see cref="M:Terraria.Chest.GetCurrentlyOpenChests"/>) or eating an item (<see cref="F:Terraria.Chest.eatingAnimationTime"/>) will not be opened.
            </summary>
        </member>
        <member name="M:Terraria.Chest.FixLoadedData">
            <summary>
            Calls <see cref="M:Terraria.Item.FixAgainstExploit"/> on all of this chest's items.
            </summary>
        </member>
        <member name="T:Terraria.CombatText">
            <summary>
            Represents floating text in the game world most typically used for damage numbers and healing numbers. <br />
            For non-overlapping in-game text, such as reforge messages, use <see cref="T:Terraria.PopupText" /> instead.
            Use the <see cref="M:Terraria.CombatText.NewText(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,System.Int32,System.Boolean,System.Boolean)" /> or <see cref="M:Terraria.CombatText.NewText(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,System.String,System.Boolean,System.Boolean)" /> methods to create a new instance. <br />
            In multiplayer, <see cref="F:Terraria.ID.MessageID.CombatTextInt" /> and <see cref="F:Terraria.ID.MessageID.CombatTextString" /> network messages can be used to sync a combat text if manually spawned. <br />
            <VariousTextOptionsSummary>
        <br />Summary of options to display text to the user:<br />
        • <see cref="M:Terraria.Main.NewText(System.String,System.Byte,System.Byte,System.Byte)" /> to display a message in chat. <br />
        • <see cref="T:Terraria.CombatText" /> to display floating damage numbers in-game. Used for damage and healing numbers. <br />
        • <see cref="T:Terraria.PopupText" /> to display non-overlapping floating in-game text. Used for reforge and item pickup messages. <br />
    </VariousTextOptionsSummary>
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.AEntitySource_Tile">
            <summary>
            Abstract base class for entities which come from a tile. <br/><br/>
            
            If the entity comes from a Player/NPC/Projectile, and a tile is only incidentally involved, consider making your own subclass of <see cref="T:Terraria.DataStructures.EntitySource_Parent"/> instead
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.BossBarDrawParams">
            <summary>
            Holds data required for boss bar drawing.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.BarTexture">
            <summary>
            The texture with fixed dimensions (516x348) containing all the necessary parts.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.BarCenter">
            <summary>
            The screen position of the center of the bar.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.IconTexture">
            <summary>
            The displayed icon texture.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.IconFrame">
            <summary>
            The icon textures frame.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.IconColor">
            <summary>
            The tint of the icon.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.Life">
            <summary>
            The current life of the boss
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.LifeMax">
            <summary>
            The max life of the boss (the amount it spawned with)
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.Shield">
            <summary>
            The current shield of the boss
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.ShieldMax">
            <summary>
            The max shield of the boss (may be 0 if the boss has no shield)
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.IconScale">
            <summary>
            The scale the icon is drawn with. Defaults to 1f, modify if icon is bigger or smaller than 26x28.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.ShowText">
            <summary>
            If the current life (or shield) of the boss should be written on the bar.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BossBarDrawParams.TextOffset">
            <summary>
            The text offset from the center (<see cref="F:Terraria.DataStructures.BossBarDrawParams.BarCenter"/>)
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.BuffDrawParams">
            <summary>
            Holds data required for buff drawing.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BuffDrawParams.Texture">
            <summary>
            The texture used for drawing the buff.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BuffDrawParams.Position">
            <summary>
            Top-left position of the buff on the screen.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BuffDrawParams.TextPosition">
            <summary>
            Top left position of the text below the buff (remaining time).
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BuffDrawParams.SourceRectangle">
            <summary>
            The frame displayed from the texture. Defaults to the entire texture size.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BuffDrawParams.MouseRectangle">
            <summary>
            Defaults to the size of the autoloaded buffs' sprite, it handles mouseovering and clicking on the buff icon.
            If you offset the position, or have a non-standard size, change it accordingly.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BuffDrawParams.DrawColor">
            <summary>
            Color used to draw the buff. Use Main.buffAlpha[buffIndex] accordingly if you change it.
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_BossSpawn">
            <summary>
            Used for most vanilla bosses, conveys their initial target, which is normally the closest player.
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.EntitySource_BossSpawn.Target">
            <summary>
            The entity which this boss spawn on. <br/><br/>
            In the vast majority of cases, this will be a <see cref="T:Terraria.Player"/>. Often <see cref="F:Terraria.NPC.target"/> will be set to <c>Player.whoAmI</c>
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_Buff">
             <summary>
             Intended for mods to use when spawning projectiles periodically from buffs. <br/><br/>
            
             Note that this can be used for both NPCs and Players
             </summary>
        </member>
        <member name="P:Terraria.DataStructures.EntitySource_Buff.BuffId">
            <summary>
            The type of the buff (<see cref="T:Terraria.ID.BuffID"/> or <see cref="M:Terraria.ModLoader.ModContent.BuffType``1"/>)
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.EntitySource_Buff.BuffIndex">
            <summary>
            The index of the buff in the entity's <c>buffType</c> and <c>buffTime</c> arrays.
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_Caught">
            <summary>
            Used when NPCs or other entities are caught by things like bug nets. Normally converting the caught entity into an item.
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.EntitySource_Caught.Catcher">
            <summary>
            The entity which performed the act of catching.<br/><br/>
            In vanilla, this is a <see cref="T:Terraria.Player"/>.
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_Death">
            <summary>
            Used when dropping coins and items when a player dies. <br/>
            Recommended for use by mods when spawning gore.
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_DropAsItem">
            <summary>
            Used when projectiles convert themselves to items in the world as a result of hitting a block.
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_FishedOut">
            <summary>
            Used when an NPC spawns as a result of fishing.
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.EntitySource_FishedOut.Fisher">
            <summary>
            The entity which was fishing. Normally a <see cref="T:Terraria.Player"/>
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_Gift">
            <summary>
            Used when NPCs or pets/minions give gifts or rewards to a player.
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_ItemOpen">
            <summary>
            Used when opening bags or gifts. Passed to <see cref="M:Terraria.Player.QuickSpawnItem(Terraria.DataStructures.IEntitySource,Terraria.Item,System.Int32)"/>
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.EntitySource_ItemOpen.Player">
            <summary>
            The player opening the item
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.EntitySource_ItemOpen.ItemType">
            <summary>
            The type of item being opened
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.IEntitySource_WithStatsFromItem">
            <summary>
            Used along with <see cref="T:Terraria.DataStructures.EntitySource_Parent"/> to indicate that stats from the item should be transferred to spawned entities. <br/>
            When used to spawn projectiles, a snapshot of the Player and Item stats will be stored on the projectile. See <see cref="M:Terraria.Projectile.ApplyStatsFromSource(Terraria.DataStructures.IEntitySource)"/> for implementation
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.IEntitySource_WithStatsFromItem.Player">
            <summary>
            The Player using the Item. Equal to <see cref="P:Terraria.DataStructures.EntitySource_Parent.Entity"/>
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.IEntitySource_WithStatsFromItem.Item">
            <summary>
            The item being used
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_ItemUse">
            <summary>
            Use the interface, <see cref="T:Terraria.DataStructures.IEntitySource_WithStatsFromItem"/> instead when checking entity sources in <c>OnSpawn</c> <br/><br/>
            
            Used when a player uses an item or an accessory.
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_ItemUse_OnHurt">
             <summary>
             Combination of <see cref="T:Terraria.DataStructures.IEntitySource_OnHurt"/> and <see cref="T:Terraria.DataStructures.IEntitySource_WithStatsFromItem"/> <br/><br/>
            
             Used for on-hurt accessories in vanilla (Star Cloak, Brain of Confusion etc). <br/>
             Modders should be aware that it is <b>not</b> necessary to use this instead of <see cref="T:Terraria.DataStructures.EntitySource_OnHurt"/> <br/>
             The combination with <see cref="T:Terraria.DataStructures.IEntitySource_WithStatsFromItem"/> will only have an effect if the item has damage/crit/armor pen stats which vanilla accessories do not <br/>
             Some mods may wish to transfer other accessory bonuses from the item to spawned projectiles.
             </summary>
        </member>
        <member name="P:Terraria.DataStructures.EntitySource_ItemUse_WithAmmo.AmmoItemIdUsed">
            <summary>
            A <see cref="T:Terraria.ID.ItemID"/> or <see cref="M:Terraria.ModLoader.ModContent.ItemType``1"/>
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_Loot">
            <summary>
            Used when an NPC or Projectile is killed and drops loot. <br/>
            Vanilla projectile examples are geodes and life crystal boulders
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_Misc">
            <summary>
            To be used in cases where no entity is present. See <see cref="T:Terraria.ID.ItemSourceID"/> and <see cref="T:Terraria.ID.ProjectileSourceID"/> for vanilla values<para/>
            <b>NOTE:</b> Unlike most other entity sources, this one requires <see cref="P:Terraria.DataStructures.EntitySource_Misc.Context"/> to be specified.
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_Mount">
            <summary>
            Used for a effects from a mounted player
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.EntitySource_Mount.MountId">
            <summary>
            A <see cref="T:Terraria.ID.MountID"/> or <see cref="M:Terraria.ModLoader.ModContent.MountType``1"/>
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.IEntitySource_OnHit">
            <summary>
            Used along with <see cref="T:Terraria.DataStructures.EntitySource_Parent"/>. The <see cref="P:Terraria.DataStructures.IEntitySource_OnHit.Attacker"/> is also the <see cref="P:Terraria.DataStructures.EntitySource_Parent.Entity"/> (owner of the effect)
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.IEntitySource_OnHit.Attacker">
            <summary>
            The attacking entity. Note that this may be a <see cref="T:Terraria.Projectile"/> (possibly owned by a player), a <see cref="T:Terraria.Player"/> or even a <see cref="T:Terraria.NPC"/>
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.IEntitySource_OnHit.Victim">
            <summary>
            The entity being attacked. Normally an NPC, but could be an Player if a mod decides to use this source in such a way
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_OnHit">
             <summary>
             Use the interface, <see cref="T:Terraria.DataStructures.IEntitySource_OnHit"/> instead when checking entity sources in <c>OnSpawn</c> <br/><br/>
            
             Recommend setting <see cref="P:Terraria.DataStructures.IEntitySource.Context"/> to indicate the effect. Many vanilla set bonuses or accessories use this source.
             </summary>
        </member>
        <member name="T:Terraria.DataStructures.IEntitySource_OnHurt">
            <summary>
            Used along with <see cref="T:Terraria.DataStructures.EntitySource_Parent"/>. The <see cref="P:Terraria.DataStructures.IEntitySource_OnHurt.Victim"/> is also the <see cref="P:Terraria.DataStructures.EntitySource_Parent.Entity"/> (owner of the effect)
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.IEntitySource_OnHurt.Attacker">
            <summary>
            The attacking entity. Note that this may be a <see cref="T:Terraria.Projectile"/> (possibly owned by a player), a <see cref="T:Terraria.Player"/> or even a <see cref="T:Terraria.NPC"/>
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.IEntitySource_OnHurt.Victim">
            <summary>
            The entity being attacked. Nnormally a Player, but could be an NPC if a mod decides to use this source in such a way
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_OnHurt">
            <summary>
            Use the interface, <see cref="T:Terraria.DataStructures.IEntitySource_OnHurt"/> instead when checking entity sources in <c>OnSpawn</c> <br/><br/>
            
            Recommend setting <see cref="P:Terraria.DataStructures.IEntitySource.Context"/> to indicate the effect.
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_OverfullChest">
            <summary>
            Used when attempting to add an item to a chest, but the chest is full so it spills into the world. <br/>
            Only vanilla use is the gas trap.
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_OverfullInventory">
            <summary>
            Used when attempting to add an item to the player's inventory, but it cannot fit so it spawns in the world instead. <br/>
            Used in vanilla when a fished item can't fit in the player's inventory.
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_Parent">
            <summary>
            Use when the parent can be considered the 'owner' or 'responsible for' the effect. <br/>
            This is the <b>most important</b> entity source. If in doubt, use it.
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.EntitySource_Parent.Entity">
            <summary>
            The entity which is the source of the effect or action.
            In many cases, it makes sense to consider buffs or effects applied to the parent entity, and make changes to the spawned entity.
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_RevengeSystem">
            <summary>
            Used when an NPC is respawned from the <see cref="T:Terraria.GameContent.CoinLossRevengeSystem"/>
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_ShakeTree">
            <summary>
            Used when items/bomb projectiles/npcs fall out of trees being cut down
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_SpawnNPC">
            <summary>
            Used when an NPC is spawned from <see cref="M:Terraria.NPC.SpawnNPC"/> as part of natural biome/event based spawning. <br/><br/>
            Note that some bosses incorrectly use this source to spawn minions, and remix world pots use it to spawn slimes. (to be fixed in 1.4.5)
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_Sync">
            <summary>
            Used when an <see cref="T:Terraria.Item"/> is spawned on the server as a result of <see cref="F:Terraria.ID.MessageID.SyncItemCannotBeTakenByEnemies"/> <br/>
            Only used by vanilla for lucky coin. Note that the item is spawned client-side with <see cref="P:Terraria.DataStructures.IEntitySource.Context"/> = <see cref="F:Terraria.ID.ItemSourceID.LuckyCoin"/>
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_TileBreak">
            <summary>
            Used when a tile or wall is broken
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_TileEntity">
            <summary>
            Used by vanilla for training dummies
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_TileInteraction">
            <summary>
            Used when an entity interacts with a tile. <br/>
            Used by vanilla when players activate mechanisms like cannons and fireworks
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.EntitySource_TileInteraction.Entity">
            <summary>
            The entity interacting with the tile. <br/>
            Normally a <see cref="T:Terraria.Player"/>
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_TileUpdate">
            <summary>
            Intended for mods to use when a tile spawns an entity due to periodic/random updating, rather than in response to a specific trigger.
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_Wiring">
            <summary>
            Used when wiring activates an effect like a cannon or fireworks
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_WorldEvent">
            <summary>
            Inconsistently used by vanilla when spawning more exotic things like the lunatic pillars, cultist ritual, fairies etc. <br/>
            Don't expect this to distinguish between NPCs spawned due to an event/invasion. Most of those use <see cref="T:Terraria.DataStructures.EntitySource_SpawnNPC"/>
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.EntitySource_WorldGen">
            <summary>
            Used when spawning Town NPCs during world generation
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.X">
            <summary>
            The x-coordinate of tile this bobber is on, in tile coordinates.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.Y">
            <summary>
            The y-coordinate of tile this bobber is on, in tile coordinates.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.bobberType">
            <summary>
            The projectile type (<see cref="F:Terraria.Projectile.type"/>) of this bobber.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.common">
            <summary>
            If <see langword="true"/>, this fishing attempt can catch common items.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.uncommon">
            <summary>
            If <see langword="true"/>, this fishing attempt can catch uncommon items.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.rare">
            <summary>
            If <see langword="true"/>, this fishing attempt can catch rare items.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.veryrare">
            <summary>
            If <see langword="true"/>, this fishing attempt can catch very rare items.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.legendary">
            <summary>
            If <see langword="true"/>, this fishing attempt can catch legendary items.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.crate">
            <summary>
            If <see langword="true"/>, this fishing attempt can catch crates.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.inLava">
            <summary>
            If <see langword="true"/>, this fishing attempt is in lava.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.inHoney">
            <summary>
            If <see langword="true"/>, this fishing attempt is in honey.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.waterTilesCount">
            <summary>
            The number of liquid tiles counted for this fishing attempt.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.waterNeededToFish">
            <summary>
            The number of liquid tiles needed for proper fishing. If <see cref="F:Terraria.DataStructures.FishingAttempt.waterTilesCount"/> is less than this, then the player will recieve a <see cref="F:Terraria.DataStructures.FishingAttempt.waterQuality"/> percent debuff to their fishing power.
            <br/> This debuff is automatically applied to <see cref="F:Terraria.DataStructures.FishingAttempt.fishingLevel"/>.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.waterQuality">
            <summary>
            If positive, the percent decrease in fishing power this attempt has from missing liquid tiles.
            <br/> This is <strong>not</strong> how full the body of liquid is.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.chumsInWater">
            <summary>
            The number of chums applied to this attempt. Fishing power from chum is automatically added to <see cref="F:Terraria.DataStructures.FishingAttempt.fishingLevel"/>.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.fishingLevel">
            <summary>
            The fishing power of this attempt after all modifications. The higher this number, the better the attempt will go.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.CanFishInLava">
            <summary>
            If <see langword="true"/>, then this attempt can succeed if it is <see cref="F:Terraria.DataStructures.FishingAttempt.inLava"/>.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.atmo">
            <summary>
            How high in the sky this attempt takes place, in the range [<c>0.25f</c>, <c>1f</c>]. Any value below <c>1f</c> takes place approximately in the top 10% of the world.
            <br/> The lower this value, the smaller <see cref="F:Terraria.DataStructures.FishingAttempt.waterNeededToFish"/> will be, which is automatically applied.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.questFish">
            <summary>
            The item type (<see cref="F:Terraria.Item.type"/>) of the quest fish the Angler wants, or <c>-1</c> if this player can't catch that fish today.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.heightLevel">
            <summary>
            A representation of the current height.
            <br/> <c>0</c> is space-level (50% of <see cref="F:Terraria.Main.worldSurface"/> or higher).
            <br/> <c>1</c> is the surface (<see cref="P:Terraria.Player.ZoneOverworldHeight"/>).
            <br/> <c>2</c> is underground (<see cref="P:Terraria.Player.ZoneDirtLayerHeight"/>).
            <br/> <c>3</c> is the caverns (<see cref="P:Terraria.Player.ZoneRockLayerHeight"/>).
            <br/> <c>4</c> is the underworld (<see cref="P:Terraria.Player.ZoneUnderworldHeight"/>).
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.rolledItemDrop">
            <summary>
            The item type (<see cref="F:Terraria.Item.type"/>) of the caught item.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FishingAttempt.rolledEnemySpawn">
            <summary>
            The item type (<see cref="F:Terraria.Item.type"/>) of the caught NPC.
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.FlowerPacketInfo">
            <summary>
            Determines the styles of <see cref="F:Terraria.ID.TileID.Plants"/> that an <see cref="T:Terraria.Item"/> creates on certain types of grass.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FlowerPacketInfo.stylesOnPurity">
            <summary>
            The tile styles created on pure grass or in planters (<see cref="F:Terraria.ID.TileID.Grass"/>, <see cref="F:Terraria.ID.TileID.ClayPot"/>, <see cref="F:Terraria.ID.TileID.PlanterBox"/>, <see cref="F:Terraria.ID.TileID.GolfGrass"/>, <see cref="F:Terraria.ID.TileID.RockGolemHead"/>).
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FlowerPacketInfo.stylesOnCorruption">
            <summary>
            <strong>Unused.</strong>
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FlowerPacketInfo.stylesOnCrimson">
            <summary>
            <strong>Unused.</strong>
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.FlowerPacketInfo.stylesOnHallow">
            <summary>
            <strong>Unused.</strong>
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.IEntitySource">
            <summary>
            This object encapsulates context information about the source of a particular spawning event of an Item/Projectile/NPC/etc. Aids in facilitating many modding situations and used in various OnSpawn hooks.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/IEntitySource">IEntitySource Guide</see> teaches how and why to use this.
            </summary>
        </member>
        <member name="P:Terraria.DataStructures.IEntitySource.Context">
            <summary>
            Additional context identifier, particularly useful for set bonuses or accessory affects. See <see cref="T:Terraria.ID.ItemSourceID"/> and <see cref="T:Terraria.ID.ProjectileSourceID"/> for vanilla uses
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.BuyItemCreationContext">
            <summary>
            Created in the context of a player buying an item from a shop. Very similar to <seealso cref="T:Terraria.DataStructures.RecipeItemCreationContext"/> in
            functionality.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BuyItemCreationContext.DestinationStack">
            <summary>
            An item stack that the bought item will be combined with (via OnStack).
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.BuyItemCreationContext.VendorNPC">
            <summary>
            The NPC that this item was bought from.
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.NPCDebuffImmunityData">
            <summary>
            Determines the default debuff immunities of an <see cref="T:Terraria.NPC"/>.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.NPCDebuffImmunityData.ImmuneToWhips">
            <summary>
            If <see langword="true"/>, this NPC type (<see cref="F:Terraria.NPC.type"/>) will be immune to all whip debuffs (<see cref="F:Terraria.ID.BuffID.Sets.IsAnNPCWhipDebuff"/>).
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.NPCDebuffImmunityData.ImmuneToAllBuffsThatAreNotWhips">
            <summary>
            If <see langword="true"/>, this NPC type (<see cref="F:Terraria.NPC.type"/>) will be immune to all non-whip debuffs (<see cref="F:Terraria.ID.BuffID.Sets.IsAnNPCWhipDebuff"/>).
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.NPCDebuffImmunityData.SpecificallyImmuneTo">
            <summary>
            This NPC type (<see cref="F:Terraria.NPC.type"/>) will be immune to all <see cref="T:Terraria.ID.BuffID"/>s in this array.
            </summary>
        </member>
        <member name="M:Terraria.DataStructures.NPCDebuffImmunityData.ApplyToNPC(Terraria.NPC)">
            <summary>
            Sets up <see cref="F:Terraria.NPC.buffImmune"/> to be immune to the stored buffs.
            </summary>
            <param name="npc">The NPC to apply immunities to.</param>
        </member>
        <member name="M:Terraria.DataStructures.PlayerDeathReason.TryGetCausingEntity(Terraria.Entity@)">
            <summary>
            Only safe for use when the local player is the one taking damage! <br/>
            Projectile ids are not synchronized across clients, and NPCs may have despawned/died by the time a strike/death packet arrives. <br/>
            Just because the method returns true, doesn't mean that the _correct_ NPC/Projectile is returned on remote clients.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.TorsoGroup">
            <summary> Adds <see cref="F:Terraria.DataStructures.PlayerDrawSet.torsoOffset"/> to <see cref="F:Terraria.DataStructures.PlayerDrawSet.Position"/> and <see cref="F:Terraria.DataStructures.PlayerDrawSet.ItemLocation"/> vectors' Y axes. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.MountGroup">
            <summary> Adds <see cref="F:Terraria.DataStructures.PlayerDrawSet.mountOffSet"/>/2 to <see cref="F:Terraria.DataStructures.PlayerDrawSet.Position"/> vector's Y axis. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.JimsCloak">
            <summary> Draws Jim's Cloak, if the player is wearing Jim's Leggings (a developer item). </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.MountBack">
            <summary> Draws the back textures of the player's mount. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Carpet">
            <summary> Draws the Flying Carpet accessory, if the player has it equipped and is using it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.PortableStool">
            <summary> Draws the Step Stool accessory, if the player has it equipped and is using it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.ElectrifiedDebuffBack">
            <summary> Draws the back textures of the Electrified debuff, if the player has it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.ForbiddenSetRing">
            <summary> Draws the 'Forbidden Sign' if the player has a full 'Forbidden Armor' set equipped. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.SafemanSun">
            <summary> Draws a sun above the player's head if they have "Safeman's Sunny Day" headgear equipped. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.WebbedDebuffBack">
            <summary> Draws the back textures of the Webbed debuff, if the player has it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.LeinforsHairShampoo">
            <summary> Draws effects of "Leinfors' Luxury Shampoo", if the player has it equipped. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Backpacks">
            <summary> Draws the player's held item's backpack. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Tails">
            <summary> Draws the player's tails vanities. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Wings">
            <summary> Draws the player's wings. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.HairBack">
            <summary> Draws the player's under-headgear hair. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.BackAcc">
            <summary> Draws the player's back accessories. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.HeadBack">
            <summary> Draws the back textures of the player's head, including armor. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.BalloonAcc">
            <summary> Draws the player's balloon accessory, if they have one. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Skin">
            <summary> Draws the player's body and leg skin. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Leggings">
            <summary> Draws the player's leg armor or pants and shoes. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Shoes">
            <summary> Draws the player's shoes. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Robe">
            <summary> Draws the player's robe. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.SkinLongCoat">
            <summary> Draws the longcoat default clothing style, if the player has it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.ArmorLongCoat">
            <summary> Draws the currently equipped armor's longcoat, if it has one. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Torso">
            <summary> Draws the player's body armor or shirts. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.OffhandAcc">
            <summary> Draws the player's off-hand accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.WaistAcc">
            <summary> Draws the player's waist accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.NeckAcc">
            <summary> Draws the player's neck accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Head">
            <summary> Draws the player's head, including hair, armor, and etc. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.FinchNest">
            <summary> Draws a finch nest on the player's head, if the player has a finch summoned. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.FaceAcc">
            <summary> Draws the player's face accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.MountFront">
            <summary> Draws the front textures of the player's mount. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Pulley">
            <summary> Draws the pulley if the player is hanging on a rope. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.JimsDroneRadio">
            <summary> Draws the pulley if the player is hanging on a rope. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.FrontAccBack">
            <summary> Draws the back part of player's front accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.Shield">
            <summary> Draws the player's shield accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.SolarShield">
            <summary> Draws the player's solar shield if the player has one. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.ArmOverItem">
            <summary> Draws the player's main arm (including the armor's if applicable), when it should appear over the held item. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.HandOnAcc">
            <summary> Draws the player's hand on accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.BladedGlove">
            <summary> Draws the Bladed Glove item, if the player is currently using it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.ProjectileOverArm">
            <summary> Draws the player's held projectile, if it should be drawn in front of the held item and arms. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.FrozenOrWebbedDebuff">
            <summary> Draws the front textures of either Frozen or Webbed debuffs, if the player has one of them. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.ElectrifiedDebuffFront">
            <summary> Draws the front textures of the Electrified debuff, if the player has it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.IceBarrier">
            <summary> Draws the textures of the Ice Barrier buff, if the player has it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.CaptureTheGem">
            <summary> Draws a big gem above the player, if the player is currently in possession of a 'Capture The Gem' gem item. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.BeetleBuff">
            <summary> Draws the effects of Beetle Armor's Set buffs, if the player currently has any. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.EyebrellaCloud">
            <summary> Draws the effects of Eyebrella Cloud, if the player currently has it. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.FrontAccFront">
            <summary> Draws the front part of player's front accessory. </summary>
        </member>
        <member name="F:Terraria.DataStructures.PlayerDrawLayers.HeldItem">
            <summary> Draws the player's held item. </summary>
        </member>
        <member name="F:Terraria.DataStructures.RecipeItemCreationContext.DestinationStack">
            <summary>
            An item stack that the created item will be combined with (via OnStack). For normal crafting, this is Main.mouseItem
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.RecipeItemCreationContext.ConsumedItems">
            <summary>
            Cloned list of Items consumed when crafting.
            </summary>
        </member>
        <member name="M:Terraria.DataStructures.TileEntitiesManager.GetTileEntity``1(System.Int32)">
            <summary> Gets the template TileEntity object with the given id (not the new instance which gets added to the world as the game is played). This method will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
        </member>
        <member name="M:Terraria.DataStructures.TileEntitiesManager.TryGetTileEntity``1(System.Int32,``0@)">
            <summary> Attempts to get the template TileEntity object with the given id (not the new instance which gets added to the world as the game is played). </summary>
        </member>
        <member name="M:Terraria.DataStructures.TileEntity.SaveData(Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to save custom data for this tile entity.
            <br/>
            <br/><b>NOTE:</b> The provided tag is always empty by default, and is provided as an argument only for the sake of convenience and optimization.
            <br/><b>NOTE:</b> Try to only save data that isn't default values.
            </summary>
            <param name="tag"> The TagCompound to save data into. Note that this is always empty by default, and is provided as an argument only for the sake of convenience and optimization. </param>
        </member>
        <member name="M:Terraria.DataStructures.TileEntity.LoadData(Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to load custom data that you have saved for this tile entity.
            <br/><b>Try to write defensive loading code that won't crash if something's missing.</b>
            </summary>
            <param name="tag"> The TagCompound to load data from. </param>
        </member>
        <member name="M:Terraria.DataStructures.TileEntity.NetSend(System.IO.BinaryWriter)">
            <summary>
            Allows you to send custom data for this tile entity between client and server, which will be handled in <see cref="M:Terraria.DataStructures.TileEntity.NetReceive(System.IO.BinaryReader)"/>.
            <br/>Called while sending tile data (!lightSend) and when <see cref="F:Terraria.ID.MessageID.TileEntitySharing"/> is sent (lightSend).
            <br/>Only called on the server.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Terraria.DataStructures.TileEntity.NetReceive(System.IO.BinaryReader)">
            <summary>
            Receives custom data sent in the <see cref="M:Terraria.DataStructures.TileEntity.NetSend(System.IO.BinaryWriter)"/> hook.
            <br/>Called while receiving tile data (!lightReceive) and when <see cref="F:Terraria.ID.MessageID.TileEntitySharing"/> is received (lightReceive).
            <br/>Only called on the client.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="T:Terraria.DataStructures.TileRestingInfo">
            <summary>
            Holds data required for offsetting an entity when it rests on a tile (sitting/sleeping).
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.TileRestingInfo.RestingEntity">
            <summary>
            The resting entity (Player or NPC). Can be null if not available from the context.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.TileRestingInfo.AnchorTilePosition">
            <summary>
            The bottom-most position of the resting tile in tile coordinates, affecting logic for resetting (invalid) resting state and used to align the hitbox.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.TileRestingInfo.VisualOffset">
            <summary>
            The visual offset of the entity, not affecting any logic.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.TileRestingInfo.TargetDirection">
            <summary>
            Direction the entity is facing while resting.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.TileRestingInfo.DirectionOffset">
            <summary>
            Length of the entity position offset applied in the X direction based on targetDirection.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.TileRestingInfo.FinalOffset">
            <summary>
            Offset applied to the final anchor position. Use with caution, vanilla does not utilize it!
            </summary>
        </member>
        <member name="T:Terraria.DataStructures.VanillaPlayerDrawLayer.DrawFunc">
            <summary> The delegate of this method, which can either do the actual drawing or add draw data, depending on what kind of layer this is. </summary>
        </member>
        <member name="T:Terraria.DataStructures.VanillaPlayerDrawLayer.Condition">
            <summary> The delegate of this method, which can either do the actual drawing or add draw data, depending on what kind of layer this is. </summary>
        </member>
        <member name="M:Terraria.DataStructures.VanillaPlayerDrawLayer.#ctor(System.String,Terraria.DataStructures.VanillaPlayerDrawLayer.DrawFunc,Terraria.ModLoader.PlayerDrawLayer.Transformation,System.Boolean,Terraria.DataStructures.VanillaPlayerDrawLayer.Condition,Terraria.ModLoader.PlayerDrawLayer.Position)">
            <summary> Creates a LegacyPlayerLayer with the given mod name, identifier name, and drawing action. </summary>
        </member>
        <member name="T:Terraria.DataStructures.VanillaPlayerDrawTransform.LayerFunction">
            <summary> The delegate of this method, which can either do the actual drawing or add draw data, depending on what kind of layer this is. </summary>
        </member>
        <member name="M:Terraria.DataStructures.VanillaPlayerDrawTransform.#ctor(Terraria.DataStructures.VanillaPlayerDrawTransform.LayerFunction,Terraria.DataStructures.VanillaPlayerDrawTransform.LayerFunction,Terraria.ModLoader.PlayerDrawLayer.Transformation)">
            <summary> Creates a LegacyPlayerLayer with the given mod name, identifier name, and drawing action. </summary>
        </member>
        <member name="T:Terraria.DataStructures.WingStats">
            <summary>
            Stores the stats and settings for a <see cref="T:Terraria.ID.ArmorIDs.Wing"/> equip.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.WingStats.FlyTime">
            <summary>
            The time in ticks that a player can fly for.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.WingStats.AccRunSpeedOverride">
            <summary>
            Overrides the value of <see cref="F:Terraria.Player.accRunSpeed"/> while the player is in the air.
            <br/> Only applies if this value is greater than <see cref="F:Terraria.Player.accRunSpeed"/>.
            <br/> If <c>-1f</c>, then no effect.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.WingStats.AccRunAccelerationMult">
            <summary>
            A multiplier applied to <see cref="F:Terraria.Player.runAcceleration"/> while the player is in the air.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.WingStats.HasDownHoverStats">
            <summary>
            If <see langword="true"/>, then players can use these wings to hover.
            <br/> When hovering, <see cref="F:Terraria.DataStructures.WingStats.DownHoverSpeedOverride"/> and <see cref="F:Terraria.DataStructures.WingStats.DownHoverAccelerationMult"/> apply instead of <see cref="F:Terraria.DataStructures.WingStats.AccRunSpeedOverride"/> and <see cref="F:Terraria.DataStructures.WingStats.AccRunAccelerationMult"/>, respectively.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.WingStats.DownHoverSpeedOverride">
            <summary>
            Overrides the value of <see cref="F:Terraria.DataStructures.WingStats.AccRunSpeedOverride"/> if <see cref="F:Terraria.DataStructures.WingStats.HasDownHoverStats"/> is <see langword="true"/> and the player is hovering.
            </summary>
        </member>
        <member name="F:Terraria.DataStructures.WingStats.DownHoverAccelerationMult">
            <summary>
            Overrides the value of <see cref="F:Terraria.DataStructures.WingStats.AccRunAccelerationMult"/> if <see cref="F:Terraria.DataStructures.WingStats.HasDownHoverStats"/> is <see langword="true"/> and the player is hovering.
            </summary>
        </member>
        <member name="M:Terraria.DataStructures.WingStats.#ctor(System.Int32,System.Single,System.Single,System.Boolean,System.Single,System.Single)">
            <summary>
            Create a new <see cref="T:Terraria.DataStructures.WingStats"/> with the provided stats.
            </summary>
        </member>
        <member name="M:Terraria.DataStructures.WingStats.WithSpeedBoost(System.Single)">
            <summary>
            Creates a new <see cref="T:Terraria.DataStructures.WingStats"/> with a speed multiplier applied to <see cref="F:Terraria.DataStructures.WingStats.AccRunSpeedOverride"/> and <see cref="F:Terraria.DataStructures.WingStats.DownHoverSpeedOverride"/>.
            </summary>
            <param name="multiplier">The multiplier.</param>
            <returns>The modified <see cref="T:Terraria.DataStructures.WingStats"/>.</returns>
        </member>
        <member name="F:Terraria.Entity.whoAmI">
            <summary>
            The index of this Entity within its specific array. These arrays track the entities in the world.
            <br/> Item: unused
            <br/> Projectile: <see cref="F:Terraria.Main.projectile"/>
            <br/> NPC: <see cref="F:Terraria.Main.npc"/>
            <br/> Player: <see cref="F:Terraria.Main.player"/>
            </summary>
        </member>
        <member name="F:Terraria.Entity.active">
            <summary>
            If true, the Entity actually exists within the game world. Within the specific entity array, if active is false, the entity is junk data. Always check active if iterating over the entity array.
            </summary>
        </member>
        <member name="F:Terraria.Entity.position">
            <summary>
            The position of this Entity in world coordinates.
            </summary>
        </member>
        <member name="F:Terraria.Entity.velocity">
            <summary>
            The velocity of this Entity in world coordinates per tick.
            </summary>
        </member>
        <member name="F:Terraria.Entity.width">
            <summary>
            The width of this Entity's hitbox, in pixels.
            </summary>
        </member>
        <member name="F:Terraria.Entity.height">
            <summary>
            The height of this Entity's hitbox, in pixels.
            </summary>
        </member>
        <member name="F:Terraria.Entity.wet">
            <summary>
            The Entity is currently in water.
            <br/> Projectile: Affects movement speed and some projectiles die when wet. <see cref="F:Terraria.Projectile.ignoreWater"/> prevents this.
            </summary>
        </member>
        <member name="M:Terraria.GameContent.Bestiary.BestiaryDatabase.GetBestiaryEntriesByMod(Terraria.ModLoader.Mod)">
            <summary>
            Gets entries from the database created by the mod specified
            </summary>
            <param name="mod">The mod to find entries from (null for Terraria)</param>
            <returns>A list of the entries created by the mod specified or null if it created none</returns>
        </member>
        <member name="M:Terraria.GameContent.Bestiary.BestiaryDatabase.GetCompletedPercentByMod(Terraria.ModLoader.Mod)">
            <summary>
            Gets the completed percent of the given mod's bestiary
            </summary>
            <param name="mod">The mod to calculate bestiary completeness (null for Terraria)</param>
            <returns>A float ranging from 0 to 1 representing the completeness of the bestiary or returns -1 if the mod has no entries</returns>
        </member>
        <member name="F:Terraria.GameContent.ChildSafety.SafeGore">
            <summary>
            If <see langword="false"/> for a given gore type (<see cref="F:Terraria.Gore.type"/>), then that gore will turn into a puff of smoke when Blood and Gore is disabled.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.GameContent.ChildSafety.SafeDust">
            <summary>
            If <see langword="false"/> for a given dust type (<see cref="F:Terraria.Dust.type"/>), then that dust will turn into a puff of smoke when Blood and Gore is disabled.
            <br/> Defaults to <see langword="true"/>.
            </summary>
        </member>
        <member name="M:Terraria.GameContent.Creative.CreativeUI.GetSacrificeCount(System.Int32,System.Boolean@)">
            <summary>
            Method that allows you to easily get how many items of a type you have researched so far
            </summary>
            <param name="type">The item type to check.</param>
            <param name="fullyResearched">True if it is fully researched.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.GameContent.Creative.CreativeUI.GetSacrificesRemaining(System.Int32)">
            <summary>
            Method that allows you to easily get how many items of a type you need to fully research that item
            </summary>
            <param name="type">The item type to check.</param>
            <returns>The number of sacrifices remaining , or null if the item can never be unlocked.</returns>
        </member>
        <member name="M:Terraria.GameContent.Drawing.TileDrawing.EmitLivingTreeLeaf(System.Int32,System.Int32,System.Int32)">
            <summary>
            Emits a single living tree leaf or other gore instance directly below the target tile.<br/>
            With a 50% chance, also emits a second leaf or other gore instance directly to the side of the target tile, dependent on wind direction.<br/>
            Used by vanilla's two types of Living Trees, from which this method and its two submethods get their collective name.<br/>
            </summary>
            <param name="i">The X coordinate of the target tile.</param>
            <param name="j">The Y coordinate of the target tile.</param>
            <param name="leafGoreType">The numerical ID of the leaf or other gore instance that should be spawned.</param>
        </member>
        <member name="M:Terraria.GameContent.Drawing.TileDrawing.EmitLivingTreeLeaf_Below(System.Int32,System.Int32,System.Int32)">
            <summary>
            Emits a single living tree leaf or other gore instance directly below the target tile.<br/>
            </summary>
            <param name="x">The X coordinate of the target tile.</param>
            <param name="y">The Y coordinate of the target tile.</param>
            <param name="leafGoreType">The numerical ID of the leaf or other gore instance that should be spawned.</param>
        </member>
        <member name="M:Terraria.GameContent.Drawing.TileDrawing.EmitLivingTreeLeaf_Sideways(System.Int32,System.Int32,System.Int32)">
            <summary>
            Emits a single living tree leaf or other gore instance directly to the side of the target tile, dependent on wind direction.<br/>
            </summary>
            <param name="x">The X coordinate of the target tile.</param>
            <param name="y">The Y coordinate of the target tile.</param>
            <param name="leafGoreType">The numerical ID of the leaf or other gore instance that should be spawned.</param>
        </member>
        <member name="M:Terraria.GameContent.Drawing.TileDrawing.GetWindCycle(System.Int32,System.Int32,System.Double)">
            <summary>
            Fetches the degree to which wind would/should affect a tile at the given location.
            </summary>
            <param name="x">The X coordinate of the theoretical target tile.</param>
            <param name="y">The Y coordinate of the theoretical target tile.</param>
            <param name="windCounter"></param>
            <returns>
            If <see cref="F:Terraria.Main.SettingsEnabled_TilesSwayInWind"/> is false or the tile is below surface level, 0.<br/>
            Otherwise, returns a value from 0.08f to 0.18f.
            </returns>
        </member>
        <member name="M:Terraria.GameContent.Drawing.TileDrawing.ShouldSwayInWind(System.Int32,System.Int32,Terraria.Tile)">
            <summary>
            Determines whether or not the tile at the given location should be able to sway in the wind.
            </summary>
            <param name="x">The X coordinate of the given tile.</param>
            <param name="y">The Y coordinate of the given tile.</param>
            <param name="tileCache">The tile to determine the sway-in-wind-ability of.</param>
            <returns>
            False if something dictates that the tile should NOT be able to sway in the wind; returns true by default.<br/>
            Vanilla conditions that prevent wind sway are, in this order:<br/>
            - if <see cref="F:Terraria.Main.SettingsEnabled_TilesSwayInWind"/> is false<br/>
            - if <see cref="F:Terraria.ID.TileID.Sets.SwaysInWindBasic"/> is false for the tile type of <paramref name="tileCache"/><br/>
            - if the tile is an Orange Bloodroot
            - if the tile is a Pink Prickly Pear on any vanilla cactus variant
            </returns>
        </member>
        <member name="M:Terraria.GameContent.Drawing.TileDrawing.GetWindGridPush(System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Determines how much wind should affect a theoretical tile at the target location on the current update tick.
            </summary>
            <param name="i">The X coordinate of the theoretical target tile.</param>
            <param name="j">The Y coordinate of the theoretical target tile.</param>
            <param name="pushAnimationTimeTotal">The total amount of time, in ticks, that a wind push cycle for the theoretical target tile should last for.</param>
            <param name="pushForcePerFrame">The amount which wind should affect the theoretical target tile per frame.</param>
            <returns>
            The degree to which wind should affect the theoretical target tile, represented as a float.
            </returns>
        </member>
        <member name="M:Terraria.GameContent.Drawing.TileDrawing.GetWindGridPushComplex(System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Boolean)">
            <summary>
            Determines how much wind should affect a theoretical tile at the target location on the current update tick.<br/>
            More complex version of <see cref="M:Terraria.GameContent.Drawing.TileDrawing.GetWindGridPush(System.Int32,System.Int32,System.Int32,System.Single)"/>.
            </summary>
            <param name="i">The X coordinate of the theoretical target tile.</param>
            <param name="j">The Y coordinate of the theoretical target tile.</param>
            <param name="pushAnimationTimeTotal">The total amount of time, in ticks, that a wind push cycle for the theoretical target tile should last for.</param>
            <param name="totalPushForce"></param>
            <param name="loops"></param>
            <param name="flipDirectionPerLoop"></param>
            <returns></returns>
        </member>
        <member name="P:Terraria.GameContent.Drawing.TileDrawing.Wind">
            <summary>
            The wind grid used to exert wind effects on tiles.
            </summary>
        </member>
        <member name="M:Terraria.GameContent.Drawing.TileDrawing.IsTileDangerous(System.Int32,System.Int32,Terraria.Player)">
            <summary>
            Checks if a tile at the given coordinates counts towards tile coloring from the Dangersense buff.
            <br/>Vanilla only uses Main.LocalPlayer for <paramref name="player"/>
            </summary>
        </member>
        <member name="M:Terraria.GameContent.Events.Sandstorm.StartSandstorm">
            <summary>
            Starts sandstorm for a random amount of time. Should be called on the server (netMode != client) - the method syncs it automatically.
            </summary>
        </member>
        <member name="M:Terraria.GameContent.Events.Sandstorm.StopSandstorm">
            <summary>
            Stops sandstorm. Should be called on the server (netMode != client) - the method syncs it automatically.
            </summary>
        </member>
        <member name="T:Terraria.GameContent.ItemDropRules.AlwaysAtleastOneSuccessDropRule">
            <summary>
            Re-runs all drop rules if none succeded.
            </summary>
        </member>
        <member name="T:Terraria.GameContent.ItemDropRules.FewFromOptionsDropRule">
            <summary>
            Runs multiple rules if successes.
            </summary>
        </member>
        <member name="T:Terraria.GameContent.ItemDropRules.FewFromOptionsNotScaledWithLuckDropRule">
            <summary>
            Runs multiple rules if successes.
            Does not use player luck.
            </summary>
        </member>
        <member name="T:Terraria.GameContent.ItemDropRules.FewFromRulesRule">
            <summary>
            Runs multiple drop rules if successes.
            </summary>
        </member>
        <member name="T:Terraria.GameContent.ItemDropRules.HerbBagDropsItemDropRule">
            <summary>
            Used just by Herb Bag. Horribly hardcoded. Do not use if you can.
            </summary>
        </member>
        <member name="T:Terraria.GameContent.ItemDropRules.SequentialRulesNotScalingWithLuckRule">
            <summary>
            Runs the provided rules in order, stopping after a rule succeeds.<br/>
            Does not use player luck.<br/>
            </summary>
        </member>
        <member name="T:Terraria.GameContent.ItemDropRules.SequentialRulesRule">
            <summary>
            Runs the provided rules in order, stopping after a rule succeeds.<br/>
            </summary>
        </member>
        <member name="T:Terraria.GameContent.Items.ItemVariant">
            <summary>
            Describes a variant of an <see cref="T:Terraria.Item"/>.
            </summary>
        </member>
        <member name="F:Terraria.GameContent.Items.ItemVariant.Description">
            <summary>
            The localized description of this <see cref="T:Terraria.GameContent.Items.ItemVariant"/>.
            </summary>
        </member>
        <member name="M:Terraria.GameContent.Items.ItemVariant.#ctor(Terraria.Localization.LocalizedText)">
            <summary>
            Creates a new <see cref="T:Terraria.GameContent.Items.ItemVariant"/> with the provided localized description.
            </summary>
            <param name="description">The localized description to use.</param>
        </member>
        <member name="T:Terraria.GameContent.Items.ItemVariants">
            <summary>
            Handles conditional variants for <see cref="T:Terraria.Item"/>s, commonly used for secret seeds.
            </summary>
        </member>
        <member name="F:Terraria.GameContent.Items.ItemVariants.StrongerVariant">
            <summary>
            Represents the stronger variant of items used on the Remix seed.
            </summary>
        </member>
        <member name="F:Terraria.GameContent.Items.ItemVariants.WeakerVariant">
            <summary>
            Represents the weaker variant of items used on the Remix seed.
            </summary>
        </member>
        <member name="F:Terraria.GameContent.Items.ItemVariants.RebalancedVariant">
            <summary>
            Represents the rebalanced variant of items used on the "For the Worthy" seed.
            </summary>
        </member>
        <member name="F:Terraria.GameContent.Items.ItemVariants.EnabledVariant">
            <summary>
            Represents a variant of an item that is conditionally enabled.
            </summary>
        </member>
        <member name="F:Terraria.GameContent.Items.ItemVariants.DisabledBossSummonVariant">
            <summary>
            Represents a variant of a boss summoning item that is conditionally disabled.
            </summary>
        </member>
        <member name="M:Terraria.GameContent.Items.ItemVariants.GetVariants(System.Int32)">
            <summary>
            Gets all of the <see cref="T:Terraria.GameContent.Items.ItemVariant"/>s associated with <paramref name="itemId"/>.
            </summary>
            <param name="itemId">The <see cref="F:Terraria.Item.type"/> to get <see cref="T:Terraria.GameContent.Items.ItemVariant"/>s for.</param>
            <returns>A list of all registered <see cref="T:Terraria.GameContent.Items.ItemVariant"/>s for <paramref name="itemId"/>.</returns>
        </member>
        <member name="M:Terraria.GameContent.Items.ItemVariants.AddVariant(System.Int32,Terraria.GameContent.Items.ItemVariant,Terraria.Condition[])">
            <summary>
            Registers an <see cref="T:Terraria.GameContent.Items.ItemVariant"/> for the given <see cref="F:Terraria.Item.type"/>.
            </summary>
            <param name="itemId">The <see cref="F:Terraria.Item.type"/> to register the <see cref="T:Terraria.GameContent.Items.ItemVariant"/> for.</param>
            <param name="variant">The <see cref="T:Terraria.GameContent.Items.ItemVariant"/> to register to <paramref name="itemId"/>.</param>
            <param name="conditions">The conditions under which <see cref="T:Terraria.Item"/>s of type <paramref name="itemId"/> will have <paramref name="variant"/> applied. (<see cref="M:Terraria.GameContent.Items.ItemVariants.SelectVariant(System.Int32)"/>)</param>
        </member>
        <member name="M:Terraria.GameContent.Items.ItemVariants.HasVariant(System.Int32,Terraria.GameContent.Items.ItemVariant)">
            <summary>
            Determines if an <see cref="F:Terraria.Item.type"/> has a particular <see cref="T:Terraria.GameContent.Items.ItemVariant"/>.
            </summary>
            <param name="itemId">The <see cref="F:Terraria.Item.type"/> to check.</param>
            <param name="variant">The <see cref="T:Terraria.GameContent.Items.ItemVariant"/> to check for.</param>
            <returns><see langword="true"/> if <paramref name="itemId"/> has a registered <see cref="T:Terraria.GameContent.Items.ItemVariant"/> of type <paramref name="variant"/>, <see langword="false"/> otherwise.</returns>
            <remarks>This method only checks if the given <see cref="T:Terraria.GameContent.Items.ItemVariant"/> exists, not if it will be applied.</remarks>
        </member>
        <member name="M:Terraria.GameContent.Items.ItemVariants.SelectVariant(System.Int32)">
            <summary>
            Determines which <see cref="T:Terraria.GameContent.Items.ItemVariant"/> should be applied to an item of type <paramref name="itemId"/>.
            </summary>
            <param name="itemId">The <see cref="F:Terraria.Item.type"/> to check.</param>
            <returns>The <see cref="T:Terraria.GameContent.Items.ItemVariant"/> to use under the current conditions, or <see langword="null"/> if no appropriate <see cref="T:Terraria.GameContent.Items.ItemVariant"/> exists.</returns>
        </member>
        <member name="T:Terraria.GameContent.Profiles.DefaultNPCProfile">
            <summary>
            Class that is some-what identical to <seealso cref="T:Terraria.GameContent.Profiles.LegacyNPCProfile"/> that allows for
            modded texture usage. Also allows for any potential children classes to mess with the fields.
            </summary>
        </member>
        <member name="M:Terraria.GameContent.UI.BigProgressBar.BigProgressBarHelper.DrawHealthText(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Vector2,System.Single,System.Single)">
            <summary>
            Draws "<paramref name="current"/>/<paramref name="max"/>" as text centered on <paramref name="area"/>, offset by <paramref name="textOffset"/>.
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="area">The Rectangle that the text is centered on</param>
            <param name="textOffset">Offset for the text position</param>
            <param name="current">Number shown left of the "/"</param>
            <param name="max">Number shown right of the "/"</param>
        </member>
        <member name="M:Terraria.GameContent.UI.BigProgressBar.BigProgressBarSystem.TryGetSpecialVanillaBossBar(System.Int32,Terraria.GameContent.UI.BigProgressBar.IBigProgressBar@)">
            <summary>
            Gets the special IBigProgressBar associated with this vanilla NPCs netID (usually the type).
            <para> Reminder: If no special bar exists or NPC.BossBar is not assigned, any NPC with a boss head index will automatically display a common boss bar shared among all simple bosses.</para>
            </summary>
            <param name="netID">The NPC netID (usually the type)</param>
            <param name="bossBar">When this method returns, contains the IBigProgressBar associated with the specified NPC netID</param>
            <returns><see langword="true"/> if IBigProgressBar exists; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Terraria.GameContent.UI.CustomCurrencyManager.TryGetCurrencySystem(System.Int32,Terraria.GameContent.UI.CustomCurrencySystem@)">
            <summary>
            Attempts to retrieve a CustomCurrencySystem object with the specified id from the _currencies dictionary.
            </summary>
            <param name="id">The id of the currency system to retrieve.</param>
            <param name="system">When this method returns, contains the retrieved CustomCurrencySystem object, or null if the retrieval failed.</param>
            <returns>true if the retrieval was successful; otherwise, false.</returns>
        </member>
        <member name="P:Terraria.GameContent.UI.ResourceSets.PlayerStatsSnapshot.AmountOfLifeHearts">
            <summary>
            How many life hearts should be drawn
            </summary>
        </member>
        <member name="P:Terraria.GameContent.UI.ResourceSets.PlayerStatsSnapshot.AmountOfManaStars">
            <summary>
            How many mana stars should be drawn
            </summary>
        </member>
        <member name="M:Terraria.GameInput.PlayerInput.LockVanillaMouseScroll(System.String)">
            <summary>
            Locks the vanilla scrollbar for the upcoming cycle when called. Autoclears in Player.
            Takes a string to denote that your UI has registered to lock vanilla scrolling. String does not need to be unique.
            </summary>
        </member>
        <member name="M:Terraria.Gore.NewGorePerfect(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Single)">
            <summary>
            Spawns a gore with an exact position and velocity, no randomization
            </summary>
            <param name="source">Recommend using <see cref="M:Terraria.Entity.GetSource_Death(System.String)"/> or <see cref="M:Terraria.Entity.GetSource_FromThis(System.String)"/>" as the spawn source</param>
            <param name="Position"></param>
            <param name="Velocity"></param>
            <param name="Type"></param>
            <param name="Scale"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Gore.NewGoreDirect(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Single)">
            <summary>
            Spawns a gore with given properties
            </summary>
            <param name="source">Recommend using <see cref="M:Terraria.Entity.GetSource_Death(System.String)"/> or <see cref="M:Terraria.Entity.GetSource_FromThis(System.String)"/>" as the spawn source</param>
            <param name="Position"></param>
            <param name="Velocity"></param>
            <param name="Type"></param>
            <param name="Scale"></param>
            <returns>A reference to the gore</returns>
        </member>
        <member name="M:Terraria.Gore.NewGore(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Single)">
            <summary>
            Spawns a gore with given properties
            </summary>
            <param name="source">Recommend using <see cref="M:Terraria.Entity.GetSource_Death(System.String)"/> or <see cref="M:Terraria.Entity.GetSource_FromThis(System.String)"/>" as the spawn source</param>
            <param name="Position"></param>
            <param name="Velocity"></param>
            <param name="Type"></param>
            <param name="Scale"></param>
            <returns>The index of the gore in the <see cref="F:Terraria.Main.gore"/> array</returns>
        </member>
        <member name="T:Terraria.ID.AmmoID">
            <summary>
            AmmoID entries represent ammo types. Ammo items that share the same AmmoID value assigned to <see cref="F:Terraria.Item.ammo"/> can all be used as ammo for weapons using that same value for <see cref="F:Terraria.Item.useAmmo"/>. AmmoID values are actually equivalent to the <see cref="T:Terraria.ID.ItemID"/> value of the iconic ammo item.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Ammo">Basic Ammo Guide</see> teaches more about ammo.
            </summary>
        </member>
        <member name="F:Terraria.ID.AmmoID.Sets.SpecificLauncherAmmoProjectileMatches">
            <summary>
            Associates a launcher's item type (<see cref="F:Terraria.Item.type"/>) and an ammo's item type (<see cref="F:Terraria.Item.type"/>) to the projectile type (<see cref="F:Terraria.Projectile.type"/>) they will shoot when used together.
            <br/> For example, a <see cref="F:Terraria.ID.ItemID.SnowmanCannon"/> used with a <see cref="F:Terraria.ID.ItemID.MiniNukeI"/> will fire the <see cref="F:Terraria.ID.ProjectileID.MiniNukeSnowmanRocketI"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.AmmoID.Sets.IsArrow">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then items of that type are counted as arrows for the purposes of <see cref="F:Terraria.Player.arrowDamage"/> and the <see cref="F:Terraria.ID.ItemID.MagicQuiver"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.AmmoID.Sets.IsBullet">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then items of that type are counted as bullets for the purposes of <see cref="F:Terraria.Player.bulletDamage"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.AmmoID.Sets.IsSpecialist">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then items of that type are counted as specialist ammo for the purposes of <see cref="F:Terraria.Player.specialistDamage"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Head.Sets.FrontToBackID">
            <summary>
            If <c>!= -1</c> for a given <see cref="T:Terraria.ID.ArmorIDs.Head"/>, then that equip will display the retrieved <see cref="T:Terraria.ID.ArmorIDs.Head"/> equip when equipped.
            <br/> For example, wearing <see cref="F:Terraria.ID.ArmorIDs.Head.DogEars"/> will also display <see cref="F:Terraria.ID.ArmorIDs.Head.DogEarsBack"/>.
            <br/> Defaults to <c>-1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Head.Sets.UseSkinColor">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Head"/>, then that equip will be colored and dyed in the same way the player's skin is.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            Equips in this set should be grayscale, similar to the player's textures.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Head.Sets.PreventBeardDraw">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Head"/>, then that equip will hide the player's beard when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Head.Sets.UseAltFaceHeadDraw">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Head"/>, then that equip will force head-positioned face equips (<see cref="F:Terraria.ID.ArmorIDs.Face.Sets.DrawInFaceHeadLayer"/>) with proper alternate face styles (<see cref="F:Terraria.ID.ArmorIDs.Face.Sets.AltFaceHead"/>) to draw those styles.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Head.Sets.DrawFullHair">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Head"/>, then that equip will show the player's full hair when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Head.Sets.DrawHatHair">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Head"/>, then that equip will show the player's hat hair when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            Hat hair textures can be accessed through <see cref="F:Terraria.GameContent.TextureAssets.PlayerHairAlt"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Head.Sets.DrawsBackHairWithoutHeadgear">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Head"/>, then that equip will allow back hair (<see cref="F:Terraria.ID.HairID.Sets.DrawBackHair"/>) to draw in full when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Head.Sets.DrawHead">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Head"/>, then that equip will allow the player's head and face to be drawn.
            <br/> Defaults to <see langword="true"/>.
            </summary>
        </member>
        <member name="T:Terraria.ID.ArmorIDs.Body.Sets.IncludeCapeFrontAndBackInfo">
            <summary>
            Stores <see cref="T:Terraria.ID.ArmorIDs.Back"/> and <see cref="T:Terraria.ID.ArmorIDs.Front"/> equips to be worm with a specified <see cref="T:Terraria.ID.ArmorIDs.Body"/> equip.
            <br/> Used in <see cref="F:Terraria.ID.ArmorIDs.Body.Sets.IncludeCapeFrontAndBack"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Body.Sets.IncludeCapeFrontAndBackInfo.frontCape">
            <summary>
            The <see cref="T:Terraria.ID.ArmorIDs.Front"/> equip to equip.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Body.Sets.IncludeCapeFrontAndBackInfo.backCape">
            <summary>
            The <see cref="T:Terraria.ID.ArmorIDs.Back"/> equip to equip.
            </summary>
        </member>
        <member name="P:Terraria.ID.ArmorIDs.Body.Sets.IncludeCapeFrontAndBackInfo.Invalid">
            <summary>
            If <see langword="true"/>, then this <see cref="T:Terraria.ID.ArmorIDs.Body.Sets.IncludeCapeFrontAndBackInfo"/> cannot be used.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Body.Sets.NeedsToDrawArm">
            <summary>
            <strong>Unused.</strong>
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Body.Sets.IncludedCapeBack">
            <summary>
            If <c>!= -1</c> for a given <see cref="T:Terraria.ID.ArmorIDs.Body"/>, then that equip will display the retrieved <see cref="T:Terraria.ID.ArmorIDs.Back"/> equip when equipped.
            <br/> <see cref="T:Terraria.ID.ArmorIDs.Back"/> equips drawn like this will use the player's body dye instead of their back dye.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            Be sure to also set <see cref="F:Terraria.ID.ArmorIDs.Body.Sets.IncludedCapeBackFemale"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Body.Sets.IncludedCapeBackFemale">
            <summary>
            <inheritdoc cref="F:Terraria.ID.ArmorIDs.Body.Sets.IncludedCapeBack"/>
            </summary>
            <remarks>
            Be sure to also set <see cref="F:Terraria.ID.ArmorIDs.Body.Sets.IncludedCapeBack"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Body.Sets.IncludedCapeFront">
            <summary>
            If <c>!= -1</c> for a given <see cref="T:Terraria.ID.ArmorIDs.Body"/>, then that equip will display the retrieved <see cref="T:Terraria.ID.ArmorIDs.Front"/> equip when equipped.
            <br/> <see cref="T:Terraria.ID.ArmorIDs.Front"/> equips drawn like this will use the player's body dye instead of their back dye.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Body.Sets.IncludeCapeFrontAndBack">
            <summary>
            If not <see cref="P:Terraria.ID.ArmorIDs.Body.Sets.IncludeCapeFrontAndBackInfo.Invalid"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Body"/>, then that equip will display <see cref="F:Terraria.ID.ArmorIDs.Body.Sets.IncludeCapeFrontAndBackInfo.backCape"/> and <see cref="F:Terraria.ID.ArmorIDs.Body.Sets.IncludeCapeFrontAndBackInfo.frontCape"/> when equipped.
            <br/> <see cref="T:Terraria.ID.ArmorIDs.Back"/> and <see cref="T:Terraria.ID.ArmorIDs.Front"/> equips drawn like this will use the player's body dye instead of their back/front dye.
            <br/> Defaults to an invalid info (<see cref="P:Terraria.ID.ArmorIDs.Body.Sets.IncludeCapeFrontAndBackInfo.Invalid"/>).
            </summary>
            <remarks>
            Unlike using <see cref="F:Terraria.ID.ArmorIDs.Body.Sets.IncludedCapeBack"/> and <see cref="F:Terraria.ID.ArmorIDs.Body.Sets.IncludedCapeFront"/>, the <see cref="T:Terraria.ID.ArmorIDs.Back"/> and <see cref="T:Terraria.ID.ArmorIDs.Front"/> equips drawn using this set will only draw if both can be drawn together. Otherwise, neither will draw.
            <br/> Use those sets if you only need one equip to draw.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Body.Sets.showsShouldersWhileJumping">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Body"/>, then that equip will show the player's shoulder pads when jumping.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Body.Sets.shouldersAreAlwaysInTheBack">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Body"/>, then that equip will never display the player's composite shoulders in front of their arms.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Body.Sets.DisableHandOnAndOffAccDraw">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Body"/>, then that equip will hide <see cref="T:Terraria.ID.ArmorIDs.HandOn"/> and <see cref="T:Terraria.ID.ArmorIDs.HandOff"/> equips when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Body.Sets.DisableBeltAccDraw">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Body"/>, then that equip will hide belt-like (<see cref="F:Terraria.ID.ArmorIDs.Waist.Sets.IsABelt"/>) <see cref="T:Terraria.ID.ArmorIDs.Waist"/> equips when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Body.Sets.HidesTopSkin">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Body"/>, then that equip will hide the player's torso, arm, and hand skins when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            The <see cref="T:Terraria.ID.ArmorIDs.Body"/> equivalent to <see cref="F:Terraria.ID.ArmorIDs.Legs.Sets.HidesTopSkin"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Body.Sets.HidesBottomSkin">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Body"/>, then that equip will hide the player's leg skin when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            The <see cref="T:Terraria.ID.ArmorIDs.Body"/> equivalent to <see cref="F:Terraria.ID.ArmorIDs.Legs.Sets.HidesBottomSkin"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Body.Sets.HidesHands">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Body"/>, then that equip will hide the player's hand skins when equipped.
            <br/> Defaults to <see langword="true"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Body.Sets.HidesArms">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Body"/>, then that equip will hide the player's arm skin when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            Hiding arms also hides hands (<see cref="F:Terraria.ID.ArmorIDs.Body.Sets.HidesHands"/>).
            </remarks>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Legs.Sets.MannequinIncompatible">
            <summary>
            <strong>Unused.</strong> Used for old (Womm)annequins (<see cref="F:Terraria.ID.TileID.Mannequin"/>).
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Legs.Sets.IncompatibleWithFrogLeg">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Legs"/>, then that equip will force <see cref="F:Terraria.ID.ArmorIDs.Shoe.FrogLeg"/> to not draw when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Legs.Sets.OverridesLegs">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Legs"/>, then that equip will hide <see cref="T:Terraria.ID.ArmorIDs.Shoe"/> equips when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Legs.Sets.HidesTopSkin">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Legs"/>, then that equip will hide the player's torso, arm, and hand skins when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            The <see cref="T:Terraria.ID.ArmorIDs.Legs"/> equivalent to <see cref="F:Terraria.ID.ArmorIDs.Body.Sets.HidesTopSkin"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Legs.Sets.HidesBottomSkin">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Legs"/>, then that equip will hide the player's leg skin when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            The <see cref="T:Terraria.ID.ArmorIDs.Legs"/> equivalent to <see cref="F:Terraria.ID.ArmorIDs.Body.Sets.HidesBottomSkin"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.HandOn.Sets.UsesOldFramingTexturesForWalking">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.HandOn"/>, then that equip uses the pre-1.4 system for walking animations.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            This set is for walking animations that take up the entire walk cycle, which would be cut off using the 1.4 framing.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Back.Sets.DrawInBackpackLayer">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Back"/>, then that equip will draw in the player's backpack layer (<see cref="F:Terraria.Player.backpack"/>, <see cref="F:Terraria.Player.cBackpack"/>).
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Back.Sets.DrawInTailLayer">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Back"/>, then that equip will draw in the player's tail layer (<see cref="F:Terraria.Player.tail"/>, <see cref="F:Terraria.Player.cTail"/>).
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Front.Sets.DrawsInNeckLayer">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Front"/>, then that equip will draw in the player's neck layer when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            This set is useful for <see cref="T:Terraria.ID.ArmorIDs.Front"/> equips that should draw under the player's front arm.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Shoe.Sets.MaleToFemaleID">
            <summary>
            If <c>!= -1</c> for a given <see cref="T:Terraria.ID.ArmorIDs.Shoe"/>, then that equip will use the retrieved <see cref="T:Terraria.ID.ArmorIDs.Shoe"/> when equipped on a female (<c>!<see cref="P:Terraria.Player.Male"/></c>) player.
            <br/> Defaults to <c>-1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Shoe.Sets.OverridesLegs">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Shoe"/>, then that equip will hide the player's legs when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Waist.Sets.UsesTorsoFraming">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Waist"/>, then that equip will draw using <see cref="F:Terraria.Player.bodyFrame"/> instead of <see cref="F:Terraria.Player.legFrame"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Waist.Sets.IsABelt">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Waist"/>, then that equip won't draw if the player is wearing a <see cref="F:Terraria.ID.ArmorIDs.Body.Sets.DisableBeltAccDraw"/> <see cref="T:Terraria.ID.ArmorIDs.Body"/> equip.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Wing.Sets.Stats">
            <summary>
            Determines the flight stats for a given <see cref="T:Terraria.ID.ArmorIDs.Wing"/>.
            <br/> It's recommended to use <see cref="M:Terraria.Player.GetWingStats(System.Int32)"/> instead of directly accessing this set.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Face.Sets.PreventHairDraw">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Face"/>, then that equip will completely hide the player's hair when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Face.Sets.OverrideHelmet">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Face"/>, then that equip will hide the player's <see cref="T:Terraria.ID.ArmorIDs.Head"/> when equipped.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Face.Sets.DrawInFaceUnderHairLayer">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Face"/>, then that equip will draw under the player's hair.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Face.Sets.DrawInFaceFlowerLayer">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Face"/>, then that equip will draw in the face flower layer (<see cref="F:Terraria.Player.faceFlower"/>, <see cref="F:Terraria.Player.cFaceFlower"/>).
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Face.Sets.DrawInFaceHeadLayer">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Face"/>, then that equip will draw in the face head layer (<see cref="F:Terraria.Player.faceHead"/>, <see cref="F:Terraria.Player.cFaceHead"/>).
            <br/> If a <see cref="T:Terraria.ID.ArmorIDs.Head"/> equip in the <see cref="F:Terraria.ID.ArmorIDs.Head.Sets.UseAltFaceHeadDraw"/> set is equipped, then this equip will be replaced with its value in <see cref="F:Terraria.ID.ArmorIDs.Face.Sets.AltFaceHead"/> if one exists.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Face.Sets.AltFaceHead">
            <summary>
            If <c>!= -1</c> for a given <see cref="T:Terraria.ID.ArmorIDs.Face"/>, then that equip will be replaced with the retrieved <see cref="T:Terraria.ID.ArmorIDs.Face"/> equip if the player is wearing a <see cref="T:Terraria.ID.ArmorIDs.Head"/> in the <see cref="F:Terraria.ID.ArmorIDs.Head.Sets.UseAltFaceHeadDraw"/> set.
            <br/> Only applies to <see cref="T:Terraria.ID.ArmorIDs.Face"/> equips also in the <see cref="F:Terraria.ID.ArmorIDs.Face.Sets.DrawInFaceHeadLayer"/> set.
            <br/> Defaults to <c>-1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Balloon.Sets.DrawInFrontOfBackArmLayer">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Balloon"/>, then that equip will draw in the player's front balloon layer (<see cref="F:Terraria.Player.balloonFront"/>, <see cref="F:Terraria.Player.cBalloonFront"/>).
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Balloon.Sets.UsesTorsoFraming">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Balloon"/>, then that equip will strictly use <see cref="F:Terraria.Player.bodyFrame"/> for its framing instead of auto-animating.
            <br/> Equips in this set must have 20 frames as opposed to the normal 4, arranged in the order as the player's movement frames.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ArmorIDs.Beard.Sets.UseHairColor">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.ArmorIDs.Beard"/>, then that equip will be colored in the same way the player's hair is.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            Equips in this set should be grayscale, similar to the player's textures.
            <br/> Beards in this set are <strong>not</strong> dyed using <see cref="F:Terraria.Player.hairDye"/>, but instead use <see cref="F:Terraria.Player.cBeard"/> like other equips.
            </remarks>
        </member>
        <member name="T:Terraria.ID.BuffID.Sets.BuffMountData">
            <summary>
            Stores data for mount buffs.
            </summary>
        </member>
        <member name="F:Terraria.ID.BuffID.Sets.BuffMountData.mountID">
            <summary>
            The mount type (<see cref="P:Terraria.Mount.Type"/>) associated with this <see cref="T:Terraria.ID.BuffID"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.BuffID.Sets.BuffMountData.faceLeft">
            <summary>
            If <see langword="true"/>, then this <see cref="T:Terraria.ID.BuffID"/> is for the left-facing mount.
            </summary>
        </member>
        <member name="F:Terraria.ID.BuffID.Sets.IsWellFed">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.BuffID"/>, then that buff is some variation of <see cref="F:Terraria.ID.BuffID.WellFed"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.BuffID.Sets.IsFedState">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.BuffID"/>, then that buff is related to player hunger.
            <br/> Buffs in this set cannot be active at the same time.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.BuffID.Sets.IsAnNPCWhipDebuff">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.BuffID"/>, then that buff is a whip debuff and can be applied to NPCs that use <see cref="F:Terraria.DataStructures.NPCDebuffImmunityData.ImmuneToAllBuffsThatAreNotWhips"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>NPCs can be made immune to whip debuffs using <see cref="F:Terraria.DataStructures.NPCDebuffImmunityData.ImmuneToWhips"/>.</remarks>
        </member>
        <member name="F:Terraria.ID.BuffID.Sets.TimeLeftDoesNotDecrease">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.BuffID"/>, then that buff will never run out.
            <br/> Useful for buffs that are conditionally removed.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.BuffID.Sets.CanBeRemovedByNetMessage">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.BuffID"/>, then that buff can be removed from an NPC using <see cref="M:Terraria.NPC.RequestBuffRemoval(System.Int32)"/>.
            <br/> Useful for "flag" buffs that should go away on hit, like the <see href="https://terraria.wiki.gg/wiki/Firecracker">Firecracker's</see> <see cref="F:Terraria.ID.BuffID.FlameWhipEnemyDebuff"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.BuffID.Sets.IsAFlaskBuff">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.BuffID"/>, then that buff corresponds to a flask item.
            <br/> Flask items are categorized into the <see cref="F:Terraria.ID.ContentSamples.CreativeHelper.ItemGroup.Flask"/> group in Journey Mode.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            This set does <strong>not</strong> handle any logic for flasks.
            </remarks>
        </member>
        <member name="F:Terraria.ID.BuffID.Sets.NurseCannotRemoveDebuff">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.BuffID"/>, then that debuff cannot be removed by the Nurse.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.BuffID.Sets.BasicMountData">
            <summary>
            If not <see langword="null"/> for a given <see cref="T:Terraria.ID.BuffID"/>, then that buff is linked to a <see cref="T:Terraria.Mount"/> and will forcibly mount the player if active.
            <br/> All entries in this set should have <see cref="F:Terraria.Main.buffNoTimeDisplay"/> and <see cref="F:Terraria.Main.buffNoSave"/> set to <see langword="true"/>.
            <br/> Defaults to <see langword="null"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.BuffID.Sets.LongerExpertDebuff">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.BuffID"/>, then that buff will have a longer duration in <see cref="P:Terraria.Main.expertMode"/>.
            </summary>
            <remarks>
            The scale factor used is the debuff multiplier (<see cref="P:Terraria.DataStructures.GameModeData.DebuffTimeMultiplier"/>) of <see cref="P:Terraria.Main.GameModeInfo"/>.
            <br/> Despite the name, this set applies to <em>all</em> buffs, not just debuffs.
            </remarks>
        </member>
        <member name="T:Terraria.ID.ContentSamples">
            <summary>
            This class stores instances of various content types in a number of dictionaries. These instances serve as references that can be queried for information. For example, a modder could check ItemsByType[ItemID.Gel].value to check the value of the Gel item rather than creating a new Item instance and then checking. Care must be taken by modders to not use these instances for anything other than as a reference. Modders should not edit the instances in any way. <br/>
            ContentSamples should only be accessed in code that runs during <see cref="M:Terraria.ModLoader.Mod.PostSetupContent"/> or later, as the entries are not filled in until then. <br/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ContentSamples.NpcsByNetId">
            <summary>
            The default <see cref="T:Terraria.NPC"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>). <br/>
            Note that these entries do not take into account game mode specific changes so they shouldn't be used for querying that data. <br/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ContentSamples.ProjectilesByType">
            <summary>
            The default <see cref="T:Terraria.Projectile"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>).
            </summary>
        </member>
        <member name="F:Terraria.ID.ContentSamples.ItemsByType">
            <summary>
            The default <see cref="T:Terraria.Item"/> for a given item type (<see cref="F:Terraria.Item.type"/>).
            </summary>
        </member>
        <member name="F:Terraria.ID.ContentSamples.ItemNetIdsByPersistentIds">
            <summary>
            The item type (<see cref="F:Terraria.Item.type"/>) for a given persistent ID.
            <br/> Vanilla persistent IDs are the names in <see cref="T:Terraria.ID.ItemID"/>. Modded persistent IDs are the value of <see cref="P:Terraria.ModLoader.ModType.FullName"/>.
            </summary>
            <remarks>
            You can get the persistent ID of a given item type using either <see cref="F:Terraria.ID.ContentSamples.ItemPersistentIdsByNetIds"/> or <see cref="F:Terraria.ID.ItemID.Search"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ContentSamples.ItemPersistentIdsByNetIds">
            <summary>
            The persistent ID for a given item type (<see cref="F:Terraria.Item.type"/>).
            </summary>
        </member>
        <member name="F:Terraria.ID.ContentSamples.CreativeResearchItemPersistentIdOverride">
            <summary>
            Associates an item type (<see cref="F:Terraria.Item.type"/>) with the item type it shares research values with.
            </summary>
        </member>
        <member name="F:Terraria.ID.ContentSamples.NpcNetIdsByPersistentIds">
            <summary>
            The NPC type (<see cref="F:Terraria.NPC.type"/>) for a given persistent ID.
            <br/> Vanilla persistent IDs are the names in <see cref="T:Terraria.ID.NPCID"/>. Modded persistent IDs are the value of <see cref="P:Terraria.ModLoader.ModType.FullName"/>.
            </summary>
            <remarks>
            You can get the persistent ID of a given NPC type using either <see cref="F:Terraria.ID.ContentSamples.NpcPersistentIdsByNetIds"/> or <see cref="F:Terraria.ID.NPCID.Search"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ContentSamples.NpcPersistentIdsByNetIds">
            <summary>
            The persistent ID for a given NPC type (<see cref="F:Terraria.NPC.type"/>).
            </summary>
        </member>
        <member name="F:Terraria.ID.ContentSamples.NpcBestiarySortingId">
            <summary>
            The entry number in the Bestiary for a given NPC type (<see cref="F:Terraria.NPC.type"/>).
            </summary>
        </member>
        <member name="F:Terraria.ID.ContentSamples.NpcBestiaryRarityStars">
            <summary>
            The number of stars a given NPC type (<see cref="F:Terraria.NPC.type"/>) shows in the Bestiary.
            <br/> Set in <see cref="M:Terraria.ModLoader.ModNPC.SetBestiary(Terraria.GameContent.Bestiary.BestiaryDatabase,Terraria.GameContent.Bestiary.BestiaryEntry)"/> or <see cref="M:Terraria.ModLoader.GlobalNPC.SetBestiary(Terraria.NPC,Terraria.GameContent.Bestiary.BestiaryDatabase,Terraria.GameContent.Bestiary.BestiaryEntry)"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ContentSamples.NpcBestiaryCreditIdsByNpcNetIds">
            <summary>
            Associates an NPC type (<see cref="F:Terraria.NPC.type"/>) with the persistent ID used for the Bestiary.
            </summary>
        </member>
        <member name="F:Terraria.ID.ContentSamples.ItemCreativeSortingId">
            <summary>
            Associates an item type (<see cref="F:Terraria.Item.type"/>) with its <see cref="T:Terraria.ID.ContentSamples.CreativeHelper.ItemGroup"/> and sorting order in the Research menu.
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.DefaultCursor">
            <summary>
            Default cursor
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.SmartCursor">
            <summary>
            Smart cursor enabled
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.Magnifiers">
            <summary>
            Try to display items in chat messages
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.FavoriteStar">
            <summary>
            Try to mark as favorite
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.CameraLight">
            <summary>
            The first in-game camera point
            <br>If <see cref="F:Terraria.Main.cursorOverride"/> is set to this, the color will be the same as the cursor color</br>
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.CameraDark">
            <summary>
            The second in-game camera point
            <br>If <see cref="F:Terraria.Main.cursorOverride"/> is set to this, the color will be the same as the cursor color</br>
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.TrashCan">
            <summary>
            Quick trash
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.BackInventory">
            <summary>
            From guide slot, research slot, reforge slot, etc. to inventory
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.ChestToInventory">
            <summary>
            From chest to inventory
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.InventoryToChest">
            <summary>
            From inventory to chest
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.QuickSell">
            <summary>
            Quick sell items to NPC
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.DefaultCursorOutline">
            <summary>
            Default cursor outline
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.SmartCursorOutline">
            <summary>
            Smart cursor outline
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.GamepadSmartCursor">
            <summary>
            Smart cursor enabled if <see cref="P:Terraria.GameInput.PlayerInput.SettingsForUI.ShowGamepadCursor"/> is true
            <br>When using the gamepad in smart cursor mode, the cursor that is relatively close to the player</br>
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.GamepadSmartCursorOutline">
            <summary>
            Smart cursor outline if <see cref="P:Terraria.GameInput.PlayerInput.SettingsForUI.ShowGamepadCursor"/> is true
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.GamepadDefaultCursor">
            <summary>
            Default cursor if <see cref="P:Terraria.GameInput.PlayerInput.SettingsForUI.ShowGamepadCursor"/> is true
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.GamepadDefaultCursorOutline">
            <summary>
            Default cursor outline if <see cref="P:Terraria.GameInput.PlayerInput.SettingsForUI.ShowGamepadCursor"/> is true
            </summary>
        </member>
        <member name="F:Terraria.ID.CursorOverrideID.GamepadSmartCursorAlt">
            <summary>
            Actual cursor position indicator if smart cursor enabled and <see cref="P:Terraria.GameInput.PlayerInput.SettingsForUI.ShowGamepadCursor"/> is true
            <br>When using the gamepad in smart cursor mode, the cursor that is relatively far away from the player</br>
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.Water">
            <summary>
            Use Dust.dustWater() if you want to calculate water dust based on water style
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.BreatheBubble">
            <summary>
            Only survives while in liquid
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.GlowingMushroom">
            <summary>
            Wanders and lingers with gravity enabled.
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.JungleSpore">
            <summary>
            Wanders and lingers with gravity enabled.
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.Enchanted_Gold">
            <summary>
            Stuff like Enchanted Boomerang, Enchanted Sword, and Jester Arrows
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.Enchanted_Pink">
            <summary>
            Stuff like Enchanted Boomerang, Enchanted Sword, and Jester Arrows
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.RainbowRod">
            <summary>
            Lingers and scales up with gravity enabled
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.Snow">
            <summary>
            Wanders and lingers with gravity enabled
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.Water_Corruption">
            <summary>
            Use Dust.dustWater() if you want to calculate water dust based on water style
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.Water_Jungle">
            <summary>
            Use Dust.dustWater() if you want to calculate water dust based on water style
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.Water_Hallowed">
            <summary>
            Use Dust.dustWater() if you want to calculate water dust based on water style
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.Water_Snow">
            <summary>
            Use Dust.dustWater() if you want to calculate water dust based on water style
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.Water_Desert">
            <summary>
            Use Dust.dustWater() if you want to calculate water dust based on water style
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.Water_Space">
            <summary>
            Use Dust.dustWater() if you want to calculate water dust based on water style
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.Water_GlowingMushroom">
            <summary>
            Use Dust.dustWater() if you want to calculate water dust based on water style
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.Water_Cavern">
            <summary>
            Use Dust.dustWater() if you want to calculate water dust based on water style
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.Water_BloodMoon">
            <summary>
            Use Dust.dustWater() if you want to calculate water dust based on water style
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.Water_Crimson">
            <summary>
            Use Dust.dustWater() if you want to calculate water dust based on water style
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.Paint">
            <summary>
            When you paint a tile
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.PlanteraBulb">
            <summary>
            Lingers and scales with gravity enabled
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.DrillContainmentUnit">
            <summary>
            Scales with gravity enabled
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.CosmicCarKeys">
            <summary>
            Scales with gravity enabled
            </summary>
        </member>
        <member name="F:Terraria.ID.DustID.LastPrism">
            <summary>
            Lingers and scales with gravity enabled
            </summary>
        </member>
        <member name="F:Terraria.ID.GoreID.Sets.SpecialAI">
            <summary>
            If non-zero for a given gore type (<see cref="F:Terraria.Gore.type"/>), that gore will follow special AI rules.
            <br/> For <c>1</c>, this gore will act like a piece of sail, such as the ones dropped by a Flying Dutchman.
            <br/> For <c>2</c>, this gore will act like chimney smoke. This is used by the smoke particles created by the <see cref="F:Terraria.ID.TileID.Chimney"/>.
            <br/> For <c>3</c>, this gore will act like a falling leaf. This is used for all vanilla tree leaves.
            <br/> For <c>4</c>, this gore will float along the ground. This is used by grounded graveyard fog.
            <br/> For <c>5</c>, this gore will float in the air. This is used by airborne graveyard fog.
            <br/> For <c>6</c>, this gore will slowly diffuse into open air. This is used by the fog created by the <see cref="F:Terraria.ID.TileID.FogMachine"/>.
            <br/> For <c>7</c>, this gore will quickly fade out. This is used by the spark particles created by the <see cref="F:Terraria.ID.ProjectileID.VoltBunny"/>.
            <br/> Defaults to <c>0</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.GoreID.Sets.DisappearSpeed">
            <summary>
            The value subtracted from <see cref="F:Terraria.Gore.timeLeft"/> every tick for a given gore type (<see cref="F:Terraria.Gore.type"/>).
            <br/> When <see cref="F:Terraria.Gore.timeLeft"/> hits <c>0</c>, it will begin to fade away according to the value in <see cref="F:Terraria.ID.GoreID.Sets.DisappearSpeedAlpha"/>.
            <br/> Defaults to <c>1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.GoreID.Sets.DisappearSpeedAlpha">
            <summary>
            The value added to <see cref="F:Terraria.Gore.alpha"/> every tick after <see cref="F:Terraria.Gore.timeLeft"/> hits <c>0</c> for a given gore type (<see cref="F:Terraria.Gore.type"/>).
            <br/> When <see cref="F:Terraria.Gore.alpha"/> hits <c>255</c>, it will become inactive.
            <br/> Defaults to <c>1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.GoreID.Sets.DrawBehind">
            <summary>
            If <see langword="true"/> for a given gore type (<see cref="F:Terraria.Gore.type"/>), then that gore draws behind tiles.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.HairID.Sets.DrawBackHair">
            <summary>
            If <see langword="true"/> for a given <strong><see cref="F:Terraria.Player.hair"/></strong> value, then that hair will additionally draw behind the player's back using <see cref="F:Terraria.DataStructures.PlayerDrawSet.hairBackFrame"/>. Set this to prevent long hair from drawing in front of capes.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            Back hair is drawn using <see cref="F:Terraria.DataStructures.PlayerDrawLayers.HairBack"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ImmunityCooldownID.General">
            <summary>
            Default, no special slot, just Player.immuneTime
            </summary>
        </member>
        <member name="F:Terraria.ID.ImmunityCooldownID.TileContactDamage">
            <summary>
            Contacting with tiles that deals damage, such as spikes and cactus in don't starve world
            </summary>
        </member>
        <member name="F:Terraria.ID.ImmunityCooldownID.Bosses">
            <summary>
            Bosses like Moon Lord and Empress of Light (and their minions and projectiles)
            Prevents cheesing by taking repeated low damage from another source
            </summary>
        </member>
        <member name="F:Terraria.ID.ImmunityCooldownID.WrongBugNet">
            <summary>
            Trying to catch lava critters with regular bug net
            </summary>
        </member>
        <member name="F:Terraria.ID.ImmunityCooldownID.Lava">
            <summary>
            Damage from lava
            </summary>
        </member>
        <member name="T:Terraria.ID.ItemHoldStyleID">
            <summary>
            Assign <see cref="F:Terraria.Item.holdStyle"/> to one of these to give your item an animation while not in use, but being held. The <see href="https://terraria.wiki.gg/wiki/Use_Style_IDs">Use Style IDs wiki page</see> has examples and animations of each of these hold styles, make sure to scroll down to the "Hold styles" section.
            <br/> If none of these hold animations match what you want, consider using the <see cref="M:Terraria.ModLoader.ModItem.HoldStyle(Terraria.Player,Microsoft.Xna.Framework.Rectangle)"/> hook to implement a custom animation.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemHoldStyleID.None">
            <summary>
            Default. No specific animation will happen while this item is held.
            <br/>Used by any item by default. 
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemHoldStyleID.HoldFront">
            <summary>
            Holding out in front of player.
            <br/> Used for items such as torches, candles, and glowsticks
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemHoldStyleID.HoldUp">
            <summary>
            Holding up above player head.
            <br/>Used by <see cref="F:Terraria.ID.ItemID.BreathingReed"/>, <see cref="F:Terraria.ID.ItemID.Umbrella"/>, and <see cref="F:Terraria.ID.ItemID.TragicUmbrella"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemHoldStyleID.HoldHeavy">
            <summary>
            Holding out, but hand placed lower.
            <br/>Used only by <see cref="F:Terraria.ID.ItemID.MagicalHarp"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemHoldStyleID.HoldGolfClub">
            <summary>
            Item held by both hands low.
            <br/> Used by Golf Clubs.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemHoldStyleID.HoldGuitar">
            <summary>
            Item held very low.
            <br/> Used by guitar-shaped instruments
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemHoldStyleID.HoldLamp">
            <summary>
            Item is held high by off hand.
            <br/> Used by Nightglow.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemHoldStyleID.HoldRadio">
            <summary>
            Arm is held close to body, as if holding a remote control joystick.
            <br/> Used by Kwad Racer Drone
            </summary>
        </member>
        <member name="T:Terraria.ID.ItemID.BannerEffect">
            <summary>
            Determines the strength an NPC's banner has on players' interactions with that NPC. Used in <see cref="F:Terraria.ID.ItemID.Sets.BannerStrength"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.BannerEffect.None">
            <summary>
            Represents a completely decorative banner.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.BannerEffect.Reduced">
            <summary>
            Represents a significantly weakened banner.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.BannerEffect.NormalDamageDealt">
            <summary>
            The percent of damage dealt to the NPC this banner represents in Normal Mode.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.BannerEffect.ExpertDamageDealt">
            <summary>
            The percent of damage dealt to the NPC this banner represents in Expert Mode or higher.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.BannerEffect.NormalDamageReceived">
            <summary>
            The percent of damage dealt to players by the NPC this banner represents in Normal Mode.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.BannerEffect.ExpertDamageReceived">
            <summary>
            The percent of damage dealt to players by the NPC this banner represents in Expert Mode or higher.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.BannerEffect.Enabled">
            <summary>
            If <see langword="true"/>, this banner actually affects players' interactions with NPCs.
            </summary>
        </member>
        <member name="M:Terraria.ID.ItemID.BannerEffect.#ctor(System.Single)">
            <summary>
            Creates a new <see cref="T:Terraria.ID.ItemID.BannerEffect"/> of <paramref name="strength"/> strength.
            </summary>
            <param name="strength">The strength of this banner compared to a standard banner.</param>
            <remarks>This banner sets <see cref="F:Terraria.ID.ItemID.BannerEffect.Enabled"/> to <see langword="true"/> as long as <c><paramref name="strength"/> != 0f</c>.</remarks>
        </member>
        <member name="M:Terraria.ID.ItemID.BannerEffect.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Terraria.ID.ItemID.BannerEffect"/> with <see cref="F:Terraria.ID.ItemID.BannerEffect.NormalDamageDealt"/>, <see cref="F:Terraria.ID.ItemID.BannerEffect.ExpertDamageDealt"/>, <see cref="F:Terraria.ID.ItemID.BannerEffect.NormalDamageReceived"/>, and <see cref="F:Terraria.ID.ItemID.BannerEffect.ExpertDamageReceived"/> set to the provided values.
            </summary>
            <remarks>This banner always has <see cref="F:Terraria.ID.ItemID.BannerEffect.Enabled"/> set to <see langword="true"/>, even if all provided values are <c>0f</c>.</remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.Factory">
            <summary>
            Used for creating sets indexed by item type (<see cref="F:Terraria.Item.type"/>).
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ItemsThatAreProcessedAfterNormalContentSample">
            <summary>
            The list of items processed after normal items in <see cref="M:Terraria.ID.ContentSamples.Initialize"/>.
            <br/> Used for the biome keys, as the old biome key molds interfere with the keys' data in <see cref="F:Terraria.ID.ContentSamples.ItemPersistentIdsByNetIds"/> and <see cref="F:Terraria.ID.ContentSamples.ItemNetIdsByPersistentIds"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.IsLavaImmuneRegardlessOfRarity">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will not burn when dropped in lava, even if it has a <see cref="F:Terraria.Item.rare"/> of <see cref="F:Terraria.ID.ItemRarityID.White"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            This set does not affect <see cref="F:Terraria.ID.ItemID.GuideVoodooDoll"/>, which will always burn when dropped into lava.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ItemsThatAllowRepeatedRightClick">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item has a right-click features that can be auto-reused as long as the right mouse button is held.
            <br/>Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ItemsThatCountAsBombsForDemolitionistToSpawn">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then the <see cref="F:Terraria.ID.NPCID.Demolitionist"/> can move in as long as any player has an item of that type in their inventory.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ItemsThatShouldNotBeInInventory">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will be deleted from inventories on world or player load.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.DrawUnsafeIndicator">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will have a small skull icon (<see cref="F:Terraria.ID.ExtrasID.UnsafeIndicator"/>) drawn over them in the world and in inventories.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.UsesBetterMeleeItemLocation">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>) and if <c><see cref="F:Terraria.Item.useStyle"/> == <see cref="F:Terraria.ID.ItemUseStyleID.Swing"/></c>, then that item will use a slightly offset <see cref="F:Terraria.Player.itemLocation"/> when being used.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.WorksInVoidBag">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will have its in-inventory effects even when contained in the Void Vault (<see cref="F:Terraria.Player.bank4"/>).
            Defaults to <see langword="true"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.GrassSeeds">
            <summary>
            <strong>Only checked for vanilla IDs.</strong>
            <br/> If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item can be placed using Smart Cursor on dirt.
            <br/> Additionally, those items cannot be used when trying to smart-place blocks.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ShimmerTransformToItem">
            <summary>
            If <c>&gt; 0</c> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will transform into the retrieved item type when dropped into shimmer (<see cref="F:Terraria.Entity.shimmerWet"/>).
            <br/> If <c>&lt;= 0</c> for a given item type, then that item will attempt to decraft itself.
            <br/> Defaults to <c>-1</c>.
            <br/> This takes precedence over both critter items (<c><see cref="F:Terraria.Item.makeNPC"/> &gt; 0</c>) transforming into NPCs and items decrafting into the ingredients used to craft the item.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ShimmerCountsAsItem">
            <summary>
            If <c>!= -1</c> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will be treated as the retrieved item type when dropped into shimmer (<see cref="F:Terraria.Entity.shimmerWet"/>).
            <br/> Defaults to <c>-1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.OverflowProtectionTimeOffset">
            <summary>
            If <c>!= 0</c> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will spawn with <see cref="F:Terraria.Item.timeSinceItemSpawned"/> set to the retrieved value.
            <br/> If <c>== 0</c> for a given item type, then that item is eligible for spawn protection, which massively decreases <see cref="F:Terraria.Item.timeSinceItemSpawned"/> to prevent natural despawning.
            <br/> Defaults to <c>0</c>.
            </summary>
            <remarks>Items with non-zero values in this set are extremely common drops and thus should be despawned first if the item cap is reached.</remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ItemsForStuffCannon">
            <summary>
            The list of valid item types (<see cref="F:Terraria.Item.type"/>) to be thrown by the <see cref="F:Terraria.ID.NPCID.BigMimicJungle"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.CanBeQuickusedOnGamepad">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item can always be quick-used on gamepads.
            <br/> If <see langword="false"/> for a given item type, then that item can never be quick-used on gamepads.
            <br/> If <see langword="null"/> for a given item type, then vanilla decides if that item can be quick used on gamepads.
            <br/> Defaults to <see langword="null"/>.
            </summary>
            <remarks>
            Checked in <see cref="P:Terraria.Item.CanBeQuickUsed"/>.
            <br/> By default, items that heal health (<c><see cref="F:Terraria.Item.healLife"/> &gt; 0</c>), heal mana (<c><see cref="F:Terraria.Item.healMana"/> &gt; 0</c>), or apply a temporary buff (<c><see cref="F:Terraria.Item.buffType"/> &gt; 0 &amp;&amp; <see cref="F:Terraria.Item.buffTime"/> &gt; 0</c>) can be quick used.
            <br/> The value of this set overrides the default value.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ForcesBreaksSleeping">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will always forcibly wake up any players who use it.
            <br/> If <see langword="false"/> for a given item type, then that item will never forcibly wake up any players who use it.
            <br/> If <see langword="null"/> for a given item type, then vanilla decides if that item forcibly wake up any players who use it.
            <br/> Defaults to <see langword="null"/>.
            </summary>
            <remarks>
            Checked in <see cref="M:Terraria.GameContent.PlayerSleepingHelper.UpdateState(Terraria.Player)"/>.
            <br/> By default, fishing rods (<c><see cref="F:Terraria.Item.fishingPole"/> &gt; 0</c>) and true melee weapons (<c><see cref="F:Terraria.Item.damage"/> &gt; 0 &amp;&amp; !<see cref="F:Terraria.Item.noMelee"/></c>) will wake up sleeping players.
            <br/> The value of this set overrides the default value.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.SkipsInitialUseSound">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will not play <see cref="F:Terraria.Item.UseSound"/> when first used.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.UsesCursedByPlanteraTooltip">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will display <see cref="F:Terraria.Lang.tip"/>[59] as the first line of its tooltips as long as Plantera has not been defeated (<see cref="F:Terraria.NPC.downedPlantBoss"/>).
            <br/> This set does <strong>not</strong> prevent usage pre-Plantera.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.IsAKite">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item is a kite.
            <br/> Kites cannot be used if a player is on a rope (<see cref="F:Terraria.Player.pulley"/>).
            <br/> Kites are held out using <see cref="F:Terraria.ID.ItemHoldStyleID.HoldFront"/> if their projectile is active and not held out at all if it is not.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ForceConsumption">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will always be consumed on use if <see cref="F:Terraria.Item.consumable"/> is <see langword="true"/>.
            <br/> If <see langword="false"/> for a given item type, then that item will never be consumed on use if <see cref="F:Terraria.Item.consumable"/> is <see langword="true"/>.
            <br/> If <see langword="null"/> for a given item type, then vanilla decides if that item will be consumed on use if <see cref="F:Terraria.Item.consumable"/> is <see langword="true"/>.
            <br/> Defaults to <see langword="null"/>.
            </summary>
            <remarks>
            You may also use <see cref="M:Terraria.ModLoader.GlobalItem.ConsumeItem(Terraria.Item,Terraria.Player)"/> or <see cref="M:Terraria.ModLoader.ModItem.ConsumeItem(Terraria.Player)"/> to prevent consumption. However, these methods cannot force consumption.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.HasAProjectileThatHasAUsabilityCheck">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will run <see cref="M:Terraria.Projectile.CheckUsability(Terraria.Player,System.Boolean@)"/> on every <see cref="T:Terraria.Projectile"/> the using <see cref="T:Terraria.Player"/> owns before usage is attempted.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.CanGetPrefixes">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item is allowed to receive prefixes.
            <br/> Defaults to <see langword="true"/>.
            </summary>
            <remarks>
            Checked in <see cref="M:Terraria.Item.CanHavePrefixes"/>, which contains other prefix restrictions.
            <br/> If you would like to prevent an item from receiving specific prefixes, use <see cref="M:Terraria.ModLoader.ModItem.AllowPrefix(System.Int32)"/>, <see cref="M:Terraria.ModLoader.GlobalItem.AllowPrefix(Terraria.Item,System.Int32)"/>, or <see cref="M:Terraria.ModLoader.ModPrefix.CanRoll(Terraria.Item)"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.NonColorfulDyeItems">
            <summary>
            The list of item types (<see cref="F:Terraria.Item.type"/>) for non-colorful dye effects.
            <br/> Non-colorful dyes do not change the color of the texture they are applied to, but rather add effects.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ColorfulDyeValues">
            <summary>
            If <see langword="true"/> for a given <strong>shader id</strong>, then that shader does not change the color of whatever it is applied to.
            <br/> <strong>Do not manually add values to this set.</strong> Values in this set are generated using the item types (<see cref="F:Terraria.Item.type"/>) in <see cref="F:Terraria.ID.ItemID.Sets.NonColorfulDyeItems"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.flowerPacketInfo">
            <summary>
            If not <see langword="null"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will place special tile styles on grass when used. See <see cref="T:Terraria.DataStructures.FlowerPacketInfo"/> for more info.
            <br/> Defaults to <see langword="null"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.IsAMaterial">
            <summary> Indicates that an item should show the material tooltip. Typically this means that the item is used in at least 1 recipe, but some items such as coins and void bag hide the tooltip for aesthetic reasons. </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.CraftingRecipeIndices">
            <summary> Indicates that this item is the result of at least 1 recipe that isn't disabled or set to not decraftable. The value corresponds to the index of the Recipe that results in this item in <see cref="F:Terraria.Main.recipe"/> array. Inner array contains multiple results for multiple recipes in order of creation</summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.IgnoresEncumberingStone">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will always be allowed to be picked up, even if <see cref="F:Terraria.Player.preventAllItemPickups"/> is <see langword="true"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ToolTipDamageMultiplier">
            <summary>
            If <c>!= 1f</c> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will have the damage in its tooltip multiplied by the retrieved value. Useful for items with damage values that don't accurately convey the typical damage. Mainly used by flails to show the boosted damage in the launching forward state.
            <br/> Defaults to <c>1f</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.IsAPickup">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item cannot show up as Bestiary loot and can always be picked up by the player.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            This set does <strong>not</strong> make items disappear from the inventory when picked up. Use <see cref="M:Terraria.ModLoader.ModItem.OnPickup(Terraria.Player)"/> or <see cref="M:Terraria.ModLoader.GlobalItem.OnPickup(Terraria.Item,Terraria.Player)"/> for that.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.IsDrill">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item is a drill.
            <br/> Drills have 40% faster use times (<see cref="F:Terraria.Item.useTime"/>, <see cref="F:Terraria.Item.useAnimation"/>) and 1 less tile reach (<see cref="F:Terraria.Item.tileBoost"/>) than what are set in <see cref="M:Terraria.Item.SetDefaults(System.Int32)"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            This set does <strong>not</strong> allow an <see cref="T:Terraria.Item"/> to damage tiles -- use <see cref="F:Terraria.Item.pick"/> for that.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.IsChainsaw">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item is a chainsaw.
            <br/> Chainsaws have 40% faster use times (<see cref="F:Terraria.Item.useTime"/>, <see cref="F:Terraria.Item.useAnimation"/>) and 1 less tile reach (<see cref="F:Terraria.Item.tileBoost"/>) than what are set in <see cref="M:Terraria.Item.SetDefaults(System.Int32)"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            This set does <strong>not</strong> allow an <see cref="T:Terraria.Item"/> to damage trees -- use <see cref="F:Terraria.Item.axe"/> for that.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.IsPaintScraper">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item is a paint scraper.
            <br/> Paint scrapers can scrape paint off of tiles and collect moss from <see cref="F:Terraria.ID.TileID.LongMoss"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.IsFood">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item is food.
            <br/> Food items can be placed onto <see cref="F:Terraria.ID.TileID.FoodPlatter"/>s, have a <see cref="F:Terraria.Item.holdStyle"/> of <see cref="F:Terraria.ID.ItemHoldStyleID.HoldFront"/>, hide shields (<see cref="F:Terraria.Item.shieldSlot"/>) when held,
            <br/> Food item sprites must have 3 frames. The required framing code is automatically initialized.
            </summary>
            <remarks>
            The auto-initialized animation for  foods have 3 vertical frames.
            <br/> 1. Inventory sprite
            <br/> 2. Held sprite
            <br/> 3. <see cref="F:Terraria.ID.TileID.FoodPlatter"/> sprite
            <br/> <see cref="M:Terraria.Item.DefaultToFood(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)"/> will set many common item values for food.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.FoodParticleColors">
            <summary>
            If non-empty for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will create solid particles of the retrieved colors when used.
            <br/> Particles created by this set will fly outwards.
            <br/> Defaults to <c>Array.Empty&lt;Color&gt;</c>.
            </summary>
            <remarks>
            <see cref="F:Terraria.ID.ItemID.Sets.IsFood"/> does not need to be set for dust to be created.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.DrinkParticleColors">
            <summary>
            If non-empty for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will create translucent particles of the retrieved colors when used.
            <br/> Particles created by this set will drop downwards.
            <br/> Defaults to <c>Array.Empty&lt;Color&gt;</c>.
            </summary>
            <remarks>
            <see cref="F:Terraria.ID.ItemID.Sets.IsFood"/> does not need to be set for dust to be created.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.BannerStrength">
            <summary>
            Determines the <see cref="T:Terraria.ID.ItemID.BannerEffect"/> of the banner id associated with the given item type (<see cref="F:Terraria.Item.type"/>).
            <br/> Defaults to a full-strength <see cref="T:Terraria.ID.ItemID.BannerEffect"/> (<c><see langword="new"/> <see cref="T:Terraria.ID.ItemID.BannerEffect"/>(1f)</c>).
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.DefaultKillsForBannerNeeded">
            <summary>
            The default number of NPC kills required to obtain the NPC's respective banner.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.KillsToBanner">
            <summary>
            Determines the number of NPC kills required to obtain the given item type (<see cref="F:Terraria.Item.type"/>).
            <br/> Defaults to <c><see cref="F:Terraria.ID.ItemID.Sets.DefaultKillsForBannerNeeded"/></c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.CanFishInLava">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then fishing rods (<c><see cref="F:Terraria.Item.fishingPole"/> &gt; 0</c>) of that type will be able to catch items in lava.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.IsLavaBait">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then bait (<c><see cref="F:Terraria.Item.bait"/> &gt; 0</c>) of that type can be used to catch items in lava.
            <br/> Additionally, any catchable NPCs that drop the given item type (<see cref="F:Terraria.NPC.catchItem"/>) will inflict <see cref="F:Terraria.ID.BuffID.OnFire"/> on the catching player if not using a lava-proof tool (<see cref="F:Terraria.ID.ItemID.Sets.LavaproofCatchingTool"/>).
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ItemSpawnDecaySpeed">
            <summary>
            Determines the decay speed of the given item type (<see cref="F:Terraria.Item.type"/>). See <see cref="F:Terraria.Item.timeSinceItemSpawned"/> for more info.
            <br/> Defaults to <c>1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.IsFishingCrate">
            <summary>
            Only checked for vanilla IDs, but encouraged to set it on your modded crates for potential cross-mod support
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.IsFishingCrateHardmode">
            <inheritdoc cref="F:Terraria.ID.ItemID.Sets.IsFishingCrate"/>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.CanBePlacedOnWeaponRacks">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item can be placed into <see cref="F:Terraria.ID.TileID.WeaponsRack2"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            See <see cref="M:Terraria.GameContent.Tile_Entities.TEWeaponsRack.FitsWeaponFrame(Terraria.Item)"/> for the full conditions regarding weapon rack placement.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.TextureCopyLoad">
            <summary>
            <strong>Only checked for vanilla IDs.</strong>
            <br/> If <c>!= -1</c> for the given item type (<see cref="F:Terraria.Item.type"/>), then that item will use the texture of the retrieved item type.
            <br/> Defaults to <c>-1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.TrapSigned">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will have a small wire icon (<see cref="F:Terraria.GameContent.TextureAssets.Wire"/>) drawn over its sprite.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.Deprecated">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item cannot exist normally: It will be destroyed at the end of <see cref="M:Terraria.Item.SetDefaults(System.Int32)"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.NeverAppearsAsNewInInventory">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will never be highlighted (<see cref="F:Terraria.Item.newAndShiny"/>) when picked up, even if the associated setting (<see cref="F:Terraria.UI.ItemSlot.Options.HighlightNewItems"/>) is enabled.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.CommonCoin">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will sometimes be treated as a coin. It will not show up as loot in the Bestiary.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            This set does <strong>not</strong> make an item type act like a coin for most purposes. Items in this set cannot be used to buy items, will not go into the player's coin slots, etc.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ItemIconPulse">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will visually pulse when drawn.
            <br/> Additionally, any light this item produces when in the world will also pulse.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ItemNoGravity">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will float in place instead of falling when dropped into the world.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ExtractinatorMode">
            <summary>
            Indicates which extractinator type an item belongs to. An extractType of 0 represents the default extraction (Silt and Slush). 0, <see cref="F:Terraria.ID.ItemID.DesertFossil"/>, <see cref="F:Terraria.ID.ItemID.OldShoe"/>, and <see cref="F:Terraria.ID.ItemID.LavaMoss"/> are vanilla extraction types. Modded types by convention will correspond to the iconic item of the extraction type. The <see href="https://terraria.wiki.gg/wiki/Extractinator">Extractinator wiki page</see> has more info. Use this in conjunction with <see cref="M:Terraria.ModLoader.ModItem.ExtractinatorUse(System.Int32,System.Int32@,System.Int32@)"/> or <see cref="M:Terraria.ModLoader.GlobalItem.ExtractinatorUse(System.Int32,System.Int32,System.Int32@,System.Int32@)"/>. 
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.StaffMinionSlotsRequired">
            <summary>
            How many minion slots one usage of this item will spawn.
            <br/> This is only used when <see cref="F:Terraria.ID.ProjectileID.Sets.MinionSacrificable"/>[<see cref="F:Terraria.Item.shoot"/>] and <see cref="F:Terraria.Main.projPet"/> are <see langword="true"/> and when the player tries to summon a new minion.
            <br/> The retrieved value's worth of minion slots (<see cref="F:Terraria.Projectile.minionSlots"/>) will be killed, if necessary, to make room for the minion projectiles prior to spawning them.
            <br/> Defaults to <c>1f</c>. If the value is greater than 1f, make sure to check <see cref="F:Terraria.Player.maxMinions"/> in <see cref="M:Terraria.ModLoader.ModItem.CanUseItem(Terraria.Player)"/> as well.
            </summary>
            <remarks>
            The full process for sacrificing minions can be found at <see cref="M:Terraria.Player.FreeUpPetsAndMinions(Terraria.Item)"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.ExoticPlantsForDyeTrade">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item can be traded with the <see cref="F:Terraria.ID.NPCID.DyeTrader"/> in exchange for strange dyes.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.NebulaPickup">
            <summary>
            <strong>Do not add items to this set.</strong>
            <br/> If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item is a Nebula pickup.
            <br/> Nebula pickups cannot combine with nearby items, spawn with a random velocity, can be picked up from far away, and call <see cref="M:Terraria.Player.NebulaLevelup(System.Int32)"/> on pickup.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            If you want an item to act like a Nebula pickup without the side effects, see <see cref="F:Terraria.ID.ItemID.Sets.IsAPickup"/> and <see cref="M:Terraria.ModLoader.ModItem.OnPickup(Terraria.Player)"/> / <see cref="M:Terraria.ModLoader.GlobalItem.OnPickup(Terraria.Item,Terraria.Player)"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.AnimatesAsSoul">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will animate in the inventory and world.
            <br/> Items in this set <strong>must</strong> register an animation using <see cref="M:Terraria.Main.RegisterItemAnimation(System.Int32,Terraria.DataStructures.DrawAnimation)"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.gunProj">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item shoot projectiles that manually handle shooting.
            <br/> This is usually used to create animated weapons like the <see cref="F:Terraria.ID.ItemID.VortexBeater"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.SortingPriorityBossSpawns">
            <summary>
            Determines the sorting order of miscellaneous important items, such as boss/event spawners, permanent stat upgrades, and <see cref="F:Terraria.ID.ItemID.MagicMirror"/>-like items.
            <br/> If <c>!= -1</c> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will fall into the "gameplay" tab of the Journey Mode menu
            <br/> Defaults to <c>-1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.SortingPriorityWiring">
            <summary>
            Determines the sorting order of wiring items.
            <br/> If <c>!= -1</c> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will fall into the <see cref="F:Terraria.ID.ContentSamples.CreativeHelper.ItemGroup.Wiring"/> item group.
            <br/> Defaults to <c>-1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.SortingPriorityMaterials">
            <summary>
            Determines the sorting order of common materials, such as ores, bars and boss materials.
            <br/> Defaults to <c>-1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.SortingPriorityExtractibles">
            <summary>
            Determines the sorting order of extractible items, such as <see cref="F:Terraria.ID.ItemID.SiltBlock"/>.
            <br/> Defaults to <c>-1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.SortingPriorityRopes">
            <summary>
            Determines the sorting order of <see cref="F:Terraria.ID.ItemID.Rope"/> and similar items.
            <br/> If <c>!= -1</c> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item cannot be used to block swap.
            <br/> Defaults to <c>-1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.SortingPriorityPainting">
            <summary>
            Determines the sorting order of painting tools.
            <br/> If <c>!= -1</c> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will fall into the <see cref="F:Terraria.ID.ContentSamples.CreativeHelper.ItemGroup.Paint"/> item group.
            <br/> Defaults to <c>-1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.SortingPriorityTerraforming">
            <summary>
            Determines the sorting order of terraforming tools.
            <br/> Defaults to <c>-1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.GamepadExtraRange">
            <summary>
            Determines the extra range (in tile coordinates) that an item of the given item type (<see cref="F:Terraria.Item.type"/>) can be used in when using a controller.
            <br/> Defaults to <c>0</c>.
            </summary>
            <remarks>
            Use <seealso cref="F:Terraria.ID.ItemID.Sets.GamepadWholeScreenUseRange"/> for items with full-screen range.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.GamepadWholeScreenUseRange">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then holding that item will allow the player to move the gamepad cursor anywhere on screen.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.BonusAttackSpeedMultiplier">
            <summary>
            Determines the multiplier that applies to the given item type's (<see cref="F:Terraria.Item.type"/>) attack speed.
            <br/> A value of <c>0f</c> doesn't scale attack speed at all. Values <c>&gt; 1f</c> increase the effects of attack speed multipliers, values <c>&lt; 1f</c> decrease the effects.
            <br/> Defaults to <c>1f</c>.
            </summary>
            <remarks>
            See <see cref="M:Terraria.Player.GetWeaponAttackSpeed(Terraria.Item)"/> for the full calculation.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.GamepadSmartQuickReach">
            <summary>
            <strong>Unused.</strong>
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.Yoyo">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then holding that item while using a yoyo string (<see cref="F:Terraria.Player.yoyoString"/>) will allow the player to move the gamepad cursor an extra 5 tiles.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            Items in this set are <strong>not</strong> guaranteed to benefit from yoyo-exclusive effects. Yoyo effects are applied to projectiles where <c><see cref="F:Terraria.Projectile.aiStyle"/> == <see cref="F:Terraria.ID.ProjAIStyleID.Yoyo"/></c>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.AlsoABuildingItem">
            <summary>
            <strong>Unused.</strong>
            <br/> If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item can manipulate tiles in some way.
            <br/> Includes buckets, wrenches, etc.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.LockOnIgnoresCollision">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item can lock-on through solid tiles.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.LockOnAimAbove">
            <summary>
            If <c>!= 0</c> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will lock-on several tiles above the selected target, up to a maximum of the retrieved value.
            <br/> Defaults to <c>0</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.LockOnAimCompensation">
            <summary>
            If not <see langword="null"/> for the given item type (<see cref="F:Terraria.Item.type"/>), then that item will lock-on slightly offset from the target's position to compensate for its projectile's arc.
            <br/> The higher the value in this set, the more drastic the compensation. The offset position is slightly above the target and closer to the player.
            <br/> Defaults to <see langword="null"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.SingleUseInGamepad">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item will be used one per button press when using a gamepad.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            In vanilla, all items in this set are types of torches.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.Torches">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item is a torch.
            <br/> Torches can be auto-selected by Smart Cursor.
            <br/> <strong>Vanilla</strong> torches have an associated <see cref="T:Terraria.ID.TorchID"/>, which determines what color light they produce when held.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            To make a torch placable underwater, use <see cref="F:Terraria.ID.ItemID.Sets.WaterTorches"/> as well.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.WaterTorches">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item is a water torch.
            <br/> Funtionally identical to <see cref="F:Terraria.ID.ItemID.Sets.Torches"/>, but items in this set also function whilst underwater. Make sure to set <see cref="F:Terraria.ID.ItemID.Sets.Torches"/> as well if using this.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.Workbenches">
            <summary>
            The list of item types (<see cref="F:Terraria.Item.type"/>) that correspond to work benches.
            <br/> Used for the "Benched" achievement.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.BossBag">
            <summary>
            Set for all boss bags. Causes bags to drop dev armor and creates a glow around the item when dropped in the world.
            <br/> If your bag is pre-hardmode, don't forget to use the <see cref="F:Terraria.ID.ItemID.Sets.PreHardmodeLikeBossBag"/> set in conjunction with this one.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.OpenableBag">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item can be right-clicked in the inventory.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            For <see cref="T:Terraria.ModLoader.ModItem"/>s, you can simply use <see cref="M:Terraria.ModLoader.ModItem.CanRightClick"/> or <see cref="M:Terraria.ModLoader.GlobalItem.CanRightClick(Terraria.Item)"/> instead of this set.
            <br/> If you need to check if any item is right-clickable, use <see cref="M:Terraria.ModLoader.ItemLoader.CanRightClick(Terraria.Item)"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.Glowsticks">
            <summary>
            If <see langword="true"/> for a given item type (<see cref="F:Terraria.Item.type"/>), then that item is a glowstick.
            <br/> Glowsticks work underwater and will be auto-selected by Smart Cursor when the cursor is far away from the player.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.PreHardmodeLikeBossBag">
            <summary>
            Set for pre-hardmode boss bags, except it also contains the Queen Slime's Boss Bag. Affects the way dev armor drops function, making it only drop in special world seeds.
            <br/> Don't forget to use the <see cref="F:Terraria.ID.ItemID.Sets.BossBag"/> set in conjuction with this one.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.CatchingTool">
            <summary>
            Set for catching tools (bug net-type items which can catch critters).<br></br>
            If you want your catching tool to be able to catch the Underworld's lava critters, don't forget to use the <see cref="F:Terraria.ID.ItemID.Sets.LavaproofCatchingTool"/> set in conjunction with this one.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.LavaproofCatchingTool">
            <summary>
            Set for catching tools which can catch the Underworld's lava critters.<br></br>
            Don't forget to use the <see cref="F:Terraria.ID.ItemID.Sets.CatchingTool"/> set in conjunction with this one. 
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.Spears">
            <summary>
            Set for easily defining weapons as spears.<br/>
            Only used for vanilla spears to make sure they still scale with attack speed (though it's encouraged to set this for your spears as well, for cross-mod support).<br/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.CoinLuckValue">
            <summary>
            Set for defining how much coin luck according to its stack this item gives to nearby players when thrown into shimmer (<see cref="F:Terraria.Entity.shimmerWet"/>).<br/>
            Includes the 4 vanilla coin types by default. The value represents the "price" of the currency in copper coins. For other items, default value is 0, which means it will not give coin luck.<br/>
            </summary>
            <remarks>Coin luck application takes precedence over other actions related to shimmer.</remarks>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.IsRangedSpecialistWeapon">
            <summary>
            If true, the item counts as a specialist weapon.<br/>
            Used for Shroomite Helmet damage buffs (and other effects that will affect <see cref="F:Terraria.Player.specialistDamage"/>).<br/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.GeodeDrops">
            <summary>
            Dictionary for defining what items will drop from a <see cref="F:Terraria.ID.ProjectileID.Geode"/> when broken. All items in this dictionary are equally likely to roll, and will drop with a stack size between minStack and maxStack (exclusive).
            <br/>Stack sizes with less than 1 or where minStack is not strictly smaller than maxStack will lead to exceptions being thrown.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.DisableAutomaticPlaceableDrop">
            <summary>
            Set to true to ignore this Item when determining Tile or Wall drops automatically from <see cref="F:Terraria.Item.createTile"/> and <see cref="F:Terraria.Item.createWall"/>. Use this for any item that places the same Tile/Wall as another item, but shouldn't be retrieved when mined. For example, an "infinite" version of a placement item would set this, allowing the non-infinite version to be used reliably as the drop.
            <br/> Also use this for any item which places a tile that doesn't return that same item when mined. Herb Seeds, for example, don't necessarily drop from Herb plants.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemID.Sets.OreDropsFromSlime">
            <summary>
            Dictionary for defining what ores can spawn as bonus drop inside slime body. All items in this dictionary are equally likely to roll, and will drop with a stack size between minStack and maxStack (inclusive).
            <br/>Stack sizes with less than 1 or where minStack is not strictly smaller than maxStack will lead to exceptions being thrown.
            </summary>
        </member>
        <member name="T:Terraria.ID.ItemRarityID">
            <summary>Enumerates the values used with Item.rare</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Master">
            <summary>Minus thirteen (-13)<br/>Master: Fiery Red<br/>Flag: item.master</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Expert">
            <summary>Minus twelve (-12)<br/>Expert: Rainbow<br/>Flag: item.expert</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Quest">
            <summary>Minus eleven (-11)<br/>Quest: Amber<br/>Flag: item.quest</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Gray">
            <summary>Minus one (-1)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.White">
            <summary>Zero (0)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Blue">
            <summary>One (1)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Green">
            <summary>Two (2)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Orange">
            <summary>Three (3)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.LightRed">
            <summary>Four (4)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Pink">
            <summary>Five (5)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.LightPurple">
            <summary>Six (6)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Lime">
            <summary>Seven (7)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Yellow">
            <summary>Eight (8)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Cyan">
            <summary>Nine (9)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Red">
            <summary>Ten (10)</summary>
        </member>
        <member name="F:Terraria.ID.ItemRarityID.Purple">
            <summary>Eleven (11)</summary>
        </member>
        <member name="T:Terraria.ID.ItemUseStyleID">
            <summary>
            Assign <see cref="F:Terraria.Item.useStyle"/> to one of these to give your item an animation while in use. The <see href="https://terraria.wiki.gg/wiki/Use_Style_IDs">Use Style IDs wiki page</see> has examples and animations of each of these use styles.
            <br/> If none of these animations match what you want, consider making the animation a behavior of a held projectile or use the <see cref="M:Terraria.ModLoader.ModItem.UseStyle(Terraria.Player,Microsoft.Xna.Framework.Rectangle)"/> hook to implement a custom animation.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemUseStyleID.Swing">
            <summary>Item is swung in an overhead arch.<br/>Used for many sword weapons, block placement, etc.</summary>
        </member>
        <member name="F:Terraria.ID.ItemUseStyleID.DrinkOld">
            <summary>
            Unused
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemUseStyleID.Thrust">
            <summary>Item is thrust horizontally.<br/>Use by <see cref="F:Terraria.ID.ItemID.Umbrella"/> and <see cref="F:Terraria.ID.ItemID.TragicUmbrella"/></summary>
        </member>
        <member name="F:Terraria.ID.ItemUseStyleID.HoldUp">
            <summary>Item is held up.<br/>Used for items such as mana/life crystals, life fruit, magic mirrors, and summoning items</summary>
        </member>
        <member name="F:Terraria.ID.ItemUseStyleID.Shoot">
            <summary>
            Item is held in front of player pointing towards mouse. Item sprite should be oriented horizontally with handle at left and muzzle end at right. Set <c><see cref="F:Terraria.Item.staff"/>[Type] = true;</c> in SetStaticDefaults if the weapon sprite is oriented like a staff (handle at bottom left, end at top right).
            <br/> Used by items such as guns, spellbooks, flails, yoyos, and spears
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemUseStyleID.DrinkLong">
            <summary>
            Item is brought in front of player and rotated towards player.
            <br/> Used by Recall Potion and Potion of Return
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemUseStyleID.EatFood">
            <summary>Eating or using<br/>Used by food</summary>
        </member>
        <member name="F:Terraria.ID.ItemUseStyleID.GolfPlay">
            <summary>
            Item is swung like a golf club.
            <br/> Used by golf clubs.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemUseStyleID.DrinkLiquid">
            <summary>
            Item is brought in front of player and rotated towards player.
            <br/> Used by potions, drings, flasks, and hair dyes.
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemUseStyleID.MowTheLawn">
            <summary>
            Used by Lawn Mower
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemUseStyleID.Guitar">
            <summary>
            Used by guitar-shaped instruments
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemUseStyleID.Rapier">
            <summary>
            Item is thurst in any direction towards the mouse.
            Used by shortswords
            </summary>
        </member>
        <member name="F:Terraria.ID.ItemUseStyleID.RaiseLamp">
            <summary>
            Item is raised high by off hand.
            <br/> Used by Nightglow.
            </summary>
        </member>
        <member name="F:Terraria.ID.MountID.Sets.Cart">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.MountID"/>, then that mount is categorized as a minecart.
            <br/> Minecarts have a dedicated equipment slot, will be auto-used if the player interacts with a <see cref="F:Terraria.ID.TileID.MinecartTrack"/>, and are buffed if <see cref="P:Terraria.Player.UsingSuperCart"/> is <see langword="true"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.MountID.Sets.FacePlayersVelocity">
            <summary>
            If <see langword="true"/> for a given <see cref="T:Terraria.ID.MountID"/>, then that mount will face the player's velocity instead of their <see cref="F:Terraria.Entity.direction"/>.
            <br/> Vanilla uses this set for many minecarts.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="T:Terraria.ID.NetmodeID">
            <summary>
            Correspond to <see cref="F:Terraria.Main.netMode"/> values.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.FaceClosestPlayer">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.BoundGoblin"/>, <see cref="F:Terraria.ID.NPCID.BoundWizard"/>, <see cref="F:Terraria.ID.NPCID.BoundMechanic"/>, <see cref="F:Terraria.ID.NPCID.WebbedStylist"/>, <see cref="F:Terraria.ID.NPCID.SleepingAngler"/>, <see cref="F:Terraria.ID.NPCID.BartenderUnconscious"/>, <see cref="F:Terraria.ID.NPCID.GolferRescue"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Slime">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.BigCrimslime"/>, <see cref="F:Terraria.ID.NPCID.LittleCrimslime"/>, <see cref="F:Terraria.ID.NPCID.JungleSlime"/>, <see cref="F:Terraria.ID.NPCID.YellowSlime"/>, <see cref="F:Terraria.ID.NPCID.RedSlime"/>, <see cref="F:Terraria.ID.NPCID.PurpleSlime"/>, <see cref="F:Terraria.ID.NPCID.BlackSlime"/>, <see cref="F:Terraria.ID.NPCID.BabySlime"/>, <see cref="F:Terraria.ID.NPCID.Pinky"/>, <see cref="F:Terraria.ID.NPCID.GreenSlime"/>, <see cref="F:Terraria.ID.NPCID.Slimer2"/>, <see cref="F:Terraria.ID.NPCID.Slimeling"/>, <see cref="F:Terraria.ID.NPCID.BlueSlime"/>, <see cref="F:Terraria.ID.NPCID.MotherSlime"/>, <see cref="F:Terraria.ID.NPCID.LavaSlime"/>, <see cref="F:Terraria.ID.NPCID.DungeonSlime"/>, <see cref="F:Terraria.ID.NPCID.CorruptSlime"/>, <see cref="F:Terraria.ID.NPCID.IlluminantSlime"/>, <see cref="F:Terraria.ID.NPCID.ToxicSludge"/>, <see cref="F:Terraria.ID.NPCID.IceSlime"/>, <see cref="F:Terraria.ID.NPCID.Crimslime"/>, <see cref="F:Terraria.ID.NPCID.SpikedIceSlime"/>, <see cref="F:Terraria.ID.NPCID.SpikedJungleSlime"/>, <see cref="F:Terraria.ID.NPCID.UmbrellaSlime"/>, <see cref="F:Terraria.ID.NPCID.RainbowSlime"/>, <see cref="F:Terraria.ID.NPCID.SlimeMasked"/>, <see cref="F:Terraria.ID.NPCID.HoppinJack"/>, <see cref="F:Terraria.ID.NPCID.SlimeRibbonWhite"/>, <see cref="F:Terraria.ID.NPCID.SlimeRibbonYellow"/>, <see cref="F:Terraria.ID.NPCID.SlimeRibbonGreen"/>, <see cref="F:Terraria.ID.NPCID.SlimeRibbonRed"/>, <see cref="F:Terraria.ID.NPCID.Grasshopper"/>, <see cref="F:Terraria.ID.NPCID.GoldGrasshopper"/>, <see cref="F:Terraria.ID.NPCID.SlimeSpiked"/>, <see cref="F:Terraria.ID.NPCID.SandSlime"/>, <see cref="F:Terraria.ID.NPCID.QueenSlimeMinionBlue"/>, <see cref="F:Terraria.ID.NPCID.QueenSlimeMinionPink"/>, <see cref="F:Terraria.ID.NPCID.GoldenSlime"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.DemonEye">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.DemonEye2"/>, <see cref="F:Terraria.ID.NPCID.PurpleEye2"/>, <see cref="F:Terraria.ID.NPCID.GreenEye2"/>, <see cref="F:Terraria.ID.NPCID.DialatedEye2"/>, <see cref="F:Terraria.ID.NPCID.SleepyEye2"/>, <see cref="F:Terraria.ID.NPCID.CataractEye2"/>, <see cref="F:Terraria.ID.NPCID.DemonEye"/>, <see cref="F:Terraria.ID.NPCID.TheHungryII"/>, <see cref="F:Terraria.ID.NPCID.WanderingEye"/>, <see cref="F:Terraria.ID.NPCID.PigronCorruption"/>, <see cref="F:Terraria.ID.NPCID.PigronHallow"/>, <see cref="F:Terraria.ID.NPCID.PigronCrimson"/>, <see cref="F:Terraria.ID.NPCID.CataractEye"/>, <see cref="F:Terraria.ID.NPCID.SleepyEye"/>, <see cref="F:Terraria.ID.NPCID.DialatedEye"/>, <see cref="F:Terraria.ID.NPCID.GreenEye"/>, <see cref="F:Terraria.ID.NPCID.PurpleEye"/>, <see cref="F:Terraria.ID.NPCID.DemonEyeOwl"/>, <see cref="F:Terraria.ID.NPCID.DemonEyeSpaceship"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Fighter">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.BigRainZombie"/>, <see cref="F:Terraria.ID.NPCID.SmallRainZombie"/>, <see cref="F:Terraria.ID.NPCID.BigPantlessSkeleton"/>, <see cref="F:Terraria.ID.NPCID.SmallPantlessSkeleton"/>, <see cref="F:Terraria.ID.NPCID.BigMisassembledSkeleton"/>, <see cref="F:Terraria.ID.NPCID.SmallMisassembledSkeleton"/>, <see cref="F:Terraria.ID.NPCID.BigHeadacheSkeleton"/>, <see cref="F:Terraria.ID.NPCID.SmallHeadacheSkeleton"/>, <see cref="F:Terraria.ID.NPCID.BigSkeleton"/>, <see cref="F:Terraria.ID.NPCID.SmallSkeleton"/>, <see cref="F:Terraria.ID.NPCID.BigFemaleZombie"/>, <see cref="F:Terraria.ID.NPCID.SmallFemaleZombie"/>, <see cref="F:Terraria.ID.NPCID.BigTwiggyZombie"/>, <see cref="F:Terraria.ID.NPCID.SmallTwiggyZombie"/>, <see cref="F:Terraria.ID.NPCID.BigSwampZombie"/>, <see cref="F:Terraria.ID.NPCID.SmallSwampZombie"/>, <see cref="F:Terraria.ID.NPCID.BigSlimedZombie"/>, <see cref="F:Terraria.ID.NPCID.SmallSlimedZombie"/>, <see cref="F:Terraria.ID.NPCID.BigPincushionZombie"/>, <see cref="F:Terraria.ID.NPCID.SmallPincushionZombie"/>, <see cref="F:Terraria.ID.NPCID.BigBaldZombie"/>, <see cref="F:Terraria.ID.NPCID.SmallBaldZombie"/>, <see cref="F:Terraria.ID.NPCID.BigZombie"/>, <see cref="F:Terraria.ID.NPCID.SmallZombie"/>, <see cref="F:Terraria.ID.NPCID.HeavySkeleton"/>, <see cref="F:Terraria.ID.NPCID.BigBoned"/>, <see cref="F:Terraria.ID.NPCID.ShortBones"/>, <see cref="F:Terraria.ID.NPCID.Zombie"/>, <see cref="F:Terraria.ID.NPCID.Skeleton"/>, <see cref="F:Terraria.ID.NPCID.GoblinPeon"/>, <see cref="F:Terraria.ID.NPCID.GoblinThief"/>, <see cref="F:Terraria.ID.NPCID.GoblinWarrior"/>, <see cref="F:Terraria.ID.NPCID.AngryBones"/>, <see cref="F:Terraria.ID.NPCID.UndeadMiner"/>, <see cref="F:Terraria.ID.NPCID.CorruptBunny"/>, <see cref="F:Terraria.ID.NPCID.DoctorBones"/>, <see cref="F:Terraria.ID.NPCID.TheGroom"/>, <see cref="F:Terraria.ID.NPCID.Crab"/>, <see cref="F:Terraria.ID.NPCID.GoblinScout"/>, <see cref="F:Terraria.ID.NPCID.ArmoredSkeleton"/>, <see cref="F:Terraria.ID.NPCID.Mummy"/>, <see cref="F:Terraria.ID.NPCID.DarkMummy"/>, <see cref="F:Terraria.ID.NPCID.LightMummy"/>, <see cref="F:Terraria.ID.NPCID.Werewolf"/>, <see cref="F:Terraria.ID.NPCID.Clown"/>, <see cref="F:Terraria.ID.NPCID.SkeletonArcher"/>, <see cref="F:Terraria.ID.NPCID.GoblinArcher"/>, <see cref="F:Terraria.ID.NPCID.ChaosElemental"/>, <see cref="F:Terraria.ID.NPCID.BaldZombie"/>, <see cref="F:Terraria.ID.NPCID.PossessedArmor"/>, <see cref="F:Terraria.ID.NPCID.Vampire"/>, <see cref="F:Terraria.ID.NPCID.ZombieEskimo"/>, <see cref="F:Terraria.ID.NPCID.Frankenstein"/>, <see cref="F:Terraria.ID.NPCID.BlackRecluse"/>, <see cref="F:Terraria.ID.NPCID.WallCreeper"/>, <see cref="F:Terraria.ID.NPCID.SwampThing"/>, <see cref="F:Terraria.ID.NPCID.UndeadViking"/>, <see cref="F:Terraria.ID.NPCID.CorruptPenguin"/>, <see cref="F:Terraria.ID.NPCID.FaceMonster"/>, <see cref="F:Terraria.ID.NPCID.SnowFlinx"/>, <see cref="F:Terraria.ID.NPCID.PincushionZombie"/>, <see cref="F:Terraria.ID.NPCID.SlimedZombie"/>, <see cref="F:Terraria.ID.NPCID.SwampZombie"/>, <see cref="F:Terraria.ID.NPCID.TwiggyZombie"/>, <see cref="F:Terraria.ID.NPCID.Nymph"/>, <see cref="F:Terraria.ID.NPCID.ArmoredViking"/>, <see cref="F:Terraria.ID.NPCID.Lihzahrd"/>, <see cref="F:Terraria.ID.NPCID.LihzahrdCrawler"/>, <see cref="F:Terraria.ID.NPCID.FemaleZombie"/>, <see cref="F:Terraria.ID.NPCID.HeadacheSkeleton"/>, <see cref="F:Terraria.ID.NPCID.MisassembledSkeleton"/>, <see cref="F:Terraria.ID.NPCID.PantlessSkeleton"/>, <see cref="F:Terraria.ID.NPCID.IcyMerman"/>, <see cref="F:Terraria.ID.NPCID.PirateDeckhand"/>, <see cref="F:Terraria.ID.NPCID.PirateCorsair"/>, <see cref="F:Terraria.ID.NPCID.PirateDeadeye"/>, <see cref="F:Terraria.ID.NPCID.PirateCrossbower"/>, <see cref="F:Terraria.ID.NPCID.PirateCaptain"/>, <see cref="F:Terraria.ID.NPCID.CochinealBeetle"/>, <see cref="F:Terraria.ID.NPCID.CyanBeetle"/>, <see cref="F:Terraria.ID.NPCID.LacBeetle"/>, <see cref="F:Terraria.ID.NPCID.SeaSnail"/>, <see cref="F:Terraria.ID.NPCID.ZombieRaincoat"/>, <see cref="F:Terraria.ID.NPCID.JungleCreeper"/>, <see cref="F:Terraria.ID.NPCID.BloodCrawler"/>, <see cref="F:Terraria.ID.NPCID.IceGolem"/>, <see cref="F:Terraria.ID.NPCID.Eyezor"/>, <see cref="F:Terraria.ID.NPCID.ZombieMushroom"/>, <see cref="F:Terraria.ID.NPCID.ZombieMushroomHat"/>, <see cref="F:Terraria.ID.NPCID.AnomuraFungus"/>, <see cref="F:Terraria.ID.NPCID.MushiLadybug"/>, <see cref="F:Terraria.ID.NPCID.RustyArmoredBonesAxe"/>, <see cref="F:Terraria.ID.NPCID.RustyArmoredBonesFlail"/>, <see cref="F:Terraria.ID.NPCID.RustyArmoredBonesSword"/>, <see cref="F:Terraria.ID.NPCID.RustyArmoredBonesSwordNoArmor"/>, <see cref="F:Terraria.ID.NPCID.BlueArmoredBones"/>, <see cref="F:Terraria.ID.NPCID.BlueArmoredBonesMace"/>, <see cref="F:Terraria.ID.NPCID.BlueArmoredBonesNoPants"/>, <see cref="F:Terraria.ID.NPCID.BlueArmoredBonesSword"/>, <see cref="F:Terraria.ID.NPCID.HellArmoredBones"/>, <see cref="F:Terraria.ID.NPCID.HellArmoredBonesSpikeShield"/>, <see cref="F:Terraria.ID.NPCID.HellArmoredBonesMace"/>, <see cref="F:Terraria.ID.NPCID.HellArmoredBonesSword"/>, <see cref="F:Terraria.ID.NPCID.BoneLee"/>, <see cref="F:Terraria.ID.NPCID.Paladin"/>, <see cref="F:Terraria.ID.NPCID.SkeletonSniper"/>, <see cref="F:Terraria.ID.NPCID.TacticalSkeleton"/>, <see cref="F:Terraria.ID.NPCID.SkeletonCommando"/>, <see cref="F:Terraria.ID.NPCID.AngryBonesBig"/>, <see cref="F:Terraria.ID.NPCID.AngryBonesBigMuscle"/>, <see cref="F:Terraria.ID.NPCID.AngryBonesBigHelmet"/>, <see cref="F:Terraria.ID.NPCID.Scarecrow1"/>, <see cref="F:Terraria.ID.NPCID.Scarecrow2"/>, <see cref="F:Terraria.ID.NPCID.Scarecrow3"/>, <see cref="F:Terraria.ID.NPCID.Scarecrow4"/>, <see cref="F:Terraria.ID.NPCID.Scarecrow5"/>, <see cref="F:Terraria.ID.NPCID.Scarecrow6"/>, <see cref="F:Terraria.ID.NPCID.Scarecrow7"/>, <see cref="F:Terraria.ID.NPCID.Scarecrow8"/>, <see cref="F:Terraria.ID.NPCID.Scarecrow9"/>, <see cref="F:Terraria.ID.NPCID.Scarecrow10"/>, <see cref="F:Terraria.ID.NPCID.ZombieDoctor"/>, <see cref="F:Terraria.ID.NPCID.ZombieSuperman"/>, <see cref="F:Terraria.ID.NPCID.ZombiePixie"/>, <see cref="F:Terraria.ID.NPCID.SkeletonTopHat"/>, <see cref="F:Terraria.ID.NPCID.SkeletonAstonaut"/>, <see cref="F:Terraria.ID.NPCID.SkeletonAlien"/>, <see cref="F:Terraria.ID.NPCID.Splinterling"/>, <see cref="F:Terraria.ID.NPCID.ZombieXmas"/>, <see cref="F:Terraria.ID.NPCID.ZombieSweater"/>, <see cref="F:Terraria.ID.NPCID.ZombieElf"/>, <see cref="F:Terraria.ID.NPCID.ZombieElfBeard"/>, <see cref="F:Terraria.ID.NPCID.ZombieElfGirl"/>, <see cref="F:Terraria.ID.NPCID.GingerbreadMan"/>, <see cref="F:Terraria.ID.NPCID.Yeti"/>, <see cref="F:Terraria.ID.NPCID.Nutcracker"/>, <see cref="F:Terraria.ID.NPCID.NutcrackerSpinning"/>, <see cref="F:Terraria.ID.NPCID.ElfArcher"/>, <see cref="F:Terraria.ID.NPCID.Krampus"/>, <see cref="F:Terraria.ID.NPCID.CultistArcherBlue"/>, <see cref="F:Terraria.ID.NPCID.CultistArcherWhite"/>, <see cref="F:Terraria.ID.NPCID.BrainScrambler"/>, <see cref="F:Terraria.ID.NPCID.RayGunner"/>, <see cref="F:Terraria.ID.NPCID.MartianOfficer"/>, <see cref="F:Terraria.ID.NPCID.GrayGrunt"/>, <see cref="F:Terraria.ID.NPCID.MartianEngineer"/>, <see cref="F:Terraria.ID.NPCID.GigaZapper"/>, <see cref="F:Terraria.ID.NPCID.Scutlix"/>, <see cref="F:Terraria.ID.NPCID.StardustSpiderBig"/>, <see cref="F:Terraria.ID.NPCID.StardustSoldier"/>, <see cref="F:Terraria.ID.NPCID.SolarDrakomire"/>, <see cref="F:Terraria.ID.NPCID.SolarSolenian"/>, <see cref="F:Terraria.ID.NPCID.NebulaSoldier"/>, <see cref="F:Terraria.ID.NPCID.VortexRifleman"/>, <see cref="F:Terraria.ID.NPCID.VortexHornetQueen"/>, <see cref="F:Terraria.ID.NPCID.VortexHornet"/>, <see cref="F:Terraria.ID.NPCID.VortexLarva"/>, <see cref="F:Terraria.ID.NPCID.VortexSoldier"/>, <see cref="F:Terraria.ID.NPCID.ArmedZombie"/>, <see cref="F:Terraria.ID.NPCID.ArmedZombieEskimo"/>, <see cref="F:Terraria.ID.NPCID.ArmedZombiePincussion"/>, <see cref="F:Terraria.ID.NPCID.ArmedZombieSlimed"/>, <see cref="F:Terraria.ID.NPCID.ArmedZombieSwamp"/>, <see cref="F:Terraria.ID.NPCID.ArmedZombieTwiggy"/>, <see cref="F:Terraria.ID.NPCID.ArmedZombieCenx"/>, <see cref="F:Terraria.ID.NPCID.BoneThrowingSkeleton"/>, <see cref="F:Terraria.ID.NPCID.BoneThrowingSkeleton2"/>, <see cref="F:Terraria.ID.NPCID.BoneThrowingSkeleton3"/>, <see cref="F:Terraria.ID.NPCID.BoneThrowingSkeleton4"/>, <see cref="F:Terraria.ID.NPCID.Butcher"/>, <see cref="F:Terraria.ID.NPCID.CreatureFromTheDeep"/>, <see cref="F:Terraria.ID.NPCID.Fritz"/>, <see cref="F:Terraria.ID.NPCID.Nailhead"/>, <see cref="F:Terraria.ID.NPCID.CrimsonBunny"/>, <see cref="F:Terraria.ID.NPCID.Psycho"/>, <see cref="F:Terraria.ID.NPCID.DrManFly"/>, <see cref="F:Terraria.ID.NPCID.ThePossessed"/>, <see cref="F:Terraria.ID.NPCID.CrimsonPenguin"/>, <see cref="F:Terraria.ID.NPCID.GoblinSummoner"/>, <see cref="F:Terraria.ID.NPCID.Medusa"/>, <see cref="F:Terraria.ID.NPCID.GreekSkeleton"/>, <see cref="F:Terraria.ID.NPCID.GraniteGolem"/>, <see cref="F:Terraria.ID.NPCID.BloodZombie"/>, <see cref="F:Terraria.ID.NPCID.Crawdad"/>, <see cref="F:Terraria.ID.NPCID.Crawdad2"/>, <see cref="F:Terraria.ID.NPCID.Salamander"/>, <see cref="F:Terraria.ID.NPCID.Salamander2"/>, <see cref="F:Terraria.ID.NPCID.Salamander3"/>, <see cref="F:Terraria.ID.NPCID.Salamander4"/>, <see cref="F:Terraria.ID.NPCID.Salamander5"/>, <see cref="F:Terraria.ID.NPCID.Salamander6"/>, <see cref="F:Terraria.ID.NPCID.Salamander7"/>, <see cref="F:Terraria.ID.NPCID.Salamander8"/>, <see cref="F:Terraria.ID.NPCID.Salamander9"/>, <see cref="F:Terraria.ID.NPCID.GiantWalkingAntlion"/>, <see cref="F:Terraria.ID.NPCID.SolarSpearman"/>, <see cref="F:Terraria.ID.NPCID.MartianWalker"/>, <see cref="F:Terraria.ID.NPCID.DesertGhoul"/>, <see cref="F:Terraria.ID.NPCID.DesertGhoulCorruption"/>, <see cref="F:Terraria.ID.NPCID.DesertGhoulCrimson"/>, <see cref="F:Terraria.ID.NPCID.DesertGhoulHallow"/>, <see cref="F:Terraria.ID.NPCID.DesertLamiaLight"/>, <see cref="F:Terraria.ID.NPCID.DesertLamiaDark"/>, <see cref="F:Terraria.ID.NPCID.DesertScorpionWalk"/>, <see cref="F:Terraria.ID.NPCID.DesertBeast"/>, <see cref="F:Terraria.ID.NPCID.DemonTaxCollector"/>, <see cref="F:Terraria.ID.NPCID.TheBride"/>, <see cref="F:Terraria.ID.NPCID.WalkingAntlion"/>, <see cref="F:Terraria.ID.NPCID.LarvaeAntlion"/>, <see cref="F:Terraria.ID.NPCID.ZombieMerman"/>, <see cref="F:Terraria.ID.NPCID.TorchZombie"/>, <see cref="F:Terraria.ID.NPCID.ArmedTorchZombie"/>, <see cref="F:Terraria.ID.NPCID.Gnome"/>, <see cref="F:Terraria.ID.NPCID.BloodMummy"/>, <see cref="F:Terraria.ID.NPCID.RockGolem"/>, <see cref="F:Terraria.ID.NPCID.MaggotZombie"/>, <see cref="F:Terraria.ID.NPCID.SporeSkeleton"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.EyeOfCthulhu">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.EyeofCthulhu"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Flying">
            <summary>
            Behavior: Includes things such as Eaters of Souls<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.BigHornetStingy"/>, <see cref="F:Terraria.ID.NPCID.LittleHornetStingy"/>, <see cref="F:Terraria.ID.NPCID.BigHornetSpikey"/>, <see cref="F:Terraria.ID.NPCID.LittleHornetSpikey"/>, <see cref="F:Terraria.ID.NPCID.BigHornetLeafy"/>, <see cref="F:Terraria.ID.NPCID.LittleHornetLeafy"/>, <see cref="F:Terraria.ID.NPCID.BigHornetHoney"/>, <see cref="F:Terraria.ID.NPCID.LittleHornetHoney"/>, <see cref="F:Terraria.ID.NPCID.BigHornetFatty"/>, <see cref="F:Terraria.ID.NPCID.LittleHornetFatty"/>, <see cref="F:Terraria.ID.NPCID.BigCrimera"/>, <see cref="F:Terraria.ID.NPCID.LittleCrimera"/>, <see cref="F:Terraria.ID.NPCID.GiantMossHornet"/>, <see cref="F:Terraria.ID.NPCID.BigMossHornet"/>, <see cref="F:Terraria.ID.NPCID.LittleMossHornet"/>, <see cref="F:Terraria.ID.NPCID.TinyMossHornet"/>, <see cref="F:Terraria.ID.NPCID.BigStinger"/>, <see cref="F:Terraria.ID.NPCID.LittleStinger"/>, <see cref="F:Terraria.ID.NPCID.BigEater"/>, <see cref="F:Terraria.ID.NPCID.LittleEater"/>, <see cref="F:Terraria.ID.NPCID.ServantofCthulhu"/>, <see cref="F:Terraria.ID.NPCID.EaterofSouls"/>, <see cref="F:Terraria.ID.NPCID.MeteorHead"/>, <see cref="F:Terraria.ID.NPCID.Hornet"/>, <see cref="F:Terraria.ID.NPCID.Corruptor"/>, <see cref="F:Terraria.ID.NPCID.Probe"/>, <see cref="F:Terraria.ID.NPCID.Crimera"/>, <see cref="F:Terraria.ID.NPCID.MossHornet"/>, <see cref="F:Terraria.ID.NPCID.Moth"/>, <see cref="F:Terraria.ID.NPCID.Bee"/>, <see cref="F:Terraria.ID.NPCID.BeeSmall"/>, <see cref="F:Terraria.ID.NPCID.HornetFatty"/>, <see cref="F:Terraria.ID.NPCID.HornetHoney"/>, <see cref="F:Terraria.ID.NPCID.HornetLeafy"/>, <see cref="F:Terraria.ID.NPCID.HornetSpikey"/>, <see cref="F:Terraria.ID.NPCID.HornetStingy"/>, <see cref="F:Terraria.ID.NPCID.Parrot"/>, <see cref="F:Terraria.ID.NPCID.BloodSquid"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Worm">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.DevourerHead"/>, <see cref="F:Terraria.ID.NPCID.DevourerBody"/>, <see cref="F:Terraria.ID.NPCID.DevourerTail"/>, <see cref="F:Terraria.ID.NPCID.GiantWormHead"/>, <see cref="F:Terraria.ID.NPCID.GiantWormBody"/>, <see cref="F:Terraria.ID.NPCID.GiantWormTail"/>, <see cref="F:Terraria.ID.NPCID.EaterofWorldsHead"/>, <see cref="F:Terraria.ID.NPCID.EaterofWorldsBody"/>, <see cref="F:Terraria.ID.NPCID.EaterofWorldsTail"/>, <see cref="F:Terraria.ID.NPCID.BoneSerpentHead"/>, <see cref="F:Terraria.ID.NPCID.BoneSerpentBody"/>, <see cref="F:Terraria.ID.NPCID.BoneSerpentTail"/>, <see cref="F:Terraria.ID.NPCID.WyvernHead"/>, <see cref="F:Terraria.ID.NPCID.WyvernLegs"/>, <see cref="F:Terraria.ID.NPCID.WyvernBody"/>, <see cref="F:Terraria.ID.NPCID.WyvernBody2"/>, <see cref="F:Terraria.ID.NPCID.WyvernBody3"/>, <see cref="F:Terraria.ID.NPCID.WyvernTail"/>, <see cref="F:Terraria.ID.NPCID.DiggerHead"/>, <see cref="F:Terraria.ID.NPCID.DiggerBody"/>, <see cref="F:Terraria.ID.NPCID.DiggerTail"/>, <see cref="F:Terraria.ID.NPCID.SeekerHead"/>, <see cref="F:Terraria.ID.NPCID.SeekerBody"/>, <see cref="F:Terraria.ID.NPCID.SeekerTail"/>, <see cref="F:Terraria.ID.NPCID.LeechHead"/>, <see cref="F:Terraria.ID.NPCID.LeechBody"/>, <see cref="F:Terraria.ID.NPCID.LeechTail"/>, <see cref="F:Terraria.ID.NPCID.TruffleWormDigger"/>, <see cref="F:Terraria.ID.NPCID.StardustWormHead"/>, <see cref="F:Terraria.ID.NPCID.SolarCrawltipedeHead"/>, <see cref="F:Terraria.ID.NPCID.SolarCrawltipedeBody"/>, <see cref="F:Terraria.ID.NPCID.SolarCrawltipedeTail"/>, <see cref="F:Terraria.ID.NPCID.CultistDragonHead"/>, <see cref="F:Terraria.ID.NPCID.CultistDragonBody1"/>, <see cref="F:Terraria.ID.NPCID.CultistDragonBody2"/>, <see cref="F:Terraria.ID.NPCID.CultistDragonBody3"/>, <see cref="F:Terraria.ID.NPCID.CultistDragonBody4"/>, <see cref="F:Terraria.ID.NPCID.CultistDragonTail"/>, <see cref="F:Terraria.ID.NPCID.DuneSplicerHead"/>, <see cref="F:Terraria.ID.NPCID.DuneSplicerBody"/>, <see cref="F:Terraria.ID.NPCID.DuneSplicerTail"/>, <see cref="F:Terraria.ID.NPCID.TombCrawlerHead"/>, <see cref="F:Terraria.ID.NPCID.TombCrawlerBody"/>, <see cref="F:Terraria.ID.NPCID.TombCrawlerTail"/>, <see cref="F:Terraria.ID.NPCID.BloodEelHead"/>, <see cref="F:Terraria.ID.NPCID.BloodEelBody"/>, <see cref="F:Terraria.ID.NPCID.BloodEelTail"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Passive">
            <summary>
            Behavior: Includes Town NPCs and some ambient creatures, only Town NPCs will have defense with this AI, due to type-based hardcode<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.Merchant"/>, <see cref="F:Terraria.ID.NPCID.Nurse"/>, <see cref="F:Terraria.ID.NPCID.ArmsDealer"/>, <see cref="F:Terraria.ID.NPCID.Dryad"/>, <see cref="F:Terraria.ID.NPCID.Guide"/>, <see cref="F:Terraria.ID.NPCID.OldMan"/>, <see cref="F:Terraria.ID.NPCID.Demolitionist"/>, <see cref="F:Terraria.ID.NPCID.Bunny"/>, <see cref="F:Terraria.ID.NPCID.Clothier"/>, <see cref="F:Terraria.ID.NPCID.GoblinTinkerer"/>, <see cref="F:Terraria.ID.NPCID.Wizard"/>, <see cref="F:Terraria.ID.NPCID.Mechanic"/>, <see cref="F:Terraria.ID.NPCID.SantaClaus"/>, <see cref="F:Terraria.ID.NPCID.Penguin"/>, <see cref="F:Terraria.ID.NPCID.PenguinBlack"/>, <see cref="F:Terraria.ID.NPCID.Truffle"/>, <see cref="F:Terraria.ID.NPCID.Steampunker"/>, <see cref="F:Terraria.ID.NPCID.DyeTrader"/>, <see cref="F:Terraria.ID.NPCID.PartyGirl"/>, <see cref="F:Terraria.ID.NPCID.Cyborg"/>, <see cref="F:Terraria.ID.NPCID.Painter"/>, <see cref="F:Terraria.ID.NPCID.WitchDoctor"/>, <see cref="F:Terraria.ID.NPCID.Pirate"/>, <see cref="F:Terraria.ID.NPCID.GoldfishWalker"/>, <see cref="F:Terraria.ID.NPCID.Squirrel"/>, <see cref="F:Terraria.ID.NPCID.Mouse"/>, <see cref="F:Terraria.ID.NPCID.BunnySlimed"/>, <see cref="F:Terraria.ID.NPCID.BunnyXmas"/>, <see cref="F:Terraria.ID.NPCID.Stylist"/>, <see cref="F:Terraria.ID.NPCID.Frog"/>, <see cref="F:Terraria.ID.NPCID.Duck"/>, <see cref="F:Terraria.ID.NPCID.DuckWhite"/>, <see cref="F:Terraria.ID.NPCID.ScorpionBlack"/>, <see cref="F:Terraria.ID.NPCID.Scorpion"/>, <see cref="F:Terraria.ID.NPCID.TravellingMerchant"/>, <see cref="F:Terraria.ID.NPCID.Angler"/>, <see cref="F:Terraria.ID.NPCID.TaxCollector"/>, <see cref="F:Terraria.ID.NPCID.GoldBunny"/>, <see cref="F:Terraria.ID.NPCID.GoldFrog"/>, <see cref="F:Terraria.ID.NPCID.GoldMouse"/>, <see cref="F:Terraria.ID.NPCID.SkeletonMerchant"/>, <see cref="F:Terraria.ID.NPCID.SquirrelRed"/>, <see cref="F:Terraria.ID.NPCID.SquirrelGold"/>, <see cref="F:Terraria.ID.NPCID.PartyBunny"/>, <see cref="F:Terraria.ID.NPCID.DD2Bartender"/>, <see cref="F:Terraria.ID.NPCID.Golfer"/>, <see cref="F:Terraria.ID.NPCID.GoldGoldfishWalker"/>, <see cref="F:Terraria.ID.NPCID.Seagull"/>, <see cref="F:Terraria.ID.NPCID.Grebe"/>, <see cref="F:Terraria.ID.NPCID.Rat"/>, <see cref="F:Terraria.ID.NPCID.ExplosiveBunny"/>, <see cref="F:Terraria.ID.NPCID.Turtle"/>, <see cref="F:Terraria.ID.NPCID.TurtleJungle"/>, <see cref="F:Terraria.ID.NPCID.SeaTurtle"/>, <see cref="F:Terraria.ID.NPCID.BestiaryGirl"/>, <see cref="F:Terraria.ID.NPCID.TownCat"/>, <see cref="F:Terraria.ID.NPCID.TownDog"/>, <see cref="F:Terraria.ID.NPCID.GemSquirrelAmethyst"/>, <see cref="F:Terraria.ID.NPCID.GemSquirrelTopaz"/>, <see cref="F:Terraria.ID.NPCID.GemSquirrelSapphire"/>, <see cref="F:Terraria.ID.NPCID.GemSquirrelEmerald"/>, <see cref="F:Terraria.ID.NPCID.GemSquirrelRuby"/>, <see cref="F:Terraria.ID.NPCID.GemSquirrelDiamond"/>, <see cref="F:Terraria.ID.NPCID.GemSquirrelAmber"/>, <see cref="F:Terraria.ID.NPCID.GemBunnyAmethyst"/>, <see cref="F:Terraria.ID.NPCID.GemBunnyTopaz"/>, <see cref="F:Terraria.ID.NPCID.GemBunnySapphire"/>, <see cref="F:Terraria.ID.NPCID.GemBunnyEmerald"/>, <see cref="F:Terraria.ID.NPCID.GemBunnyRuby"/>, <see cref="F:Terraria.ID.NPCID.GemBunnyDiamond"/>, <see cref="F:Terraria.ID.NPCID.GemBunnyAmber"/>, <see cref="F:Terraria.ID.NPCID.TownBunny"/>, <see cref="F:Terraria.ID.NPCID.Princess"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Caster">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.FireImp"/>, <see cref="F:Terraria.ID.NPCID.GoblinSorcerer"/>, <see cref="F:Terraria.ID.NPCID.DarkCaster"/>, <see cref="F:Terraria.ID.NPCID.Tim"/>, <see cref="F:Terraria.ID.NPCID.RuneWizard"/>, <see cref="F:Terraria.ID.NPCID.RaggedCaster"/>, <see cref="F:Terraria.ID.NPCID.RaggedCasterOpenCoat"/>, <see cref="F:Terraria.ID.NPCID.Necromancer"/>, <see cref="F:Terraria.ID.NPCID.NecromancerArmored"/>, <see cref="F:Terraria.ID.NPCID.DiabolistRed"/>, <see cref="F:Terraria.ID.NPCID.DiabolistWhite"/>, <see cref="F:Terraria.ID.NPCID.DesertDjinn"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Spell">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.BurningSphere"/>, <see cref="F:Terraria.ID.NPCID.ChaosBall"/>, <see cref="F:Terraria.ID.NPCID.WaterSphere"/>, <see cref="F:Terraria.ID.NPCID.VileSpit"/>, <see cref="F:Terraria.ID.NPCID.SolarFlare"/>, <see cref="F:Terraria.ID.NPCID.ChaosBallTim"/>, <see cref="F:Terraria.ID.NPCID.VileSpitEaterOfWorlds"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.CursedSkull">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.CursedSkull"/>, <see cref="F:Terraria.ID.NPCID.GiantCursedSkull"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.SkeletronHead">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.SkeletronHead"/>, <see cref="F:Terraria.ID.NPCID.DungeonGuardian"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.SkeletronHand">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.SkeletronHand"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.ManEater">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.ManEater"/>, <see cref="F:Terraria.ID.NPCID.Snatcher"/>, <see cref="F:Terraria.ID.NPCID.Clinger"/>, <see cref="F:Terraria.ID.NPCID.AngryTrapper"/>, <see cref="F:Terraria.ID.NPCID.FungiBulb"/>, <see cref="F:Terraria.ID.NPCID.GiantFungiBulb"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Bat">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Harpy"/>, <see cref="F:Terraria.ID.NPCID.CaveBat"/>, <see cref="F:Terraria.ID.NPCID.JungleBat"/>, <see cref="F:Terraria.ID.NPCID.Hellbat"/>, <see cref="F:Terraria.ID.NPCID.Demon"/>, <see cref="F:Terraria.ID.NPCID.VoodooDemon"/>, <see cref="F:Terraria.ID.NPCID.GiantBat"/>, <see cref="F:Terraria.ID.NPCID.Slimer"/>, <see cref="F:Terraria.ID.NPCID.IlluminantBat"/>, <see cref="F:Terraria.ID.NPCID.IceBat"/>, <see cref="F:Terraria.ID.NPCID.Lavabat"/>, <see cref="F:Terraria.ID.NPCID.GiantFlyingFox"/>, <see cref="F:Terraria.ID.NPCID.RedDevil"/>, <see cref="F:Terraria.ID.NPCID.VampireBat"/>, <see cref="F:Terraria.ID.NPCID.FlyingSnake"/>, <see cref="F:Terraria.ID.NPCID.SporeBat"/>, <see cref="F:Terraria.ID.NPCID.QueenSlimeMinionPurple"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.KingSlime">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.KingSlime"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Piranha">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Goldfish"/>, <see cref="F:Terraria.ID.NPCID.CorruptGoldfish"/>, <see cref="F:Terraria.ID.NPCID.Piranha"/>, <see cref="F:Terraria.ID.NPCID.Shark"/>, <see cref="F:Terraria.ID.NPCID.AnglerFish"/>, <see cref="F:Terraria.ID.NPCID.Arapaima"/>, <see cref="F:Terraria.ID.NPCID.BloodFeeder"/>, <see cref="F:Terraria.ID.NPCID.CrimsonGoldfish"/>, <see cref="F:Terraria.ID.NPCID.GoldGoldfish"/>, <see cref="F:Terraria.ID.NPCID.Pupfish"/>, <see cref="F:Terraria.ID.NPCID.Dolphin"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Vulture">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Vulture"/>, <see cref="F:Terraria.ID.NPCID.Raven"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Jellyfish">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.BlueJellyfish"/>, <see cref="F:Terraria.ID.NPCID.PinkJellyfish"/>, <see cref="F:Terraria.ID.NPCID.GreenJellyfish"/>, <see cref="F:Terraria.ID.NPCID.Squid"/>, <see cref="F:Terraria.ID.NPCID.BloodJelly"/>, <see cref="F:Terraria.ID.NPCID.FungoFish"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Antlion">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Antlion"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.SpikeBall">
            <summary>
            Behavior: For the spike balls in the dungoen, not the projectile<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.SpikeBall"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.BlazingWheel">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.BlazingWheel"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.HoveringFighter">
            <summary>
            Behavior: Includes enemies such as Wraiths or Ghosts<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.Pixie"/>, <see cref="F:Terraria.ID.NPCID.Wraith"/>, <see cref="F:Terraria.ID.NPCID.Gastropod"/>, <see cref="F:Terraria.ID.NPCID.IceElemental"/>, <see cref="F:Terraria.ID.NPCID.FloatyGross"/>, <see cref="F:Terraria.ID.NPCID.Reaper"/>, <see cref="F:Terraria.ID.NPCID.IchorSticker"/>, <see cref="F:Terraria.ID.NPCID.Ghost"/>, <see cref="F:Terraria.ID.NPCID.Poltergeist"/>, <see cref="F:Terraria.ID.NPCID.Drippler"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.EnchantedSword">
            <summary>
            Behavior: Includes Shadow Hammer and Crimson Axe<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.CursedHammer"/>, <see cref="F:Terraria.ID.NPCID.EnchantedSword"/>, <see cref="F:Terraria.ID.NPCID.CrimsonAxe"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Bird">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Bird"/>, <see cref="F:Terraria.ID.NPCID.BirdBlue"/>, <see cref="F:Terraria.ID.NPCID.BirdRed"/>, <see cref="F:Terraria.ID.NPCID.GoldBird"/>, <see cref="F:Terraria.ID.NPCID.Owl"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Mimic">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Mimic"/>, <see cref="F:Terraria.ID.NPCID.PresentMimic"/>, <see cref="F:Terraria.ID.NPCID.IceMimic"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Unicorn">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Unicorn"/>, <see cref="F:Terraria.ID.NPCID.Wolf"/>, <see cref="F:Terraria.ID.NPCID.HeadlessHorseman"/>, <see cref="F:Terraria.ID.NPCID.Hellhound"/>, <see cref="F:Terraria.ID.NPCID.StardustSpiderSmall"/>, <see cref="F:Terraria.ID.NPCID.NebulaBeast"/>, <see cref="F:Terraria.ID.NPCID.Tumbleweed"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.WallOfFleshMouth">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.WallofFlesh"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.WallOfFleshEye">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.WallofFleshEye"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.TheHungry">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.TheHungry"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Retinazer">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Retinazer"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Spaazmatism">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Spazmatism"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.SkeletronPrimeHead">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.SkeletronPrime"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.PrimeSaw">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.PrimeSaw"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.PrimeVice">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.PrimeVice"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.PrimeCannon">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.PrimeCannon"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.PrimeLaser">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.PrimeLaser"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.TheDestroyer">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.TheDestroyer"/>, <see cref="F:Terraria.ID.NPCID.TheDestroyerBody"/>, <see cref="F:Terraria.ID.NPCID.TheDestroyerTail"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Snowman">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.SnowmanGangsta"/>, <see cref="F:Terraria.ID.NPCID.MisterStabby"/>, <see cref="F:Terraria.ID.NPCID.SnowBalla"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.GiantTortoise">
            <summary>
            Behavior: Also includes Srollers and Giant Shellies<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.GiantTortoise"/>, <see cref="F:Terraria.ID.NPCID.IceTortoise"/>, <see cref="F:Terraria.ID.NPCID.SolarSroller"/>, <see cref="F:Terraria.ID.NPCID.GiantShelly"/>, <see cref="F:Terraria.ID.NPCID.GiantShelly2"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Spider">
            <summary>
            Behavior: Used for the wall climbing varieants of spiders, the ground variant is<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.WallCreeperWall"/>, <see cref="F:Terraria.ID.NPCID.JungleCreeperWall"/>, <see cref="F:Terraria.ID.NPCID.BlackRecluseWall"/>, <see cref="F:Terraria.ID.NPCID.BloodCrawlerWall"/>, <see cref="F:Terraria.ID.NPCID.DesertScorpionWall"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Herpling">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Herpling"/>, <see cref="F:Terraria.ID.NPCID.Derpling"/>, <see cref="F:Terraria.ID.NPCID.ChatteringTeethBomb"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.LostGirl">
            <summary>
            Behavior: Only used for the Lost Girl, nymphs use<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.LostGirl"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.QueenBee">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.QueenBee"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.FlyingFish">
            <summary>
            Behavior: Also used for Antlion Swarmers<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.FlyingFish"/>, <see cref="F:Terraria.ID.NPCID.GiantFlyingAntlion"/>, <see cref="F:Terraria.ID.NPCID.FlyingAntlion"/>, <see cref="F:Terraria.ID.NPCID.EyeballFlyingFish"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.GolemBody">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Golem"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.GolemHead">
            <summary>
            Behavior: Only used for the unmoving golem head, the moving one is<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.GolemHead"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.GolemFist">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.GolemFistLeft"/>, <see cref="F:Terraria.ID.NPCID.GolemFistRight"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.FreeGolemHead">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.GolemHeadFree"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.AngryNimbus">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.AngryNimbus"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Spore">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.FungiSpore"/>, <see cref="F:Terraria.ID.NPCID.Spore"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Plantera">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Plantera"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.PlanteraHook">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.PlanterasHook"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.PlanteraTentacle">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.PlanterasTentacle"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.BrainOfCthulhu">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.BrainofCthulhu"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Creeper">
            <summary>
            Behavior: For the Brain of Cthulhu's minions<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.Creeper"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.DungeonSpirit">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.DungeonSpirit"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.MourningWood">
            <summary>
            Behavior: Includes Everscream<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.MourningWood"/>, <see cref="F:Terraria.ID.NPCID.Everscream"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Pumpking">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Pumpking"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.PumpkingScythe">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.PumpkingBlade"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.IceQueen">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.IceQueen"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.SantaNK1">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.SantaNK1"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.ElfCopter">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.ElfCopter"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Flocko">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Flocko"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Firefly">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Firefly"/>, <see cref="F:Terraria.ID.NPCID.LightningBug"/>, <see cref="F:Terraria.ID.NPCID.Lavafly"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Butterfly">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Butterfly"/>, <see cref="F:Terraria.ID.NPCID.GoldButterfly"/>, <see cref="F:Terraria.ID.NPCID.HellButterfly"/>, <see cref="F:Terraria.ID.NPCID.EmpressButterfly"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.CritterWorm">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Worm"/>, <see cref="F:Terraria.ID.NPCID.TruffleWorm"/>, <see cref="F:Terraria.ID.NPCID.GoldWorm"/>, <see cref="F:Terraria.ID.NPCID.EnchantedNightcrawler"/>, <see cref="F:Terraria.ID.NPCID.Grubby"/>, <see cref="F:Terraria.ID.NPCID.Sluggy"/>, <see cref="F:Terraria.ID.NPCID.Buggy"/>, <see cref="F:Terraria.ID.NPCID.Maggot"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Snail">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Snail"/>, <see cref="F:Terraria.ID.NPCID.GlowingSnail"/>, <see cref="F:Terraria.ID.NPCID.MagmaSnail"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Duck">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Duck2"/>, <see cref="F:Terraria.ID.NPCID.DuckWhite2"/>, <see cref="F:Terraria.ID.NPCID.Seagull2"/>, <see cref="F:Terraria.ID.NPCID.Grebe2"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.DukeFishron">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.DukeFishron"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.DukeFishronBubble">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.DetonatingBubble"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Sharkron">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Sharkron"/>, <see cref="F:Terraria.ID.NPCID.Sharkron2"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.BubbleShield">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.ForceBubble"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.TeslaTurret">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.MartianTurret"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Corite">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.MartianDrone"/>, <see cref="F:Terraria.ID.NPCID.SolarCorite"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Rider">
            <summary>
            Behavior: Includes Drakomire Rider, Dutchman Cannon, Martian Saucer,Martian Saucer Cannon, Martian Saucer Turret, and Scutlix Gunner<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.ScutlixRider"/>, <see cref="F:Terraria.ID.NPCID.MartianSaucer"/>, <see cref="F:Terraria.ID.NPCID.MartianSaucerTurret"/>, <see cref="F:Terraria.ID.NPCID.MartianSaucerCannon"/>, <see cref="F:Terraria.ID.NPCID.SolarDrakomireRider"/>, <see cref="F:Terraria.ID.NPCID.PirateShipCannon"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.MartianSaucer">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.MartianSaucerCore"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.MoonLordCore">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.MoonLordCore"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.MoonLordHand">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.MoonLordHand"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.MoonLordHead">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.MoonLordHead"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.MartianProbe">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.MartianProbe"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.TrueEyeOfCthulhu">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.MoonLordFreeEye"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.MoonLeachClot">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.MoonLordLeechBlob"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.LunaticDevote">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.CultistTablet"/>, <see cref="F:Terraria.ID.NPCID.CultistDevote"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.LunaticCultist">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.CultistBoss"/>, <see cref="F:Terraria.ID.NPCID.CultistBossClone"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.StarCell">
            <summary>
            Behavior: Includes Brain Sucklers and Deadly Spheres<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.StardustCellBig"/>, <see cref="F:Terraria.ID.NPCID.NebulaHeadcrab"/>, <see cref="F:Terraria.ID.NPCID.DeadlySphere"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.AncientVision">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.ShadowFlameApparition"/>, <see cref="F:Terraria.ID.NPCID.AncientCultistSquidhead"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.BiomeMimic">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.BigMimicCorruption"/>, <see cref="F:Terraria.ID.NPCID.BigMimicCrimson"/>, <see cref="F:Terraria.ID.NPCID.BigMimicHallow"/>, <see cref="F:Terraria.ID.NPCID.BigMimicJungle"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Mothron">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Mothron"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.MothronEgg">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.MothronEgg"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.BabyMothron">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.MothronSpawn"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.GraniteElemental">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.GraniteFlyer"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.TargetDummy">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.TargetDummy"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.FlyingDutchman">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.PirateShip"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.CelestialPillar">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.LunarTowerVortex"/>, <see cref="F:Terraria.ID.NPCID.LunarTowerStardust"/>, <see cref="F:Terraria.ID.NPCID.LunarTowerNebula"/>, <see cref="F:Terraria.ID.NPCID.LunarTowerSolar"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.SmallStarCell">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.StardustCellSmall"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.FlowInvader">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.StardustJellyfishBig"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.NebulaFloater">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.NebulaBrain"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Unused0">
            <summary>
            Behavior: Stays in place and shoots<br/>
            Used by: None
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.SolarFragment">
            <summary>
            Behavior: The fireball-like "projectiles" shot by the solar pillar<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.SolarGoop"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.AncientLight">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.AncientLight"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.AncientDoom">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.AncientDoom"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.SandElemental">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.SandElemental"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.SandShark">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.SandShark"/>, <see cref="F:Terraria.ID.NPCID.SandsharkCorrupt"/>, <see cref="F:Terraria.ID.NPCID.SandsharkCrimson"/>, <see cref="F:Terraria.ID.NPCID.SandsharkHallow"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Unknown1">
            <summary>
            Behavior: Instantly despawns<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.DD2AttackerTest"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.DD2EterniaCrystal">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.DD2EterniaCrystal"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.DD2MysteriousPortal">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.DD2LanePortal"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.DD2Fighter">
            <summary>
            Behavior: Used for things such as Etherian Goblins<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.DD2GoblinT1"/>, <see cref="F:Terraria.ID.NPCID.DD2GoblinT2"/>, <see cref="F:Terraria.ID.NPCID.DD2GoblinT3"/>, <see cref="F:Terraria.ID.NPCID.DD2GoblinBomberT1"/>, <see cref="F:Terraria.ID.NPCID.DD2GoblinBomberT2"/>, <see cref="F:Terraria.ID.NPCID.DD2GoblinBomberT3"/>, <see cref="F:Terraria.ID.NPCID.DD2JavelinstT1"/>, <see cref="F:Terraria.ID.NPCID.DD2JavelinstT2"/>, <see cref="F:Terraria.ID.NPCID.DD2JavelinstT3"/>, <see cref="F:Terraria.ID.NPCID.DD2SkeletonT1"/>, <see cref="F:Terraria.ID.NPCID.DD2SkeletonT3"/>, <see cref="F:Terraria.ID.NPCID.DD2WitherBeastT2"/>, <see cref="F:Terraria.ID.NPCID.DD2WitherBeastT3"/>, <see cref="F:Terraria.ID.NPCID.DD2DrakinT2"/>, <see cref="F:Terraria.ID.NPCID.DD2DrakinT3"/>, <see cref="F:Terraria.ID.NPCID.DD2KoboldWalkerT2"/>, <see cref="F:Terraria.ID.NPCID.DD2KoboldWalkerT3"/>, <see cref="F:Terraria.ID.NPCID.DD2OgreT2"/>, <see cref="F:Terraria.ID.NPCID.DD2OgreT3"/>, <see cref="F:Terraria.ID.NPCID.GoblinShark"/>/// </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.DD2Flying">
            <summary>
            Behavior: Used for things such as Etherian Wyverns<br/>
            Used by: <see cref="F:Terraria.ID.NPCID.DD2WyvernT1"/>, <see cref="F:Terraria.ID.NPCID.DD2WyvernT2"/>, <see cref="F:Terraria.ID.NPCID.DD2WyvernT3"/>, <see cref="F:Terraria.ID.NPCID.DD2KoboldFlyerT2"/>, <see cref="F:Terraria.ID.NPCID.DD2KoboldFlyerT3"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.DD2DarkMage">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.DD2DarkMageT1"/>, <see cref="F:Terraria.ID.NPCID.DD2DarkMageT3"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.DD2Betsy">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.DD2Betsy"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.DD2LightningBug">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.DD2LightningBugT3"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Fairy">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.FairyCritterPink"/>, <see cref="F:Terraria.ID.NPCID.FairyCritterGreen"/>, <see cref="F:Terraria.ID.NPCID.FairyCritterBlue"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Balloon">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.WindyBalloon"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Dragonfly">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.BlackDragonfly"/>, <see cref="F:Terraria.ID.NPCID.BlueDragonfly"/>, <see cref="F:Terraria.ID.NPCID.GreenDragonfly"/>, <see cref="F:Terraria.ID.NPCID.OrangeDragonfly"/>, <see cref="F:Terraria.ID.NPCID.RedDragonfly"/>, <see cref="F:Terraria.ID.NPCID.YellowDragonfly"/>, <see cref="F:Terraria.ID.NPCID.GoldDragonfly"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Ladybug">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.LadyBug"/>, <see cref="F:Terraria.ID.NPCID.GoldLadyBug"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.WaterStrider">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.WaterStrider"/>, <see cref="F:Terraria.ID.NPCID.GoldWaterStrider"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Dreadnautilus">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.BloodNautilus"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.Seahorse">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Seahorse"/>, <see cref="F:Terraria.ID.NPCID.GoldSeahorse"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.AngryDandelion">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.Dandelion"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.EmpressOfLight">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.HallowBoss"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.QueenSlime">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.QueenSlimeBoss"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCAIStyleID.PiratesCurse">
            <summary>
            Used by: <see cref="F:Terraria.ID.NPCID.PirateGhost"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCHeadID.Sets.CannotBeDrawnInHousingUI">
            <summary>
            If <see langword="true"/> for a given NPC head ID, then that NPC head will never be drawn in the housing UI.
            </summary>
            <remarks>
            <see cref="T:Terraria.ModLoader.ModNPC"/>s with <see cref="P:Terraria.ModLoader.ModNPC.TownNPCStayingHomeless"/> set to <see langword="true"/> will also not draw their heads in the housing UI.
            <br/> You can get an NPC's head ID using <see cref="M:Terraria.GameContent.TownNPCProfiles.GetHeadIndexSafe(Terraria.NPC)"/> and <see cref="F:Terraria.ID.ContentSamples.NpcsByNetId"/>.
            </remarks>
        </member>
        <member name="T:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers">
            <summary>
            Stores the draw parameters for an NPC type (<see cref="F:Terraria.NPC.type"/>) in the Bestiary.
            <br/> <strong>Do not use the parameterless constructor or <c>default</c> to create this struct.</strong> Use <see cref="M:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.#ctor(System.Int32)"/> instead with any parameter -- it sets proper default values.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.Position">
            <summary>
            The offset of this <see cref="T:Terraria.NPC"/>'s Bestiary image in pixels.
            <br/> Defaults to <see cref="P:Microsoft.Xna.Framework.Vector2.Zero"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.PortraitPositionXOverride">
            <summary>
            A custom value for <see cref="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.Position"/>.X to use when drawing this <see cref="T:Terraria.NPC"/>'s Bestiary portrait. If <see langword="null"/>, then do not override the value.
            <br/> Defaults to <see langword="null"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.PortraitPositionYOverride">
            <summary>
            A custom value for <see cref="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.Position"/>.Y to use when drawing this <see cref="T:Terraria.NPC"/>'s Bestiary portrait. If <see langword="null"/>, then do not override the value.
            <br/> Defaults to <see langword="null"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.Rotation">
            <summary>
            The clockwise rotation of this <see cref="T:Terraria.NPC"/>'s Bestiary image in radians.
            <br/> Defaults to <c>0f</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.Scale">
            <summary>
            The visual scale of this <see cref="T:Terraria.NPC"/>'s Bestiary image.
            <br/> Defaults to <c>1f</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.PortraitScale">
            <summary>
            A custom value for <see cref="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.Scale"/> to use when drawing this <see cref="T:Terraria.NPC"/>'s Bestiary portrait. If <see langword="null"/>, then do not override the value.
            <br/> Defaults to <see langword="null"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.Hide">
            <summary>
            If <see langword="true"/>, this <see cref="T:Terraria.NPC"/> will never show up in the Bestiary.
            <br/> Useful for multi-segment <see cref="T:Terraria.NPC"/>s.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.IsWet">
            <summary>
            The specific <see cref="F:Terraria.Entity.wet"/> to use when drawing this <see cref="T:Terraria.NPC"/>'s Bestiary image.
            <br/> Useful for <see cref="T:Terraria.NPC"/>s that draw differently when wet.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.Frame">
            <summary>
            The specific vertical frame to use when drawing this <see cref="T:Terraria.NPC"/> in the Bestiary.
            <br/> If <see langword="null"/>, then this <see cref="T:Terraria.NPC"/> will play a default walking animation.
            <br/> Defaults to <see langword="null"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.Direction">
            <summary>
            The specific <see cref="F:Terraria.Entity.direction"/> to use when drawing this <see cref="T:Terraria.NPC"/>'s Bestiary image.
            <br/> If <see langword="null"/>, then <c>-1</c> is used.
            <br/> Defaults to <see langword="null"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.SpriteDirection">
            <summary>
            The specific <see cref="F:Terraria.NPC.spriteDirection"/> to use when drawing this <see cref="T:Terraria.NPC"/>'s Bestiary image.
            <br/> If <see langword="null"/>, then the value of <see cref="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.Direction"/> is used.
            <br/> Defaults to <see langword="null"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.Velocity">
            <summary>
            The magnitude of <see cref="F:Terraria.Entity.velocity"/>.X to use when drawing this <see cref="T:Terraria.NPC"/>'s Bestiary image, either when in Portrait mode or when hovered.
            <br/> Defaults to <c>0f</c>.
            </summary>
            <remarks>This value is only used if <see cref="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.Frame"/> is <see langword="null"/>.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.CustomTexturePath">
            <summary>
            The path to the custom texture to use when drawing this <see cref="T:Terraria.NPC"/>'s Bestiary image.
            <br/> If <see langword="null"/>, then this NPC's default texture is used.
            <br/> Defaults to <see langword="null"/>.
            </summary>
        </member>
        <member name="M:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers.#ctor(System.Int32)">
            <summary>
            Creates a new <see cref="T:Terraria.ID.NPCID.Sets.NPCBestiaryDrawModifiers"/> with default values.
            </summary>
            <param name="seriouslyWhyCantStructsHaveParameterlessConstructors">Unused.</param>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.SpecialSpawningRules">
            <summary>
            Determines the special spawning rules for an NPC to use when respawning using the coin loss system (<see cref="T:Terraria.GameContent.CoinLossRevengeSystem"/>).
            <br/> If <c>0</c> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then <c><see cref="F:Terraria.NPC.ai"/>[0]</c> and <c><see cref="F:Terraria.NPC.ai"/>[1]</c> are set to this <see cref="T:Terraria.NPC"/>'s position in tile coordinates.
            </summary>
            <remarks>All vanilla entries in this set use <c>0</c>. All vanilla entries in this set are tethered to tiles (<see cref="F:Terraria.ID.NPCID.ManEater"/>, <see cref="F:Terraria.ID.NPCID.Snatcher"/>, etc.).</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NPCBestiaryDrawOffset">
            <summary>
            The settings to use for a given NPC type's (<see cref="F:Terraria.NPC.type"/>) Bestiary drawing.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.DebuffImmunitySets">
            <summary>
            The default debuff immunities for a given NPC type (<see cref="F:Terraria.NPC.type"/>).
            </summary>
            <remarks><see cref="F:Terraria.NPC.buffImmune"/> can still be manually changed to grant temporary immunity.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NormalGoldCritterBestiaryPriority">
            <summary>
            The order of critter NPC types (<see cref="F:Terraria.NPC.type"/>) in the Bestiary.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.BossBestiaryPriority">
            <summary>
            The order of boss NPC types (<see cref="F:Terraria.NPC.type"/>) in the Bestiary.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.TownNPCBestiaryPriority">
            <summary>
            The order of town NPC NPC types (<see cref="F:Terraria.NPC.type"/>) in the Bestiary.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.DontDoHardmodeScaling">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC will not have its stats increased in <see cref="P:Terraria.Main.expertMode"/> or higher difficulties.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.ReflectStarShotsInForTheWorthy">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC will reflect <see cref="F:Terraria.ID.ProjectileID.StarCannonStar"/> and <see cref="F:Terraria.ID.ProjectileID.SuperStar"/> on the "For the Worthy" secret seed.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.IsTownPet">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC is categorized as a town pet.
            <br/> Town pets must have <c><see cref="F:Terraria.NPC.aiStyle"/> == <see cref="F:Terraria.ID.NPCAIStyleID.Passive"/></c> to function properly.
            <br/> Town pets cannot party, can be pet, can be moved into valid rooms even if they contain a stinkbug, and "leave" on death.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.IsTownSlime">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC is categorized as a town slime.
            <br/> Town slimes must have <c><see cref="F:Terraria.NPC.aiStyle"/> == <see cref="F:Terraria.ID.NPCAIStyleID.Passive"/></c> to function properly. Additionally, they should also be in the <see cref="F:Terraria.ID.NPCID.Sets.IsTownPet"/> set.
            <br/> Town slimes cannot sit on chairs, will try to play their idle animations more often, and have horizontally flipped sprites compared to normal town NPCs.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.CanConvertIntoCopperSlimeTownNPC">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC can pick up <see cref="F:Terraria.ID.ItemID.CopperShortsword"/> or <see cref="F:Terraria.ID.ItemID.CopperHelmet"/> to become <see cref="F:Terraria.ID.NPCID.TownSlimeCopper"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.GoldCrittersCollection">
            <summary>
            A list of all NPC types (<see cref="F:Terraria.NPC.type"/>) categorized as gold critters.
            <br/> If a gold critter shows up on the Lifeform Analyzer, its name will be gold (<see cref="M:Terraria.Main.DrawInfoAccs_AdjustInfoTextColorsForNPC(Terraria.NPC,Microsoft.Xna.Framework.Color@,Microsoft.Xna.Framework.Color@)"/>).
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.ZappingJellyfish">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC, if currently <see cref="F:Terraria.NPC.dontTakeDamage"/>, will damage the player when hit with a melee attack, a whip, certain <see cref="T:Terraria.ID.ProjAIStyleID"/>s (<see cref="F:Terraria.ID.ProjAIStyleID.Spear"/>, <see cref="F:Terraria.ID.ProjAIStyleID.ShortSword"/>, <see cref="F:Terraria.ID.ProjAIStyleID.SleepyOctopod"/>, <see cref="F:Terraria.ID.ProjAIStyleID.HeldProjectile"/>), or by any projectile type (<see cref="F:Terraria.Projectile.type"/>) in the <see cref="F:Terraria.ID.ProjectileID.Sets.AllowsContactDamageFromJellyfish"/> or <see cref="F:Terraria.ID.ProjectileID.Sets.IsAWhip"/> sets.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.CantTakeLunchMoney">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC cannot pick up dropped coins in Expert Mode.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.RespawnEnemyID">
            <summary>
            Associates an NPC type (<see cref="F:Terraria.NPC.type"/>) with the NPC type it respawns as from the coin loss system (<see cref="T:Terraria.GameContent.CoinLossRevengeSystem"/>).
            <br/> If an NPC type is not a key in this dictionary, then that NPC respawns as itself.
            <br/> If the value for an NPC type is <c>0</c>, then that NPC won't be cached (<see cref="M:Terraria.GameContent.CoinLossRevengeSystem.CacheEnemy(Terraria.NPC)"/>).
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.TrailingMode">
            <summary>
            If <c>!= -1</c> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC will store its past positions (and potentially more) for use in a trail.
            <br/> A value of <c>0</c> will store the NPC's position in <see cref="F:Terraria.NPC.oldPos"/> every three frames. <strong>Vanilla automatically uses <see cref="F:Terraria.NPC.localAI"/>[3] to count frames for this, so make sure your code doesn't interfere with that.</strong>
            <br/> A value of <c>1</c>, <c>5</c>, or <c>6</c> will store the NPC's position in <see cref="F:Terraria.NPC.oldPos"/> every frame.
            <br/> A value of <c>2</c> will store the NPC's position and rotation in <see cref="F:Terraria.NPC.oldPos"/> and <see cref="F:Terraria.NPC.oldRot"/> respectively every frame <strong>if</strong> <c><see cref="F:Terraria.NPC.ai"/>[0] == 4 or 5 or 6</c>.
            <br/> A value of <c>3</c> or <c>7</c> will store the NPC's position and rotation in <see cref="F:Terraria.NPC.oldPos"/> and <see cref="F:Terraria.NPC.oldRot"/> respectively every frame.
            <br/> A value of <c>4</c> will store the NPC's position in <see cref="F:Terraria.NPC.oldPos"/> every frame, as well as creating light (0x4D0033) at the NPC's position.
            <br/> Other values will do nothing.
            <br/> <strong>Vanilla will not automatically draw trails for you.</strong>
            <br/> Defaults to <c>-1</c>.
            </summary>
            <remarks>The length of an NPC's trail is determined by <see cref="F:Terraria.ID.NPCID.Sets.TrailCacheLength"/>.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.IsDragonfly">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC is categorized as a dragonfly.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>Vanilla only uses this set to ensure the <see cref="F:Terraria.ID.ItemID.DragonflyStatue"/> doesn't spawn too many dragonflies without checking each type individually. It's still recommended to add your NPC to this set if it applies.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.BelongsToInvasionOldOnesArmy">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC belongs to the Old One's Army event.
            <br/> If any NPC in this set is alive, the OOA music will play. Additionally, all NPCs in this set will be erased when the OOA ends.
            <br/> NPCs in this set will target the <see cref="F:Terraria.ID.NPCID.DD2EterniaCrystal"/> if it is alive (using <see cref="M:Terraria.Utilities.NPCUtils.TargetClosestOldOnesInvasion(Terraria.NPC,System.Boolean,System.Nullable{Microsoft.Xna.Framework.Vector2})"/>).
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.TeleportationImmune">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC cannot be teleported using <see cref="F:Terraria.ID.TileID.Teleporter"/>s.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            Bosses and tile-phasing (<see cref="F:Terraria.NPC.noTileCollide"/>) NPCs can't be teleported at all, regardless of this set.
            </remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.UsesNewTargetting">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC can target other NPCs.
            <br/> This set does <strong>not</strong> automatically handle NPC targeting. You should use <see cref="M:Terraria.Utilities.NPCUtils.SearchForTarget(Terraria.NPC,Terraria.Utilities.NPCUtils.TargetSearchFlag,Terraria.Utilities.NPCUtils.SearchFilter{Terraria.Player},Terraria.Utilities.NPCUtils.SearchFilter{Terraria.NPC})"/> or any of its overloads to write your own targeting function.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>
            You can check if an NPC is in this set using <see cref="P:Terraria.NPC.SupportsNPCTargets"/>.
            <br/> You can use <see cref="M:Terraria.NPC.GetTargetData(System.Boolean)"/> to get info about a target, regardless of if that target is a <see cref="T:Terraria.Player"/> or <see cref="T:Terraria.NPC"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.TakesDamageFromHostilesWithoutBeingFriendly">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC can take damage from hostile NPCs without being friendly.
            <br/> Used in vanilla for critters and trapped town slimes.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.AllNPCs">
            <summary>
            An array of length <see cref="P:Terraria.ModLoader.NPCLoader.NPCCount"/> with only <see langword="true"/> entries.
            <br/> Used for methods that take sets as parameters, like <see cref="M:Terraria.NPC.GetHurtByOtherNPCs(System.Boolean[])"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.HurtingBees">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC is a bee that will hurt other non-bee NPCs on contact.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.FighterUsesDD2PortalAppearEffect">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC will have a special spawning animation when using <see cref="F:Terraria.ID.NPCAIStyleID.DD2Fighter"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.StatueSpawnedDropRarity">
            <summary>
            If <c>!= -1f</c> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then if that NPC was spawned from a statue (<see cref="F:Terraria.NPC.SpawnedFromStatue"/>), it will have a (retrieved value)% chance to actually drop loot when killed.
            <br/> Defaults to <c>-1f</c>.
            </summary>
            <remarks>NPCs in this set will never drop loot unless interacted with by a player (<see cref="M:Terraria.NPC.AnyInteractions"/>).</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NoEarlymodeLootWhenSpawnedFromStatue">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then if that NPC was spawned from a statue (<see cref="F:Terraria.NPC.SpawnedFromStatue"/>), it will not drop loot in pre-hardmode.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NeedsExpertScaling">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC will receive stat scaling in Expert Mode, even if its normal stats would prevent that.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>NPCs with less than 5 health are most prone to needing this set. The full scaling conditions can be found at the start of <see cref="M:Terraria.NPC.ScaleStats(System.Nullable{System.Int32},Terraria.DataStructures.GameModeData,System.Nullable{System.Single})"/>.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.ProjectileNPC">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC is treated specially for difficulty scaling.
            <br/> Projectile NPCs never scale their max health, defense, or value.
            <br/> Additionally, kills are not counted for NPCs in this set.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.TrailCacheLength">
            <summary>
            The length of this NPC type's (<see cref="F:Terraria.NPC.type"/>) <see cref="F:Terraria.NPC.oldPos"/> and <see cref="F:Terraria.NPC.oldRot"/> arrays.
            <br/> <strong>This set does nothing by itself.</strong> You will need to set <see cref="F:Terraria.ID.NPCID.Sets.TrailingMode"/> in order to actually store values.
            <br/> Defaults to <c>10</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.UsesMultiplayerProximitySyncing">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC will sync more the closer it is to a player.
            <br/> Defaults to <see langword="true"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NoMultiplayerSmoothingByType">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC will not smooth its visual position in multiplayer.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>To prevent smoothing by <see cref="T:Terraria.ID.NPCAIStyleID"/> (<see cref="F:Terraria.NPC.aiStyle"/>), use <see cref="F:Terraria.ID.NPCID.Sets.NoMultiplayerSmoothingByAI"/>.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NoMultiplayerSmoothingByAI">
            <summary>
            If <see langword="true"/> for a given <strong><see cref="T:Terraria.ID.NPCAIStyleID"/></strong> (<see cref="F:Terraria.NPC.aiStyle"/>), then that AI style will not smooth its visual position in multiplayer.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>To prevent smoothing by NPC type (<see cref="F:Terraria.NPC.type"/>), use <see cref="F:Terraria.ID.NPCID.Sets.NoMultiplayerSmoothingByType"/>.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.MPAllowedEnemies">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC can be summoned in multiplayer using <see cref="F:Terraria.ID.MessageID.SpawnBossUseLicenseStartEvent"/>.
            <br/> <strong>If you don't set this, your boss most likely won't work in multiplayer.</strong>
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.TownCritter">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC is a critter that can spawn in towns.
            <br/> Town critters use <see cref="F:Terraria.ID.NPCAIStyleID.Passive"/>.
            <br/> Defauts to <see langword="false"/>.
            </summary>
            <remarks>Make sure to also set <see cref="F:Terraria.ID.NPCID.Sets.CountsAsCritter"/> for NPCs in this set.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.CountsAsCritter">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC is counted as a critter.
            <br/> Critters cannot be damage by players with <see cref="F:Terraria.Player.dontHurtCritters"/> set to <see langword="true"/>.
            <br/> Also, critters can't be used to summon Horseman's Blade projectiles, nor can they be chased by said projectiles.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.HasNoPartyText">
            <summary>
            <strong>Only applies to vanilla NPCs.</strong> Also only applies to town NPCs.
            <br/> If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC doesn't have any special dialogue for parties.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.HatOffsetY">
            <summary>
            The vertical offset, in pixels, that an NPC's party hat will draw with.
            <br/> Defaults to <c>0</c>.
            </summary>
            <remarks><see cref="F:Terraria.ID.NPCID.Sets.TownNPCsFramingGroups"/> applies a specific offset per frame, this applies the same offset to all frames.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.FaceEmote">
            <summary>
            Associates a town NPC's NPC type (<see cref="F:Terraria.NPC.type"/>) with its corresponding <see cref="T:Terraria.GameContent.UI.EmoteID"/>.
            <br/> Town NPCs can emote using emotes in this set if the corresponding NPC is alive.
            <br/> If <c>0</c> for a given NPC type, then that NPC has no associated emote.
            <br/> Defaults to <c>0</c>.
            </summary>
            <remarks>This only applies to town NPCs -- there isn't a set that associates, say, the Eye of Cthulhu to an associated emote.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.ExtraFramesCount">
            <summary>
            The number of extra frames this town NPC has. These frames are used for special actions, such as sitting down and talking to other NPCs.
            <br/> Defaults to <c>0</c>.
            </summary>
            <remarks>If you want to copy a vanilla NPC's framing, use <see cref="P:Terraria.ModLoader.ModNPC.AnimationType"/>.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.AttackFrameCount">
            <summary>
            The number of this town NPC's extra frames that are dedicated to attacking.
            <br/> Defaults to <c>0</c>.
            </summary>
            <remarks>If you want to copy a vanilla NPC's framing, use <see cref="P:Terraria.ModLoader.ModNPC.AnimationType"/>.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.DangerDetectRange">
            <summary>
            The distance, in pixels, that this town NPC will check for enemies to attack. Any enemies beyond this distance are not considered.
            <br/> Also serves as the attack range for NPCs with an <see cref="F:Terraria.ID.NPCID.Sets.AttackType"/> of <c>0</c> or <c>2</c>.
            <br/> Defaults to <c>-1</c>, which uses a default of <c>200</c> pixels (12.5 tiles).
            </summary>
            <remarks><see cref="F:Terraria.ID.NPCID.Sets.PrettySafe"/> determines an NPC's attack range.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.ShimmerImmunity">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC is immune to the effects of the shimmer.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>To make an NPC ignore the player's shimmer invulnerability, use <see cref="F:Terraria.ID.NPCID.Sets.CanHitPastShimmer"/> instead.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.ShimmerTransformToItem">
            <summary>
            If not <c>-1</c> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC will transform into the retrieved item type (<see cref="F:Terraria.Item.type"/>) when touching shimmer.
            <br/> Defaults to <c>-1</c>.
            </summary>
            <remarks>The created item will always have a stack of 1.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.ShimmerTownTransform">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC is a town NPC with an alternate shimmered texture.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.ShimmerTransformToNPC">
            <summary>
            Associates an NPC type (<see cref="F:Terraria.NPC.type"/>) with the NPC type it will turn into when submerged in shimmer.
            <br/> A value of<c>-1</c> means the given NPC won't transform.
            <br/> Defaults to <c>-1</c>.
            <br/> Also applies to transforming critter items (<c><see cref="F:Terraria.Item.makeNPC"/> &gt; 0</c>) into NPC.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.AttackTime">
            <summary>
            The duration of this town NPC's attack animation in ticks.
            <br/> Defaults to <c>-1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.AttackAverageChance">
            <summary>
            The chance that this town NPC attacks if it detects danger.
            <br/> The actual chance is <c>1 / (retrieved value * 2)</c>.
            <br/> Defaults to <c>1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.AttackType">
            <summary>
            Determines how a town NPC with the given NPC type (<see cref="F:Terraria.NPC.type"/>) attacks.
            <br/> For <c>-1</c>, this NPC won't attack.
            <br/> For <c>0</c>, this NPC will throw a projectile.
            <br/> For <c>1</c>, this NPC will shoot a weapon.
            <br/> For <c>2</c>, this NPC will use magic.
            <br/> For <c>3</c>, this NPC will swing a weapon.
            <br/> Defaults to <c>-1</c>.
            </summary>
            <remarks>
            You can modify most aspects of a town NPC's attack, including the item used and projectile shot, using any of the "TownNPCAttack" or "TownAttack" hooks in <see cref="T:Terraria.ModLoader.ModNPC"/> or <see cref="T:Terraria.ModLoader.GlobalNPC"/>.
            <br/> You can change the color of a magic (<c>2</c>) NPC's aura using <see cref="F:Terraria.ID.NPCID.Sets.MagicAuraColor"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.PrettySafe">
            <summary>
            The maximum distance in pixels that an enemy can be from this town NPC before they try to attack.
            <br/> Defaults to <c>-1</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.MagicAuraColor">
            <summary>
            The <see cref="T:Microsoft.Xna.Framework.Color"/> of the magical aura used by town NPCs with magic (<c>3</c>) attacks.
            <br/> Defaults to <see cref="P:Microsoft.Xna.Framework.Color.White"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.DemonEyes">
            <summary>
            <strong>Unused in vanilla.</strong>
            <br/> If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC is a type of demon eye.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.Zombies">
            <summary>
            <strong>Unused in vanilla.</strong>
            <br/> If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC is a type of zombie.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.Skeletons">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC is a type of skeleton.
            <br/> Skeletons cannot hurt the <see cref="F:Terraria.ID.NPCID.SkeletonMerchant"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.BossHeadTextures">
            <summary>
            Associates an NPC type (<see cref="F:Terraria.NPC.type"/>) with the index in <see cref="F:Terraria.GameContent.TextureAssets.NpcHeadBoss"/> of its default map icon.
            <br/> Auto-set using <see cref="T:Terraria.ModLoader.AutoloadBossHead"/>.
            <br/> Defaults to <c>-1</c>.
            </summary>
            <remarks>
            If you need to dynamically change your boss's head icon, use <see cref="M:Terraria.ModLoader.ModNPC.BossHeadSlot(System.Int32@)"/> and <see cref="M:Terraria.ModLoader.NPCHeadLoader.GetBossHeadSlot(System.String)"/>.
            <br/> If you need an NPC's <em>current</em> head index, using <see cref="M:Terraria.NPC.GetBossHeadTextureIndex"/>, which handles phase changes.
            </remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.PositiveNPCTypesExcludedFromDeathTally">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC will not have its kills counted.
            <br/> Used in vanilla for special projectile-like NPCs (not found in <see cref="F:Terraria.ID.NPCID.Sets.ProjectileNPC"/>), for NPCs that turn into another NPC on death, and for temporary NPCs, like the <see cref="F:Terraria.ID.NPCID.MothronEgg"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>Any NPC in the <see cref="F:Terraria.ID.NPCID.Sets.ProjectileNPC"/> set will not have its kills counted either.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.ShouldBeCountedAsBoss">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC is sorted with bosses despite <see cref="F:Terraria.NPC.boss"/> being <see langword="false"/>.
            <Br/> Used in vanilla for the Celestial Pillars, the Eater of Worlds' head, and the Torch God.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.DangerThatPreventsOtherDangers">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC is considered dangerous without having <see cref="F:Terraria.NPC.boss"/> set.
            <br/> <see cref="F:Terraria.Main.CurrentFrameFlags.AnyActiveBossNPC"/> will be set to <see langword="true"/> if any NPC in this set is alive, and <see cref="M:Terraria.NPC.AnyDanger(System.Boolean,System.Boolean)"/> will return <see langword="true"/> if any NPCs in this set are alive.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.MustAlwaysDraw">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC will always draw, even if its hitbox is off-screen.
            <br/> Default to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.ExtraTextureCount">
            <summary>
            The number of extra textures this town NPC has.
            <br/> Most extra textures are hatless versions used for parties, though the <see cref="F:Terraria.ID.NPCID.BestiaryGirl"/> has an additional transformed texture as well.
            <br/> Unused in vanilla.
            <br/> Defaults to <c>0</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NPCFramingGroup">
            <summary>
            The index for <see cref="F:Terraria.ID.NPCID.Sets.TownNPCsFramingGroups"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>). See <see cref="F:Terraria.ID.NPCID.Sets.TownNPCsFramingGroups"/> for more info.
            <br/> Defaults to <c>0</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.CanHitPastShimmer">
            <summary>
            If <see langword="true"/> for a given NPC type (<see cref="F:Terraria.NPC.type"/>), then that NPC can hit players that are submerged in shimmer.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>Bosses (<see cref="F:Terraria.NPC.boss"/>) and invasion enemies (<see cref="M:Terraria.NPC.GetNPCInvasionGroup(System.Int32)"/>) can always hit shimmered players.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.TownNPCsFramingGroups">
            <summary>
            The vertical offset, in pixels, that this NPC's party hat will draw. Indexed using values from <see cref="F:Terraria.ID.NPCID.Sets.NPCFramingGroup"/>.
            </summary>
            <remarks><see cref="F:Terraria.ID.NPCID.Sets.HatOffsetY"/> applies the same offset to all frames, this applies a specific offset per frame.</remarks>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.SpawnFromLastEmptySlot">
            <summary>
            Whether or not the spawned NPC will start looking for a suitable slot from the end of <seealso cref="F:Terraria.Main.npc"/>, ignoring the Start parameter of <see cref="M:Terraria.NPC.NewNPC(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)"/>.
            Useful if you have a multi-segmented boss and want its parts to draw over the main body (body will be in this set).
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.ActsLikeTownNPC">
            <summary>
            Whether or not a given NPC will act like a town NPC in terms of AI, animations, and attacks, but not in other regards, such as appearing on the minimap, like the bone merchant in vanilla.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.NoTownNPCHappiness">
            <summary>
            If true, the given NPC will not count towards town NPC happiness and won't have a happiness button. Pets (<see cref="F:Terraria.ID.NPCID.Sets.IsTownPet"/>) do not need to set this.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.SpawnsWithCustomName">
            <summary>
            Whether or not a given NPC will spawn with a custom name like a town NPC. In order to determine what name will be selected, override the TownNPCName hook.
            True will force a name to be rolled regardless of vanilla behavior. False will have vanilla handle the naming.
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.CannotSitOnFurniture">
            <summary>
            Whether or not a given NPC can sit on suitable furniture (<see cref="F:Terraria.ID.TileID.Sets.CanBeSatOnForNPCs"/>)
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.CannotDropSouls">
            <summary>
            Whether or not a given NPC is excluded from dropping hardmode souls (Soul of Night/Light)
            <br/>Contains vanilla NPCs that are easy to spawn in large numbers, preventing easy soul farming
            <br/>Do not add your NPC to this if it would be excluded automatically (i.e. critter, town NPC, or no coin drops)
            </summary>
        </member>
        <member name="F:Terraria.ID.NPCID.Sets.AllowDoorInteraction">
            <summary>
            Whether or not this NPC can still interact with doors if they use the Vanilla TownNPC aiStyle (AKA aiStyle == 7)
            but are not actually marked as Town NPCs (AKA npc.townNPC == true).
            </summary>
            <remarks>
            Note: This set DOES NOT DO ANYTHING if your NPC doesn't use the Vanilla TownNPC aiStyle (aiStyle == 7).
            </remarks>
        </member>
        <member name="F:Terraria.ID.PlayerVariantID.Sets.Male">
            <summary>
            If <see langword="true"/> for a given skin variant (<see cref="F:Terraria.Player.skinVariant"/>), then that variant is for a male (<see cref="P:Terraria.Player.Male"/>) player.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.PlayerVariantID.Sets.AltGenderReference">
            <summary>
            Links a skin variant (<see cref="F:Terraria.Player.skinVariant"/>) to the corresponding skin variant of the opposite gender.
            </summary>
        </member>
        <member name="F:Terraria.ID.PlayerVariantID.Sets.VariantOrderMale">
            <summary>
            The order of skin variants (<see cref="F:Terraria.Player.skinVariant"/>) for male players.
            </summary>
        </member>
        <member name="F:Terraria.ID.PlayerVariantID.Sets.VariantOrderFemale">
            <summary>
            The order of skin variants (<see cref="F:Terraria.Player.skinVariant"/>) for female players.
            </summary>
        </member>
        <member name="F:Terraria.ID.PrefixID.Sets.ReducedNaturalChance">
            <summary>
            If <see langword="true"/> for a given prefix type (<see cref="F:Terraria.Item.prefix"/>), then that prefix has a 66% to not be applied when randomly rolled (using <c>-1</c>) when calling <see cref="M:Terraria.Item.Prefix(System.Int32)"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Arrow">
            <summary>
            Behavior: Includes Bullets and Lasers<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.WoodenArrowFriendly"/>, <see cref="F:Terraria.ID.ProjectileID.FireArrow"/>, <see cref="F:Terraria.ID.ProjectileID.UnholyArrow"/>, <see cref="F:Terraria.ID.ProjectileID.JestersArrow"/>, <see cref="F:Terraria.ID.ProjectileID.Bullet"/>, <see cref="F:Terraria.ID.ProjectileID.GreenLaser"/>, <see cref="F:Terraria.ID.ProjectileID.MeteorShot"/>, <see cref="F:Terraria.ID.ProjectileID.HarpyFeather"/>, <see cref="F:Terraria.ID.ProjectileID.HellfireArrow"/>, <see cref="F:Terraria.ID.ProjectileID.Seed"/>, <see cref="F:Terraria.ID.ProjectileID.Stinger"/>, <see cref="F:Terraria.ID.ProjectileID.WoodenArrowHostile"/>, <see cref="F:Terraria.ID.ProjectileID.FlamingArrow"/>, <see cref="F:Terraria.ID.ProjectileID.EyeLaser"/>, <see cref="F:Terraria.ID.ProjectileID.PinkLaser"/>, <see cref="F:Terraria.ID.ProjectileID.PurpleLaser"/>, <see cref="F:Terraria.ID.ProjectileID.CrystalBullet"/>, <see cref="F:Terraria.ID.ProjectileID.HolyArrow"/>, <see cref="F:Terraria.ID.ProjectileID.PoisonDart"/>, <see cref="F:Terraria.ID.ProjectileID.DeathLaser"/>, <see cref="F:Terraria.ID.ProjectileID.CursedArrow"/>, <see cref="F:Terraria.ID.ProjectileID.CursedBullet"/>, <see cref="F:Terraria.ID.ProjectileID.BulletSnowman"/>, <see cref="F:Terraria.ID.ProjectileID.BoneArrow"/>, <see cref="F:Terraria.ID.ProjectileID.FrostArrow"/>, <see cref="F:Terraria.ID.ProjectileID.CopperCoin"/>, <see cref="F:Terraria.ID.ProjectileID.SilverCoin"/>, <see cref="F:Terraria.ID.ProjectileID.GoldCoin"/>, <see cref="F:Terraria.ID.ProjectileID.PlatinumCoin"/>, <see cref="F:Terraria.ID.ProjectileID.FrostburnArrow"/>, <see cref="F:Terraria.ID.ProjectileID.IceSpike"/>, <see cref="F:Terraria.ID.ProjectileID.JungleSpike"/>, <see cref="F:Terraria.ID.ProjectileID.ConfettiGun"/>, <see cref="F:Terraria.ID.ProjectileID.BulletDeadeye"/>, <see cref="F:Terraria.ID.ProjectileID.PoisonDartTrap"/>, <see cref="F:Terraria.ID.ProjectileID.PygmySpear"/>, <see cref="F:Terraria.ID.ProjectileID.ChlorophyteBullet"/>, <see cref="F:Terraria.ID.ProjectileID.ChlorophyteArrow"/>, <see cref="F:Terraria.ID.ProjectileID.BulletHighVelocity"/>, <see cref="F:Terraria.ID.ProjectileID.Stynger"/>, <see cref="F:Terraria.ID.ProjectileID.FlowerPowPetal"/>, <see cref="F:Terraria.ID.ProjectileID.FrostBeam"/>, <see cref="F:Terraria.ID.ProjectileID.EyeBeam"/>, <see cref="F:Terraria.ID.ProjectileID.PoisonFang"/>, <see cref="F:Terraria.ID.ProjectileID.PoisonDartBlowgun"/>, <see cref="F:Terraria.ID.ProjectileID.Skull"/>, <see cref="F:Terraria.ID.ProjectileID.SeedPlantera"/>, <see cref="F:Terraria.ID.ProjectileID.PoisonSeedPlantera"/>, <see cref="F:Terraria.ID.ProjectileID.IchorArrow"/>, <see cref="F:Terraria.ID.ProjectileID.IchorBullet"/>, <see cref="F:Terraria.ID.ProjectileID.VenomArrow"/>, <see cref="F:Terraria.ID.ProjectileID.VenomBullet"/>, <see cref="F:Terraria.ID.ProjectileID.PartyBullet"/>, <see cref="F:Terraria.ID.ProjectileID.NanoBullet"/>, <see cref="F:Terraria.ID.ProjectileID.ExplosiveBullet"/>, <see cref="F:Terraria.ID.ProjectileID.GoldenBullet"/>, <see cref="F:Terraria.ID.ProjectileID.ConfettiMelee"/>, <see cref="F:Terraria.ID.ProjectileID.Shadowflames"/>, <see cref="F:Terraria.ID.ProjectileID.SniperBullet"/>, <see cref="F:Terraria.ID.ProjectileID.CandyCorn"/>, <see cref="F:Terraria.ID.ProjectileID.JackOLantern"/>, <see cref="F:Terraria.ID.ProjectileID.Stake"/>, <see cref="F:Terraria.ID.ProjectileID.FlamingWood"/>, <see cref="F:Terraria.ID.ProjectileID.PineNeedleFriendly"/>, <see cref="F:Terraria.ID.ProjectileID.Blizzard"/>, <see cref="F:Terraria.ID.ProjectileID.NorthPoleSnowflake"/>, <see cref="F:Terraria.ID.ProjectileID.PineNeedleHostile"/>, <see cref="F:Terraria.ID.ProjectileID.FrostWave"/>, <see cref="F:Terraria.ID.ProjectileID.FrostShard"/>, <see cref="F:Terraria.ID.ProjectileID.Missile"/>, <see cref="F:Terraria.ID.ProjectileID.VenomFang"/>, <see cref="F:Terraria.ID.ProjectileID.PulseBolt"/>, <see cref="F:Terraria.ID.ProjectileID.HornetStinger"/>, <see cref="F:Terraria.ID.ProjectileID.ImpFireball"/>, <see cref="F:Terraria.ID.ProjectileID.MiniRetinaLaser"/>, <see cref="F:Terraria.ID.ProjectileID.MiniSharkron"/>, <see cref="F:Terraria.ID.ProjectileID.Meteor1"/>, <see cref="F:Terraria.ID.ProjectileID.Meteor2"/>, <see cref="F:Terraria.ID.ProjectileID.Meteor3"/>, <see cref="F:Terraria.ID.ProjectileID.MartianTurretBolt"/>, <see cref="F:Terraria.ID.ProjectileID.BrainScramblerBolt"/>, <see cref="F:Terraria.ID.ProjectileID.GigaZapperSpear"/>, <see cref="F:Terraria.ID.ProjectileID.RayGunnerLaser"/>, <see cref="F:Terraria.ID.ProjectileID.LaserMachinegunLaser"/>, <see cref="F:Terraria.ID.ProjectileID.ElectrosphereMissile"/>, <see cref="F:Terraria.ID.ProjectileID.SaucerLaser"/>, <see cref="F:Terraria.ID.ProjectileID.ChargedBlasterOrb"/>, <see cref="F:Terraria.ID.ProjectileID.PhantasmalBolt"/>, <see cref="F:Terraria.ID.ProjectileID.CultistBossFireBall"/>, <see cref="F:Terraria.ID.ProjectileID.CultistBossFireBallClone"/>, <see cref="F:Terraria.ID.ProjectileID.BeeArrow"/>, <see cref="F:Terraria.ID.ProjectileID.WebSpit"/>, <see cref="F:Terraria.ID.ProjectileID.BoneArrowFromMerchant"/>, <see cref="F:Terraria.ID.ProjectileID.CrystalDart"/>, <see cref="F:Terraria.ID.ProjectileID.CursedDart"/>, <see cref="F:Terraria.ID.ProjectileID.IchorDart"/>, <see cref="F:Terraria.ID.ProjectileID.SeedlerThorn"/>, <see cref="F:Terraria.ID.ProjectileID.Hellwing"/>, <see cref="F:Terraria.ID.ProjectileID.ShadowFlameArrow"/>, <see cref="F:Terraria.ID.ProjectileID.Nail"/>, <see cref="F:Terraria.ID.ProjectileID.JavelinFriendly"/>, <see cref="F:Terraria.ID.ProjectileID.JavelinHostile"/>, <see cref="F:Terraria.ID.ProjectileID.BoneGloveProj"/>, <see cref="F:Terraria.ID.ProjectileID.SalamanderSpit"/>, <see cref="F:Terraria.ID.ProjectileID.NebulaLaser"/>, <see cref="F:Terraria.ID.ProjectileID.VortexLaser"/>, <see cref="F:Terraria.ID.ProjectileID.VortexAcid"/>, <see cref="F:Terraria.ID.ProjectileID.ClothiersCurse"/>, <see cref="F:Terraria.ID.ProjectileID.PainterPaintball"/>, <see cref="F:Terraria.ID.ProjectileID.MartianWalkerLaser"/>, <see cref="F:Terraria.ID.ProjectileID.AncientDoomProjectile"/>, <see cref="F:Terraria.ID.ProjectileID.BlowupSmoke"/>, <see cref="F:Terraria.ID.ProjectileID.PortalGunBolt"/>, <see cref="F:Terraria.ID.ProjectileID.SpikedSlimeSpike"/>, <see cref="F:Terraria.ID.ProjectileID.ScutlixLaser"/>, <see cref="F:Terraria.ID.ProjectileID.VortexBeaterRocket"/>, <see cref="F:Terraria.ID.ProjectileID.BlowupSmokeMoonlord"/>, <see cref="F:Terraria.ID.ProjectileID.NebulaBlaze1"/>, <see cref="F:Terraria.ID.ProjectileID.NebulaBlaze2"/>, <see cref="F:Terraria.ID.ProjectileID.MoonlordBullet"/>, <see cref="F:Terraria.ID.ProjectileID.MoonlordArrow"/>, <see cref="F:Terraria.ID.ProjectileID.MoonlordArrowTrail"/>, <see cref="F:Terraria.ID.ProjectileID.LunarFlare"/>, <see cref="F:Terraria.ID.ProjectileID.SkyFracture"/>, <see cref="F:Terraria.ID.ProjectileID.BlackBolt"/>, <see cref="F:Terraria.ID.ProjectileID.DD2JavelinHostile"/>, <see cref="F:Terraria.ID.ProjectileID.DD2DrakinShot"/>, <see cref="F:Terraria.ID.ProjectileID.DD2DarkMageBolt"/>, <see cref="F:Terraria.ID.ProjectileID.DD2OgreSpit"/>, <see cref="F:Terraria.ID.ProjectileID.DD2BallistraProj"/>, <see cref="F:Terraria.ID.ProjectileID.DD2LightningBugZap"/>, <see cref="F:Terraria.ID.ProjectileID.DD2SquireSonicBoom"/>, <see cref="F:Terraria.ID.ProjectileID.DD2JavelinHostileT3"/>, <see cref="F:Terraria.ID.ProjectileID.DD2BetsyFireball"/>, <see cref="F:Terraria.ID.ProjectileID.DD2PhoenixBowShot"/>, <see cref="F:Terraria.ID.ProjectileID.MonkStaffT3_AltShot"/>, <see cref="F:Terraria.ID.ProjectileID.DD2BetsyArrow"/>, <see cref="F:Terraria.ID.ProjectileID.ApprenticeStaffT3Shot"/>, <see cref="F:Terraria.ID.ProjectileID.BookStaffShot"/>, <see cref="F:Terraria.ID.ProjectileID.QueenBeeStinger"/>, <see cref="F:Terraria.ID.ProjectileID.RollingCactusSpike"/>, <see cref="F:Terraria.ID.ProjectileID.Geode"/>, <see cref="F:Terraria.ID.ProjectileID.BloodShot"/>, <see cref="F:Terraria.ID.ProjectileID.BloodNautilusShot"/>, <see cref="F:Terraria.ID.ProjectileID.BloodArrow"/>, <see cref="F:Terraria.ID.ProjectileID.BookOfSkullsSkull"/>, <see cref="F:Terraria.ID.ProjectileID.ZapinatorLaser"/>, <see cref="F:Terraria.ID.ProjectileID.QueenSlimeMinionBlueSpike"/>, <see cref="F:Terraria.ID.ProjectileID.QueenSlimeMinionPinkBall"/>, <see cref="F:Terraria.ID.ProjectileID.QueenSlimeGelAttack"/>, <see cref="F:Terraria.ID.ProjectileID.VolatileGelatinBall"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ThrownProjectile">
            <summary>
            Behavior: Includes Shurikens, Bones, and Knives<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Shuriken"/>, <see cref="F:Terraria.ID.ProjectileID.Bone"/>, <see cref="F:Terraria.ID.ProjectileID.ThrowingKnife"/>, <see cref="F:Terraria.ID.ProjectileID.PoisonedKnife"/>, <see cref="F:Terraria.ID.ProjectileID.HolyWater"/>, <see cref="F:Terraria.ID.ProjectileID.UnholyWater"/>, <see cref="F:Terraria.ID.ProjectileID.MagicDagger"/>, <see cref="F:Terraria.ID.ProjectileID.CannonballFriendly"/>, <see cref="F:Terraria.ID.ProjectileID.SnowBallFriendly"/>, <see cref="F:Terraria.ID.ProjectileID.CannonballHostile"/>, <see cref="F:Terraria.ID.ProjectileID.StyngerShrapnel"/>, <see cref="F:Terraria.ID.ProjectileID.PaladinsHammerHostile"/>, <see cref="F:Terraria.ID.ProjectileID.VampireKnife"/>, <see cref="F:Terraria.ID.ProjectileID.EatersBite"/>, <see cref="F:Terraria.ID.ProjectileID.RottenEgg"/>, <see cref="F:Terraria.ID.ProjectileID.StarAnise"/>, <see cref="F:Terraria.ID.ProjectileID.OrnamentHostileShrapnel"/>, <see cref="F:Terraria.ID.ProjectileID.LovePotion"/>, <see cref="F:Terraria.ID.ProjectileID.FoulPotion"/>, <see cref="F:Terraria.ID.ProjectileID.SkeletonBone"/>, <see cref="F:Terraria.ID.ProjectileID.ShadowFlameKnife"/>, <see cref="F:Terraria.ID.ProjectileID.DrManFlyFlask"/>, <see cref="F:Terraria.ID.ProjectileID.Spark"/>, <see cref="F:Terraria.ID.ProjectileID.ToxicFlask"/>, <see cref="F:Terraria.ID.ProjectileID.FrostDaggerfish"/>, <see cref="F:Terraria.ID.ProjectileID.NurseSyringeHurt"/>, <see cref="F:Terraria.ID.ProjectileID.SantaBombs"/>, <see cref="F:Terraria.ID.ProjectileID.BoneDagger"/>, <see cref="F:Terraria.ID.ProjectileID.BloodWater"/>, <see cref="F:Terraria.ID.ProjectileID.Football"/>, <see cref="F:Terraria.ID.ProjectileID.TreeGlobe"/>, <see cref="F:Terraria.ID.ProjectileID.WorldGlobe"/>, <see cref="F:Terraria.ID.ProjectileID.RockGolemRock"/>, <see cref="F:Terraria.ID.ProjectileID.GelBalloon"/>, <see cref="F:Terraria.ID.ProjectileID.WandOfSparkingSpark"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Boomerang">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.EnchantedBoomerang"/>, <see cref="F:Terraria.ID.ProjectileID.Flamarang"/>, <see cref="F:Terraria.ID.ProjectileID.ThornChakram"/>, <see cref="F:Terraria.ID.ProjectileID.WoodenBoomerang"/>, <see cref="F:Terraria.ID.ProjectileID.LightDisc"/>, <see cref="F:Terraria.ID.ProjectileID.IceBoomerang"/>, <see cref="F:Terraria.ID.ProjectileID.PossessedHatchet"/>, <see cref="F:Terraria.ID.ProjectileID.Bananarang"/>, <see cref="F:Terraria.ID.ProjectileID.PaladinsHammerFriendly"/>, <see cref="F:Terraria.ID.ProjectileID.BloodyMachete"/>, <see cref="F:Terraria.ID.ProjectileID.FruitcakeChakram"/>, <see cref="F:Terraria.ID.ProjectileID.Anchor"/>, <see cref="F:Terraria.ID.ProjectileID.BouncingShield"/>, <see cref="F:Terraria.ID.ProjectileID.Shroomerang"/>, <see cref="F:Terraria.ID.ProjectileID.CombatWrench"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Vilethorn">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.VilethornBase"/>, <see cref="F:Terraria.ID.ProjectileID.VilethornTip"/>, <see cref="F:Terraria.ID.ProjectileID.NettleBurstRight"/>, <see cref="F:Terraria.ID.ProjectileID.NettleBurstLeft"/>, <see cref="F:Terraria.ID.ProjectileID.NettleBurstEnd"/>, <see cref="F:Terraria.ID.ProjectileID.CrystalVileShardHead"/>, <see cref="F:Terraria.ID.ProjectileID.CrystalVileShardShaft"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FallingStar">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Starfury"/>, <see cref="F:Terraria.ID.ProjectileID.FallingStar"/>, <see cref="F:Terraria.ID.ProjectileID.HallowStar"/>, <see cref="F:Terraria.ID.ProjectileID.StarWrath"/>, <see cref="F:Terraria.ID.ProjectileID.ManaCloakStar"/>, <see cref="F:Terraria.ID.ProjectileID.BeeCloakStar"/>, <see cref="F:Terraria.ID.ProjectileID.StarVeilStar"/>, <see cref="F:Terraria.ID.ProjectileID.StarCloakStar"/>, <see cref="F:Terraria.ID.ProjectileID.StarCannonStar"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Powder">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.PurificationPowder"/>, <see cref="F:Terraria.ID.ProjectileID.VilePowder"/>, <see cref="F:Terraria.ID.ProjectileID.ViciousPowder"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Hook">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Hook"/>, <see cref="F:Terraria.ID.ProjectileID.IvyWhip"/>, <see cref="F:Terraria.ID.ProjectileID.DualHookBlue"/>, <see cref="F:Terraria.ID.ProjectileID.DualHookRed"/>, <see cref="F:Terraria.ID.ProjectileID.Web"/>, <see cref="F:Terraria.ID.ProjectileID.GemHookAmethyst"/>, <see cref="F:Terraria.ID.ProjectileID.GemHookTopaz"/>, <see cref="F:Terraria.ID.ProjectileID.GemHookSapphire"/>, <see cref="F:Terraria.ID.ProjectileID.GemHookEmerald"/>, <see cref="F:Terraria.ID.ProjectileID.GemHookRuby"/>, <see cref="F:Terraria.ID.ProjectileID.GemHookDiamond"/>, <see cref="F:Terraria.ID.ProjectileID.SkeletronHand"/>, <see cref="F:Terraria.ID.ProjectileID.BatHook"/>, <see cref="F:Terraria.ID.ProjectileID.WoodHook"/>, <see cref="F:Terraria.ID.ProjectileID.CandyCaneHook"/>, <see cref="F:Terraria.ID.ProjectileID.ChristmasHook"/>, <see cref="F:Terraria.ID.ProjectileID.FishHook"/>, <see cref="F:Terraria.ID.ProjectileID.SlimeHook"/>, <see cref="F:Terraria.ID.ProjectileID.TrackHook"/>, <see cref="F:Terraria.ID.ProjectileID.AntiGravityHook"/>, <see cref="F:Terraria.ID.ProjectileID.TendonHook"/>, <see cref="F:Terraria.ID.ProjectileID.ThornHook"/>, <see cref="F:Terraria.ID.ProjectileID.IlluminantHook"/>, <see cref="F:Terraria.ID.ProjectileID.WormHook"/>, <see cref="F:Terraria.ID.ProjectileID.LunarHookSolar"/>, <see cref="F:Terraria.ID.ProjectileID.LunarHookVortex"/>, <see cref="F:Terraria.ID.ProjectileID.LunarHookNebula"/>, <see cref="F:Terraria.ID.ProjectileID.LunarHookStardust"/>, <see cref="F:Terraria.ID.ProjectileID.StaticHook"/>, <see cref="F:Terraria.ID.ProjectileID.AmberHook"/>, <see cref="F:Terraria.ID.ProjectileID.SquirrelHook"/>, <see cref="F:Terraria.ID.ProjectileID.QueenSlimeHook"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Bounce">
            <summary>
            Behavior: Includes the Flower of Fire, Waterbolt, Cursed Flame, and Meowmere projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.BallofFire"/>, <see cref="F:Terraria.ID.ProjectileID.WaterBolt"/>, <see cref="F:Terraria.ID.ProjectileID.CursedFlameFriendly"/>, <see cref="F:Terraria.ID.ProjectileID.CursedFlameHostile"/>, <see cref="F:Terraria.ID.ProjectileID.BallofFrost"/>, <see cref="F:Terraria.ID.ProjectileID.Fireball"/>, <see cref="F:Terraria.ID.ProjectileID.Meowmere"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MagicMissile">
            <summary>
            Behavior: Includes Flame Lash and Magic Missile<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MagicMissile"/>, <see cref="F:Terraria.ID.ProjectileID.Flamelash"/>, <see cref="F:Terraria.ID.ProjectileID.RainbowRodBullet"/>, <see cref="F:Terraria.ID.ProjectileID.FlyingKnife"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FallingTile">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DirtBall"/>, <see cref="F:Terraria.ID.ProjectileID.SandBallFalling"/>, <see cref="F:Terraria.ID.ProjectileID.MudBall"/>, <see cref="F:Terraria.ID.ProjectileID.AshBallFalling"/>, <see cref="F:Terraria.ID.ProjectileID.SandBallGun"/>, <see cref="F:Terraria.ID.ProjectileID.EbonsandBallFalling"/>, <see cref="F:Terraria.ID.ProjectileID.EbonsandBallGun"/>, <see cref="F:Terraria.ID.ProjectileID.PearlSandBallFalling"/>, <see cref="F:Terraria.ID.ProjectileID.PearlSandBallGun"/>, <see cref="F:Terraria.ID.ProjectileID.SiltBall"/>, <see cref="F:Terraria.ID.ProjectileID.SnowBallHostile"/>, <see cref="F:Terraria.ID.ProjectileID.SlushBall"/>, <see cref="F:Terraria.ID.ProjectileID.CrimsandBallFalling"/>, <see cref="F:Terraria.ID.ProjectileID.CrimsandBallGun"/>, <see cref="F:Terraria.ID.ProjectileID.CopperCoinsFalling"/>, <see cref="F:Terraria.ID.ProjectileID.SilverCoinsFalling"/>, <see cref="F:Terraria.ID.ProjectileID.GoldCoinsFalling"/>, <see cref="F:Terraria.ID.ProjectileID.PlatinumCoinsFalling"/>, <see cref="F:Terraria.ID.ProjectileID.BlueDungeonDebris"/>, <see cref="F:Terraria.ID.ProjectileID.GreenDungeonDebris"/>, <see cref="F:Terraria.ID.ProjectileID.PinkDungeonDebris"/>, <see cref="F:Terraria.ID.ProjectileID.ShellPileFalling"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FloatingFollow">
            <summary>
            Behavior: Includes Shadow Orb and Fairy pets<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.ShadowOrb"/>, <see cref="F:Terraria.ID.ProjectileID.BlueFairy"/>, <see cref="F:Terraria.ID.ProjectileID.PinkFairy"/>, <see cref="F:Terraria.ID.ProjectileID.GreenFairy"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Stream">
            <summary>
            Behavior: Includes Aqua Scepter and Golden Shower projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.WaterStream"/>, <see cref="F:Terraria.ID.ProjectileID.GoldenShowerFriendly"/>, <see cref="F:Terraria.ID.ProjectileID.GoldenShowerHostile"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Harpoon">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Harpoon"/>, <see cref="F:Terraria.ID.ProjectileID.GolemFist"/>, <see cref="F:Terraria.ID.ProjectileID.BoxingGlove"/>, <see cref="F:Terraria.ID.ProjectileID.ChainKnife"/>, <see cref="F:Terraria.ID.ProjectileID.ChainGuillotine"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.GroundProjectile">
            <summary>
            Behavior: Includes most non-destructive Explosive, Glowstick, and Spike Ball projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SpikyBall"/>, <see cref="F:Terraria.ID.ProjectileID.Glowstick"/>, <see cref="F:Terraria.ID.ProjectileID.StickyGlowstick"/>, <see cref="F:Terraria.ID.ProjectileID.Beenade"/>, <see cref="F:Terraria.ID.ProjectileID.SpikyBallTrap"/>, <see cref="F:Terraria.ID.ProjectileID.SmokeBomb"/>, <see cref="F:Terraria.ID.ProjectileID.BoulderStaffOfEarth"/>, <see cref="F:Terraria.ID.ProjectileID.ThornBall"/>, <see cref="F:Terraria.ID.ProjectileID.GreekFire1"/>, <see cref="F:Terraria.ID.ProjectileID.GreekFire2"/>, <see cref="F:Terraria.ID.ProjectileID.GreekFire3"/>, <see cref="F:Terraria.ID.ProjectileID.OrnamentHostile"/>, <see cref="F:Terraria.ID.ProjectileID.Spike"/>, <see cref="F:Terraria.ID.ProjectileID.SpiderEgg"/>, <see cref="F:Terraria.ID.ProjectileID.MolotovFire"/>, <see cref="F:Terraria.ID.ProjectileID.MolotovFire2"/>, <see cref="F:Terraria.ID.ProjectileID.MolotovFire3"/>, <see cref="F:Terraria.ID.ProjectileID.SaucerScrap"/>, <see cref="F:Terraria.ID.ProjectileID.SpelunkerGlowstick"/>, <see cref="F:Terraria.ID.ProjectileID.CursedDartFlame"/>, <see cref="F:Terraria.ID.ProjectileID.SeedlerNut"/>, <see cref="F:Terraria.ID.ProjectileID.BouncyGlowstick"/>, <see cref="F:Terraria.ID.ProjectileID.Twinkle"/>, <see cref="F:Terraria.ID.ProjectileID.FairyGlowstick"/>, <see cref="F:Terraria.ID.ProjectileID.DripplerFlailExtraBall"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Flail">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.BallOHurt"/>, <see cref="F:Terraria.ID.ProjectileID.BlueMoon"/>, <see cref="F:Terraria.ID.ProjectileID.Sunfury"/>, <see cref="F:Terraria.ID.ProjectileID.TheDaoofPow"/>, <see cref="F:Terraria.ID.ProjectileID.TheMeatball"/>, <see cref="F:Terraria.ID.ProjectileID.FlowerPow"/>, <see cref="F:Terraria.ID.ProjectileID.DripplerFlail"/>, <see cref="F:Terraria.ID.ProjectileID.Mace"/>, <see cref="F:Terraria.ID.ProjectileID.FlamingMace"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Explosive">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Bomb"/>, <see cref="F:Terraria.ID.ProjectileID.Dynamite"/>, <see cref="F:Terraria.ID.ProjectileID.Grenade"/>, <see cref="F:Terraria.ID.ProjectileID.StickyBomb"/>, <see cref="F:Terraria.ID.ProjectileID.HappyBomb"/>, <see cref="F:Terraria.ID.ProjectileID.BombSkeletronPrime"/>, <see cref="F:Terraria.ID.ProjectileID.Explosives"/>, <see cref="F:Terraria.ID.ProjectileID.GrenadeI"/>, <see cref="F:Terraria.ID.ProjectileID.RocketI"/>, <see cref="F:Terraria.ID.ProjectileID.ProximityMineI"/>, <see cref="F:Terraria.ID.ProjectileID.GrenadeII"/>, <see cref="F:Terraria.ID.ProjectileID.RocketII"/>, <see cref="F:Terraria.ID.ProjectileID.ProximityMineII"/>, <see cref="F:Terraria.ID.ProjectileID.GrenadeIII"/>, <see cref="F:Terraria.ID.ProjectileID.RocketIII"/>, <see cref="F:Terraria.ID.ProjectileID.ProximityMineIII"/>, <see cref="F:Terraria.ID.ProjectileID.GrenadeIV"/>, <see cref="F:Terraria.ID.ProjectileID.RocketIV"/>, <see cref="F:Terraria.ID.ProjectileID.ProximityMineIV"/>, <see cref="F:Terraria.ID.ProjectileID.Landmine"/>, <see cref="F:Terraria.ID.ProjectileID.RocketSkeleton"/>, <see cref="F:Terraria.ID.ProjectileID.RocketSnowmanI"/>, <see cref="F:Terraria.ID.ProjectileID.RocketSnowmanII"/>, <see cref="F:Terraria.ID.ProjectileID.RocketSnowmanIII"/>, <see cref="F:Terraria.ID.ProjectileID.RocketSnowmanIV"/>, <see cref="F:Terraria.ID.ProjectileID.StickyGrenade"/>, <see cref="F:Terraria.ID.ProjectileID.StickyDynamite"/>, <see cref="F:Terraria.ID.ProjectileID.BouncyBomb"/>, <see cref="F:Terraria.ID.ProjectileID.BouncyGrenade"/>, <see cref="F:Terraria.ID.ProjectileID.BombFish"/>, <see cref="F:Terraria.ID.ProjectileID.PartyGirlGrenade"/>, <see cref="F:Terraria.ID.ProjectileID.BouncyDynamite"/>, <see cref="F:Terraria.ID.ProjectileID.DD2GoblinBomb"/>, <see cref="F:Terraria.ID.ProjectileID.ScarabBomb"/>, <see cref="F:Terraria.ID.ProjectileID.ClusterRocketI"/>, <see cref="F:Terraria.ID.ProjectileID.ClusterGrenadeI"/>, <see cref="F:Terraria.ID.ProjectileID.ClusterMineI"/>, <see cref="F:Terraria.ID.ProjectileID.ClusterFragmentsI"/>, <see cref="F:Terraria.ID.ProjectileID.ClusterRocketII"/>, <see cref="F:Terraria.ID.ProjectileID.ClusterGrenadeII"/>, <see cref="F:Terraria.ID.ProjectileID.ClusterMineII"/>, <see cref="F:Terraria.ID.ProjectileID.ClusterFragmentsII"/>, <see cref="F:Terraria.ID.ProjectileID.WetRocket"/>, <see cref="F:Terraria.ID.ProjectileID.WetGrenade"/>, <see cref="F:Terraria.ID.ProjectileID.WetMine"/>, <see cref="F:Terraria.ID.ProjectileID.LavaRocket"/>, <see cref="F:Terraria.ID.ProjectileID.LavaGrenade"/>, <see cref="F:Terraria.ID.ProjectileID.LavaMine"/>, <see cref="F:Terraria.ID.ProjectileID.HoneyRocket"/>, <see cref="F:Terraria.ID.ProjectileID.HoneyGrenade"/>, <see cref="F:Terraria.ID.ProjectileID.HoneyMine"/>, <see cref="F:Terraria.ID.ProjectileID.MiniNukeRocketI"/>, <see cref="F:Terraria.ID.ProjectileID.MiniNukeGrenadeI"/>, <see cref="F:Terraria.ID.ProjectileID.MiniNukeMineI"/>, <see cref="F:Terraria.ID.ProjectileID.MiniNukeRocketII"/>, <see cref="F:Terraria.ID.ProjectileID.MiniNukeGrenadeII"/>, <see cref="F:Terraria.ID.ProjectileID.MiniNukeMineII"/>, <see cref="F:Terraria.ID.ProjectileID.DryRocket"/>, <see cref="F:Terraria.ID.ProjectileID.DryGrenade"/>, <see cref="F:Terraria.ID.ProjectileID.DryMine"/>, <see cref="F:Terraria.ID.ProjectileID.ClusterSnowmanRocketI"/>, <see cref="F:Terraria.ID.ProjectileID.ClusterSnowmanRocketII"/>, <see cref="F:Terraria.ID.ProjectileID.WetSnowmanRocket"/>, <see cref="F:Terraria.ID.ProjectileID.LavaSnowmanRocket"/>, <see cref="F:Terraria.ID.ProjectileID.HoneySnowmanRocket"/>, <see cref="F:Terraria.ID.ProjectileID.MiniNukeSnowmanRocketI"/>, <see cref="F:Terraria.ID.ProjectileID.MiniNukeSnowmanRocketII"/>, <see cref="F:Terraria.ID.ProjectileID.DrySnowmanRocket"/>, <see cref="F:Terraria.ID.ProjectileID.ClusterSnowmanFragmentsI"/>, <see cref="F:Terraria.ID.ProjectileID.ClusterSnowmanFragmentsII"/>, <see cref="F:Terraria.ID.ProjectileID.WetBomb"/>, <see cref="F:Terraria.ID.ProjectileID.LavaBomb"/>, <see cref="F:Terraria.ID.ProjectileID.HoneyBomb"/>, <see cref="F:Terraria.ID.ProjectileID.DryBomb"/>, <see cref="F:Terraria.ID.ProjectileID.DirtBomb"/>, <see cref="F:Terraria.ID.ProjectileID.DirtStickyBomb"/>, <see cref="F:Terraria.ID.ProjectileID.SantankMountRocket"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.GraveMarker">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Tombstone"/>, <see cref="F:Terraria.ID.ProjectileID.GraveMarker"/>, <see cref="F:Terraria.ID.ProjectileID.CrossGraveMarker"/>, <see cref="F:Terraria.ID.ProjectileID.Headstone"/>, <see cref="F:Terraria.ID.ProjectileID.Gravestone"/>, <see cref="F:Terraria.ID.ProjectileID.Obelisk"/>, <see cref="F:Terraria.ID.ProjectileID.RichGravestone1"/>, <see cref="F:Terraria.ID.ProjectileID.RichGravestone2"/>, <see cref="F:Terraria.ID.ProjectileID.RichGravestone3"/>, <see cref="F:Terraria.ID.ProjectileID.RichGravestone4"/>, <see cref="F:Terraria.ID.ProjectileID.RichGravestone5"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Sickle">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DemonSickle"/>, <see cref="F:Terraria.ID.ProjectileID.DemonScythe"/>, <see cref="F:Terraria.ID.ProjectileID.IceSickle"/>, <see cref="F:Terraria.ID.ProjectileID.DeathSickle"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Spear">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DarkLance"/>, <see cref="F:Terraria.ID.ProjectileID.Trident"/>, <see cref="F:Terraria.ID.ProjectileID.Spear"/>, <see cref="F:Terraria.ID.ProjectileID.MythrilHalberd"/>, <see cref="F:Terraria.ID.ProjectileID.AdamantiteGlaive"/>, <see cref="F:Terraria.ID.ProjectileID.CobaltNaginata"/>, <see cref="F:Terraria.ID.ProjectileID.Gungnir"/>, <see cref="F:Terraria.ID.ProjectileID.MushroomSpear"/>, <see cref="F:Terraria.ID.ProjectileID.TheRottedFork"/>, <see cref="F:Terraria.ID.ProjectileID.PalladiumPike"/>, <see cref="F:Terraria.ID.ProjectileID.OrichalcumHalberd"/>, <see cref="F:Terraria.ID.ProjectileID.TitaniumTrident"/>, <see cref="F:Terraria.ID.ProjectileID.ChlorophytePartisan"/>, <see cref="F:Terraria.ID.ProjectileID.NorthPoleWeapon"/>, <see cref="F:Terraria.ID.ProjectileID.ObsidianSwordfish"/>, <see cref="F:Terraria.ID.ProjectileID.Swordfish"/>, <see cref="F:Terraria.ID.ProjectileID.ThunderSpear"/>, <see cref="F:Terraria.ID.ProjectileID.JoustingLance"/>, <see cref="F:Terraria.ID.ProjectileID.ShadowJoustingLance"/>, <see cref="F:Terraria.ID.ProjectileID.HallowJoustingLance"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Drill">
            <summary>
            Behavior: Includes Saws<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.CobaltChainsaw"/>, <see cref="F:Terraria.ID.ProjectileID.MythrilChainsaw"/>, <see cref="F:Terraria.ID.ProjectileID.CobaltDrill"/>, <see cref="F:Terraria.ID.ProjectileID.MythrilDrill"/>, <see cref="F:Terraria.ID.ProjectileID.AdamantiteChainsaw"/>, <see cref="F:Terraria.ID.ProjectileID.AdamantiteDrill"/>, <see cref="F:Terraria.ID.ProjectileID.Hamdrax"/>, <see cref="F:Terraria.ID.ProjectileID.PalladiumDrill"/>, <see cref="F:Terraria.ID.ProjectileID.PalladiumChainsaw"/>, <see cref="F:Terraria.ID.ProjectileID.OrichalcumDrill"/>, <see cref="F:Terraria.ID.ProjectileID.OrichalcumChainsaw"/>, <see cref="F:Terraria.ID.ProjectileID.TitaniumDrill"/>, <see cref="F:Terraria.ID.ProjectileID.TitaniumChainsaw"/>, <see cref="F:Terraria.ID.ProjectileID.ChlorophyteDrill"/>, <see cref="F:Terraria.ID.ProjectileID.ChlorophyteChainsaw"/>, <see cref="F:Terraria.ID.ProjectileID.ChlorophyteJackhammer"/>, <see cref="F:Terraria.ID.ProjectileID.SawtoothShark"/>, <see cref="F:Terraria.ID.ProjectileID.VortexChainsaw"/>, <see cref="F:Terraria.ID.ProjectileID.VortexDrill"/>, <see cref="F:Terraria.ID.ProjectileID.NebulaChainsaw"/>, <see cref="F:Terraria.ID.ProjectileID.NebulaDrill"/>, <see cref="F:Terraria.ID.ProjectileID.SolarFlareChainsaw"/>, <see cref="F:Terraria.ID.ProjectileID.SolarFlareDrill"/>, <see cref="F:Terraria.ID.ProjectileID.ButchersChainsaw"/>, <see cref="F:Terraria.ID.ProjectileID.StardustDrill"/>, <see cref="F:Terraria.ID.ProjectileID.StardustChainsaw"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MusicNote">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.QuarterNote"/>, <see cref="F:Terraria.ID.ProjectileID.EighthNote"/>, <see cref="F:Terraria.ID.ProjectileID.TiedEighthNote"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.IceRod">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.IceBlock"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Flames">
            <summary>
            Behavior: Includes Flamethrower Flames, Cursed Flames, and Eye Fire<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Flames"/>, <see cref="F:Terraria.ID.ProjectileID.EyeFire"/>, <see cref="F:Terraria.ID.ProjectileID.FlamesTrap"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.CrystalShard">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.CrystalShard"/>, <see cref="F:Terraria.ID.ProjectileID.CrystalStorm"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Boulder">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Boulder"/>, <see cref="F:Terraria.ID.ProjectileID.BeeHive"/>, <see cref="F:Terraria.ID.ProjectileID.RollingCactus"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Pet">
            <summary>
            Behavior: Includes some minions with simple AI, such as the Baby Slime<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Bunny"/>, <see cref="F:Terraria.ID.ProjectileID.Penguin"/>, <see cref="F:Terraria.ID.ProjectileID.Turtle"/>, <see cref="F:Terraria.ID.ProjectileID.BabyEater"/>, <see cref="F:Terraria.ID.ProjectileID.Pygmy"/>, <see cref="F:Terraria.ID.ProjectileID.Pygmy2"/>, <see cref="F:Terraria.ID.ProjectileID.Pygmy3"/>, <see cref="F:Terraria.ID.ProjectileID.Pygmy4"/>, <see cref="F:Terraria.ID.ProjectileID.BabySkeletronHead"/>, <see cref="F:Terraria.ID.ProjectileID.BabyHornet"/>, <see cref="F:Terraria.ID.ProjectileID.TikiSpirit"/>, <see cref="F:Terraria.ID.ProjectileID.PetLizard"/>, <see cref="F:Terraria.ID.ProjectileID.Parrot"/>, <see cref="F:Terraria.ID.ProjectileID.Truffle"/>, <see cref="F:Terraria.ID.ProjectileID.Sapling"/>, <see cref="F:Terraria.ID.ProjectileID.Wisp"/>, <see cref="F:Terraria.ID.ProjectileID.BabyDino"/>, <see cref="F:Terraria.ID.ProjectileID.BabySlime"/>, <see cref="F:Terraria.ID.ProjectileID.EyeSpring"/>, <see cref="F:Terraria.ID.ProjectileID.BabySnowman"/>, <see cref="F:Terraria.ID.ProjectileID.Spider"/>, <see cref="F:Terraria.ID.ProjectileID.Squashling"/>, <see cref="F:Terraria.ID.ProjectileID.BlackCat"/>, <see cref="F:Terraria.ID.ProjectileID.CursedSapling"/>, <see cref="F:Terraria.ID.ProjectileID.Puppy"/>, <see cref="F:Terraria.ID.ProjectileID.BabyGrinch"/>, <see cref="F:Terraria.ID.ProjectileID.ZephyrFish"/>, <see cref="F:Terraria.ID.ProjectileID.VenomSpider"/>, <see cref="F:Terraria.ID.ProjectileID.JumperSpider"/>, <see cref="F:Terraria.ID.ProjectileID.DangerousSpider"/>, <see cref="F:Terraria.ID.ProjectileID.MiniMinotaur"/>, <see cref="F:Terraria.ID.ProjectileID.BabyFaceMonster"/>, <see cref="F:Terraria.ID.ProjectileID.SugarGlider"/>, <see cref="F:Terraria.ID.ProjectileID.SharkPup"/>, <see cref="F:Terraria.ID.ProjectileID.LilHarpy"/>, <see cref="F:Terraria.ID.ProjectileID.FennecFox"/>, <see cref="F:Terraria.ID.ProjectileID.GlitteryButterfly"/>, <see cref="F:Terraria.ID.ProjectileID.BabyImp"/>, <see cref="F:Terraria.ID.ProjectileID.BabyRedPanda"/>, <see cref="F:Terraria.ID.ProjectileID.Plantero"/>, <see cref="F:Terraria.ID.ProjectileID.DynamiteKitten"/>, <see cref="F:Terraria.ID.ProjectileID.BabyWerewolf"/>, <see cref="F:Terraria.ID.ProjectileID.ShadowMimic"/>, <see cref="F:Terraria.ID.ProjectileID.VoltBunny"/>, <see cref="F:Terraria.ID.ProjectileID.KingSlimePet"/>, <see cref="F:Terraria.ID.ProjectileID.BrainOfCthulhuPet"/>, <see cref="F:Terraria.ID.ProjectileID.SkeletronPet"/>, <see cref="F:Terraria.ID.ProjectileID.QueenBeePet"/>, <see cref="F:Terraria.ID.ProjectileID.SkeletronPrimePet"/>, <see cref="F:Terraria.ID.ProjectileID.PlanteraPet"/>, <see cref="F:Terraria.ID.ProjectileID.GolemPet"/>, <see cref="F:Terraria.ID.ProjectileID.DukeFishronPet"/>, <see cref="F:Terraria.ID.ProjectileID.MoonLordPet"/>, <see cref="F:Terraria.ID.ProjectileID.EverscreamPet"/>, <see cref="F:Terraria.ID.ProjectileID.MartianPet"/>, <see cref="F:Terraria.ID.ProjectileID.DD2OgrePet"/>, <see cref="F:Terraria.ID.ProjectileID.DD2BetsyPet"/>, <see cref="F:Terraria.ID.ProjectileID.QueenSlimePet"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Beam">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.UnholyTridentFriendly"/>, <see cref="F:Terraria.ID.ProjectileID.UnholyTridentHostile"/>, <see cref="F:Terraria.ID.ProjectileID.SwordBeam"/>, <see cref="F:Terraria.ID.ProjectileID.TerraBeam"/>, <see cref="F:Terraria.ID.ProjectileID.LightBeam"/>, <see cref="F:Terraria.ID.ProjectileID.NightBeam"/>, <see cref="F:Terraria.ID.ProjectileID.EnchantedBeam"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ColdBolt">
            <summary>
            Behavior: Includes Ice Sword, Frost Hydra, Frost Bolt, and Icy Spit projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.IceBolt"/>, <see cref="F:Terraria.ID.ProjectileID.FrostBoltSword"/>, <see cref="F:Terraria.ID.ProjectileID.FrostBlastHostile"/>, <see cref="F:Terraria.ID.ProjectileID.RuneBlast"/>, <see cref="F:Terraria.ID.ProjectileID.IcewaterSpit"/>, <see cref="F:Terraria.ID.ProjectileID.FrostBlastFriendly"/>, <see cref="F:Terraria.ID.ProjectileID.FrostBoltStaff"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.GemStaffBolt">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.AmethystBolt"/>, <see cref="F:Terraria.ID.ProjectileID.TopazBolt"/>, <see cref="F:Terraria.ID.ProjectileID.SapphireBolt"/>, <see cref="F:Terraria.ID.ProjectileID.EmeraldBolt"/>, <see cref="F:Terraria.ID.ProjectileID.RubyBolt"/>, <see cref="F:Terraria.ID.ProjectileID.DiamondBolt"/>, <see cref="F:Terraria.ID.ProjectileID.CrystalPulse"/>, <see cref="F:Terraria.ID.ProjectileID.CrystalPulse2"/>, <see cref="F:Terraria.ID.ProjectileID.AmberBolt"/>, <see cref="F:Terraria.ID.ProjectileID.NebulaArcanumExplosionShot"/>, <see cref="F:Terraria.ID.ProjectileID.NebulaArcanumExplosionShotShard"/>, <see cref="F:Terraria.ID.ProjectileID.ThunderStaffShot"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Mushroom">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Mushroom"/>, <see cref="F:Terraria.ID.ProjectileID.OrnamentFriendly"/>, <see cref="F:Terraria.ID.ProjectileID.OrnamentStar"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Spray">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.PureSpray"/>, <see cref="F:Terraria.ID.ProjectileID.HallowSpray"/>, <see cref="F:Terraria.ID.ProjectileID.CorruptSpray"/>, <see cref="F:Terraria.ID.ProjectileID.MushroomSpray"/>, <see cref="F:Terraria.ID.ProjectileID.CrimsonSpray"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.BeachBall">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.BeachBall"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Flare">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Flare"/>, <see cref="F:Terraria.ID.ProjectileID.BlueFlare"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FireWork">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.RocketFireworkRed"/>, <see cref="F:Terraria.ID.ProjectileID.RocketFireworkGreen"/>, <see cref="F:Terraria.ID.ProjectileID.RocketFireworkBlue"/>, <see cref="F:Terraria.ID.ProjectileID.RocketFireworkYellow"/>, <see cref="F:Terraria.ID.ProjectileID.RocketFireworksBoxRed"/>, <see cref="F:Terraria.ID.ProjectileID.RocketFireworksBoxGreen"/>, <see cref="F:Terraria.ID.ProjectileID.RocketFireworksBoxBlue"/>, <see cref="F:Terraria.ID.ProjectileID.RocketFireworksBoxYellow"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.RopeCoil">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.RopeCoil"/>, <see cref="F:Terraria.ID.ProjectileID.VineRopeCoil"/>, <see cref="F:Terraria.ID.ProjectileID.SilkRopeCoil"/>, <see cref="F:Terraria.ID.ProjectileID.WebRopeCoil"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SmallFlying">
            <summary>
            Behavior: Includes Bee, Wasp, Tiny Eater, and Bat projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Bee"/>, <see cref="F:Terraria.ID.ProjectileID.Wasp"/>, <see cref="F:Terraria.ID.ProjectileID.TinyEater"/>, <see cref="F:Terraria.ID.ProjectileID.Bat"/>, <see cref="F:Terraria.ID.ProjectileID.GiantBee"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SpearTrap">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SpearTrap"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FlameThrower">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.FlamethrowerTrap"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MechanicalPiranha">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MechanicalPiranha"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Leaf">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Leaf"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FlowerPetal">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.FlowerPetal"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.CrystalLeaf">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.CrystalLeaf"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.CrystalLeafShot">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.CrystalLeafShot"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MoveShort">
            <summary>
            Behavior: Moves a short distance and then stops, includes Spore Cloud, Chlorophyte Orb, and Storm Spear Shot projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SporeCloud"/>, <see cref="F:Terraria.ID.ProjectileID.ChlorophyteOrb"/>, <see cref="F:Terraria.ID.ProjectileID.ThunderSpearShot"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.RainCloud">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.RainCloudMoving"/>, <see cref="F:Terraria.ID.ProjectileID.RainCloudRaining"/>, <see cref="F:Terraria.ID.ProjectileID.RainFriendly"/>, <see cref="F:Terraria.ID.ProjectileID.BloodCloudMoving"/>, <see cref="F:Terraria.ID.ProjectileID.BloodCloudRaining"/>, <see cref="F:Terraria.ID.ProjectileID.BloodRain"/>, <see cref="F:Terraria.ID.ProjectileID.RainNimbus"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Rainbow">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.RainbowFront"/>, <see cref="F:Terraria.ID.ProjectileID.RainbowBack"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MagnetSphere">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MagnetSphereBall"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Ray">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MagnetSphereBolt"/>, <see cref="F:Terraria.ID.ProjectileID.HeatRay"/>, <see cref="F:Terraria.ID.ProjectileID.ShadowBeamHostile"/>, <see cref="F:Terraria.ID.ProjectileID.ShadowBeamFriendly"/>, <see cref="F:Terraria.ID.ProjectileID.UFOLaser"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ExplosiveBunny">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.ExplosiveBunny"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Inferno">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.InfernoHostileBolt"/>, <see cref="F:Terraria.ID.ProjectileID.InfernoHostileBlast"/>, <see cref="F:Terraria.ID.ProjectileID.InfernoFriendlyBolt"/>, <see cref="F:Terraria.ID.ProjectileID.InfernoFriendlyBlast"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.LostSoul">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.LostSoulHostile"/>, <see cref="F:Terraria.ID.ProjectileID.LostSoulFriendly"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Heal">
            <summary>
            Behavior: Includes Spirit Heal from the Spectre Hood and Vampire Heal from the Vampire Knives<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SpiritHeal"/>, <see cref="F:Terraria.ID.ProjectileID.VampireHeal"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FrostHydra">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.FrostHydra"/>, <see cref="F:Terraria.ID.ProjectileID.SpiderHiver"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Raven">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Raven"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FlamingJack">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.FlamingJack"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FlamingScythe">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.FlamingScythe"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.NorthPoleSpear">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.NorthPoleSpear"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Present">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Present"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SpectreWrath">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SpectreWrath"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.WaterJet">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.WaterGun"/>, <see cref="F:Terraria.ID.ProjectileID.SlimeGun"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Bobber">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.BobberWooden"/>, <see cref="F:Terraria.ID.ProjectileID.BobberReinforced"/>, <see cref="F:Terraria.ID.ProjectileID.BobberFiberglass"/>, <see cref="F:Terraria.ID.ProjectileID.BobberFisherOfSouls"/>, <see cref="F:Terraria.ID.ProjectileID.BobberGolden"/>, <see cref="F:Terraria.ID.ProjectileID.BobberMechanics"/>, <see cref="F:Terraria.ID.ProjectileID.BobbersittingDuck"/>, <see cref="F:Terraria.ID.ProjectileID.BobberFleshcatcher"/>, <see cref="F:Terraria.ID.ProjectileID.BobberHotline"/>, <see cref="F:Terraria.ID.ProjectileID.BobberBloody"/>, <see cref="F:Terraria.ID.ProjectileID.BobberScarab"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Hornet">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Hornet"/>, <see cref="F:Terraria.ID.ProjectileID.FlyingImp"/>, <see cref="F:Terraria.ID.ProjectileID.Tempest"/>, <see cref="F:Terraria.ID.ProjectileID.UFOMinion"/>, <see cref="F:Terraria.ID.ProjectileID.StardustCellMinion"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.BabySpider">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.BabySpider"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Nado">
            <summary>
            Behavior: Includes Sharknado and Cthulunado projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Sharknado"/>, <see cref="F:Terraria.ID.ProjectileID.Cthulunado"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SharknadoBolt">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SharknadoBolt"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MiniTwins">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Retanimini"/>, <see cref="F:Terraria.ID.ProjectileID.Spazmamini"/>, <see cref="F:Terraria.ID.ProjectileID.DeadlySphere"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.CommonFollow">
            <summary>
            Behavior: Includes Mini Pirate, Crimson Heart, Companion Cube, Vampire Frog, and Desert Tiger projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.OneEyedPirate"/>, <see cref="F:Terraria.ID.ProjectileID.SoulscourgePirate"/>, <see cref="F:Terraria.ID.ProjectileID.PirateCaptain"/>, <see cref="F:Terraria.ID.ProjectileID.CrimsonHeart"/>, <see cref="F:Terraria.ID.ProjectileID.CompanionCube"/>, <see cref="F:Terraria.ID.ProjectileID.VampireFrog"/>, <see cref="F:Terraria.ID.ProjectileID.StormTigerTier1"/>, <see cref="F:Terraria.ID.ProjectileID.StormTigerTier2"/>, <see cref="F:Terraria.ID.ProjectileID.StormTigerTier3"/>, <see cref="F:Terraria.ID.ProjectileID.FlinxMinion"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MolotovCocktail">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MolotovCocktail"/>, <see cref="F:Terraria.ID.ProjectileID.Ale"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Flairon">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Flairon"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FlaironBubble">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.FlaironBubble"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Typhoon">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Typhoon"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Bubble">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Bubble"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FireWorkFountain">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.FireworkFountainYellow"/>, <see cref="F:Terraria.ID.ProjectileID.FireworkFountainRed"/>, <see cref="F:Terraria.ID.ProjectileID.FireworkFountainBlue"/>, <see cref="F:Terraria.ID.ProjectileID.FireworkFountainRainbow"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ScutlixLaser">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.ScutlixLaserFriendly"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.HeldProjectile">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.LaserMachinegun"/>, <see cref="F:Terraria.ID.ProjectileID.LaserDrill"/>, <see cref="F:Terraria.ID.ProjectileID.ChargedBlasterCannon"/>, <see cref="F:Terraria.ID.ProjectileID.Arkhalis"/>, <see cref="F:Terraria.ID.ProjectileID.PortalGun"/>, <see cref="F:Terraria.ID.ProjectileID.SolarWhipSword"/>, <see cref="F:Terraria.ID.ProjectileID.VortexBeater"/>, <see cref="F:Terraria.ID.ProjectileID.Phantasm"/>, <see cref="F:Terraria.ID.ProjectileID.LastPrism"/>, <see cref="F:Terraria.ID.ProjectileID.DD2PhoenixBow"/>, <see cref="F:Terraria.ID.ProjectileID.Celeb2Weapon"/>, <see cref="F:Terraria.ID.ProjectileID.Terragrim"/>, <see cref="F:Terraria.ID.ProjectileID.PiercingStarlight"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Crosshair">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.ScutlixLaserCrosshair"/>, <see cref="F:Terraria.ID.ProjectileID.DrillMountCrosshair"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Electrosphere">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Electrosphere"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Xenopopper">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Xenopopper"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MartianDeathRay">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SaucerDeathray"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MartianRocket">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SaucerMissile"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.InfluxWaver">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.InfluxWaver"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.PhantasmalEye">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.PhantasmalEye"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.PhantasmalSphere">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.PhantasmalSphere"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ThickLaser">
            <summary>
            Behavior: Includes Charged Laser Blaster, Stardust Laser, Last Prism, and Lunar Portal Laser projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.PhantasmalDeathray"/>, <see cref="F:Terraria.ID.ProjectileID.ChargedBlasterLaser"/>, <see cref="F:Terraria.ID.ProjectileID.StardustSoldierLaser"/>, <see cref="F:Terraria.ID.ProjectileID.LastPrismLaser"/>, <see cref="F:Terraria.ID.ProjectileID.MoonlordTurretLaser"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MoonLeech">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MoonLeech"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.IceMist">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.CultistBossIceMist"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.CursedFlameWall">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.ClingerStaff"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.LightningOrb">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.CultistBossLightningOrb"/>, <see cref="F:Terraria.ID.ProjectileID.CultistBossLightningOrbArc"/>, <see cref="F:Terraria.ID.ProjectileID.VortexLightning"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.LightningRitual">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.CultistRitual"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MagicLantern">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MagicLantern"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ShadowFlame">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.ShadowFlame"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ToxicCloud">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.ToxicCloud"/>, <see cref="F:Terraria.ID.ProjectileID.ToxicCloud2"/>, <see cref="F:Terraria.ID.ProjectileID.ToxicCloud3"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Nail">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.NailFriendly"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.CoinPortal">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.CoinPortal"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ToxicBubble">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.ToxicBubble"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.IchorSplash">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.IchorSplash"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FlyingPiggyBank">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.FlyingPiggyBank"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MysteriousTablet">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.CultistBossParticle"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Yoyo">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Code1"/>, <see cref="F:Terraria.ID.ProjectileID.WoodYoyo"/>, <see cref="F:Terraria.ID.ProjectileID.CorruptYoyo"/>, <see cref="F:Terraria.ID.ProjectileID.CrimsonYoyo"/>, <see cref="F:Terraria.ID.ProjectileID.JungleYoyo"/>, <see cref="F:Terraria.ID.ProjectileID.Cascade"/>, <see cref="F:Terraria.ID.ProjectileID.Chik"/>, <see cref="F:Terraria.ID.ProjectileID.Code2"/>, <see cref="F:Terraria.ID.ProjectileID.Rally"/>, <see cref="F:Terraria.ID.ProjectileID.Yelets"/>, <see cref="F:Terraria.ID.ProjectileID.RedsYoyo"/>, <see cref="F:Terraria.ID.ProjectileID.ValkyrieYoyo"/>, <see cref="F:Terraria.ID.ProjectileID.Amarok"/>, <see cref="F:Terraria.ID.ProjectileID.HelFire"/>, <see cref="F:Terraria.ID.ProjectileID.Kraken"/>, <see cref="F:Terraria.ID.ProjectileID.TheEyeOfCthulhu"/>, <see cref="F:Terraria.ID.ProjectileID.BlackCounterweight"/>, <see cref="F:Terraria.ID.ProjectileID.BlueCounterweight"/>, <see cref="F:Terraria.ID.ProjectileID.GreenCounterweight"/>, <see cref="F:Terraria.ID.ProjectileID.PurpleCounterweight"/>, <see cref="F:Terraria.ID.ProjectileID.RedCounterweight"/>, <see cref="F:Terraria.ID.ProjectileID.YellowCounterweight"/>, <see cref="F:Terraria.ID.ProjectileID.FormatC"/>, <see cref="F:Terraria.ID.ProjectileID.Gradient"/>, <see cref="F:Terraria.ID.ProjectileID.Valor"/>, <see cref="F:Terraria.ID.ProjectileID.Terrarian"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MedusaRay">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MedusaHead"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.HorizontalRay">
            <summary>
            Behavior: Includes Medusa Head Ray and Mechanical Cart Laser projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MedusaHeadRay"/>, <see cref="F:Terraria.ID.ProjectileID.MinecartMechLaser"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.LunarProjectile">
            <summary>
            Behavior: Includes Flow Invader, Nebular Piercer, and Nebula Eye projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.StardustJellyfishSmall"/>, <see cref="F:Terraria.ID.ProjectileID.NebulaBolt"/>, <see cref="F:Terraria.ID.ProjectileID.NebulaEye"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Starmark">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.StardustTowerMark"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.BrainofConfusion">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.BrainOfConfusion"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SporeTrap">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SporeTrap"/>, <see cref="F:Terraria.ID.ProjectileID.SporeTrap2"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SporeGas">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SporeGas"/>, <see cref="F:Terraria.ID.ProjectileID.SporeGas2"/>, <see cref="F:Terraria.ID.ProjectileID.SporeGas3"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.NebulaSphere">
            <summary>
            Behavior: Includes Desert Sprit's Curse<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.NebulaSphere"/>, <see cref="F:Terraria.ID.ProjectileID.DesertDjinnCurse"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Vortex">
            <summary>
            Behavior: Includes Blood Tears<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.VortexVortexLightning"/>, <see cref="F:Terraria.ID.ProjectileID.VortexVortexPortal"/>, <see cref="F:Terraria.ID.ProjectileID.BloodNautilusTears"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.MechanicWrench">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MechanicWrench"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.NurseSyringe">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.NurseSyringeHeal"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DryadWard">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DryadsWardCircle"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SmallProximityExplosion">
            <summary>
            Behavior: Includes Truffle Spore, Rainbow Crystal Explosion, and Dandelion Seed projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.TruffleSpore"/>, <see cref="F:Terraria.ID.ProjectileID.RainbowCrystalExplosion"/>, <see cref="F:Terraria.ID.ProjectileID.DandelionSeed"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.StickProjectile">
            <summary>
            Behavior: Includes Bone Javelin, Stardust Cell Shot, and Daybreak projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.BoneJavelin"/>, <see cref="F:Terraria.ID.ProjectileID.StardustCellMinionShot"/>, <see cref="F:Terraria.ID.ProjectileID.Daybreak"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.PortalGate">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.PortalGunGate"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.TerrarianBeam">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.TerrarianBeam"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DrakomiteFlare">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SolarFlareRay"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SolarEffect">
            <summary>
            Behavior: Includes Solar Radience and Solar Eruption Explosion projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SolarCounter"/>, <see cref="F:Terraria.ID.ProjectileID.SolarWhipSwordExplosion"/>, <see cref="F:Terraria.ID.ProjectileID.StardustGuardianExplosion"/>, <see cref="F:Terraria.ID.ProjectileID.DaybreakExplosion"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.NebulaArcanum">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.NebulaArcanum"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ArcanumSubShot">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.NebulaArcanumSubshot"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.StardustGuardian">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.StardustGuardian"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.StardustDragon">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.StardustDragon1"/>, <see cref="F:Terraria.ID.ProjectileID.StardustDragon2"/>, <see cref="F:Terraria.ID.ProjectileID.StardustDragon3"/>, <see cref="F:Terraria.ID.ProjectileID.StardustDragon4"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ReleasedEnergy">
            <summary>
            Behavior: The effect displayed when killing a Lunar Event enemy while it's respective Celestial Pillar is alive, also used by Phantasm Arrow<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.TowerDamageBolt"/>, <see cref="F:Terraria.ID.ProjectileID.PhantasmArrow"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.LunarSentry">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MoonlordTurret"/>, <see cref="F:Terraria.ID.ProjectileID.RainbowCrystal"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FloatInFrontPet">
            <summary>
            Behavior: Includes Suspicious Looking Tentacle, Suspicious Eye, Rez and Spaz, Fairy Princess, Jack 'O Lantern, and Ice Queen pets<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SuspiciousTentacle"/>, <see cref="F:Terraria.ID.ProjectileID.EyeOfCthulhuPet"/>, <see cref="F:Terraria.ID.ProjectileID.TwinsPet"/>, <see cref="F:Terraria.ID.ProjectileID.FairyQueenPet"/>, <see cref="F:Terraria.ID.ProjectileID.PumpkingPet"/>, <see cref="F:Terraria.ID.ProjectileID.IceQueenPet"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.WireKite">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.WireKite"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Geyser">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.GeyserTrap"/>, <see cref="F:Terraria.ID.ProjectileID.DD2OgreStomp"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.AncientStorm">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SandnadoFriendly"/>, <see cref="F:Terraria.ID.ProjectileID.SandnadoHostile"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.AncientStormMark">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SandnadoHostileMark"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SpiritFlame">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SpiritFlame"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DD2FlameBurst">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DD2FlameBurstTowerT1"/>, <see cref="F:Terraria.ID.ProjectileID.DD2FlameBurstTowerT2"/>, <see cref="F:Terraria.ID.ProjectileID.DD2FlameBurstTowerT3"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DD2FlameBurstShot">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DD2FlameBurstTowerT1Shot"/>, <see cref="F:Terraria.ID.ProjectileID.DD2FlameBurstTowerT2Shot"/>, <see cref="F:Terraria.ID.ProjectileID.DD2FlameBurstTowerT3Shot"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DD2GrimEnd">
            <summary>
            Behavior: Eternia Crystal destroyed<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DD2ElderWins"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DD2DarkSigil">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DD2DarkMageRaise"/>, <see cref="F:Terraria.ID.ProjectileID.DD2DarkMageHeal"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DD2Ballista">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DD2BallistraTowerT1"/>, <see cref="F:Terraria.ID.ProjectileID.DD2BallistraTowerT2"/>, <see cref="F:Terraria.ID.ProjectileID.DD2BallistraTowerT3"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.UpwardExpand">
            <summary>
            Behavior: Includes Ogre's Stomp and Geyser projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DD2OgreSmash"/>, <see cref="F:Terraria.ID.ProjectileID.QueenSlimeSmash"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DD2BetsysBreath">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DD2BetsyFlameBreath"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DD2LightningAura">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DD2LightningAuraT1"/>, <see cref="F:Terraria.ID.ProjectileID.DD2LightningAuraT2"/>, <see cref="F:Terraria.ID.ProjectileID.DD2LightningAuraT3"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DD2ExplosiveTrap">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DD2ExplosiveTrapT1"/>, <see cref="F:Terraria.ID.ProjectileID.DD2ExplosiveTrapT2"/>, <see cref="F:Terraria.ID.ProjectileID.DD2ExplosiveTrapT3"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DD2ExplosiveTrapExplosion">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DD2ExplosiveTrapT1Explosion"/>, <see cref="F:Terraria.ID.ProjectileID.DD2ExplosiveTrapT2Explosion"/>, <see cref="F:Terraria.ID.ProjectileID.DD2ExplosiveTrapT3Explosion"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SleepyOctopod">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MonkStaffT1"/>, <see cref="F:Terraria.ID.ProjectileID.MonkStaffT3"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.PoleSmash">
            <summary>
            Behavior: The effect created on use of the Sleepy Octopod<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MonkStaffT1Explosion"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ForwardStab">
            <summary>
            Behavior: Use style of the Ghastly Glaive and Sky Dragon's Fury alt1<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MonkStaffT2"/>, <see cref="F:Terraria.ID.ProjectileID.MonkStaffT3_Alt"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Ghast">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MonkStaffT2Ghast"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FloatBehindPet">
            <summary>
            Behavior: Includes the Hoardragon, Flickerwick, Estee, and Propeller Gato<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DD2PetDragon"/>, <see cref="F:Terraria.ID.ProjectileID.DD2PetGhost"/>, <see cref="F:Terraria.ID.ProjectileID.DD2PetGato"/>, <see cref="F:Terraria.ID.ProjectileID.UpbeatStar"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.WisdomWhirlwind">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DD2ApprenticeStorm"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DD2Victory">
            <summary>
            Behavior: Old One's Army defeated<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DD2Win"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.CelebrationMk2Shots">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Celeb2Rocket"/>, <see cref="F:Terraria.ID.ProjectileID.Celeb2RocketExplosive"/>, <see cref="F:Terraria.ID.ProjectileID.Celeb2RocketLarge"/>, <see cref="F:Terraria.ID.ProjectileID.Celeb2RocketExplosiveLarge"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FallingStarAnimation">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.FallingStarSpawner"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.GolfBall">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.DirtGolfBall"/>, <see cref="F:Terraria.ID.ProjectileID.GolfBallDyedBlack"/>, <see cref="F:Terraria.ID.ProjectileID.GolfBallDyedBlue"/>, <see cref="F:Terraria.ID.ProjectileID.GolfBallDyedBrown"/>, <see cref="F:Terraria.ID.ProjectileID.GolfBallDyedCyan"/>, <see cref="F:Terraria.ID.ProjectileID.GolfBallDyedGreen"/>, <see cref="F:Terraria.ID.ProjectileID.GolfBallDyedLimeGreen"/>, <see cref="F:Terraria.ID.ProjectileID.GolfBallDyedOrange"/>, <see cref="F:Terraria.ID.ProjectileID.GolfBallDyedPink"/>, <see cref="F:Terraria.ID.ProjectileID.GolfBallDyedPurple"/>, <see cref="F:Terraria.ID.ProjectileID.GolfBallDyedRed"/>, <see cref="F:Terraria.ID.ProjectileID.GolfBallDyedSkyBlue"/>, <see cref="F:Terraria.ID.ProjectileID.GolfBallDyedTeal"/>, <see cref="F:Terraria.ID.ProjectileID.GolfBallDyedViolet"/>, <see cref="F:Terraria.ID.ProjectileID.GolfBallDyedYellow"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.GolfClub">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.GolfClubHelper"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SuperStar">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SuperStar"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SuperStarBeam">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SuperStarSlash"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ToiletEffect">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.ToiletEffect"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.VoidBag">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.VoidLens"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SnakeCoil">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.MysticSnakeCoil"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Terraprisma">
            <summary>
            Behavior: Includes the Sanguine Bat<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.BatOfLight"/>, <see cref="F:Terraria.ID.ProjectileID.EmpressBlade"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.BloodThorn">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SharpTears"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Finch">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.BabyBird"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.PaperPlane">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.PaperAirplaneA"/>, <see cref="F:Terraria.ID.ProjectileID.PaperAirplaneB"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Kite">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.KiteBlue"/>, <see cref="F:Terraria.ID.ProjectileID.KiteBlueAndYellow"/>, <see cref="F:Terraria.ID.ProjectileID.KiteRed"/>, <see cref="F:Terraria.ID.ProjectileID.KiteRedAndYellow"/>, <see cref="F:Terraria.ID.ProjectileID.KiteYellow"/>, <see cref="F:Terraria.ID.ProjectileID.KiteWyvern"/>, <see cref="F:Terraria.ID.ProjectileID.KiteBoneSerpent"/>, <see cref="F:Terraria.ID.ProjectileID.KiteWorldFeeder"/>, <see cref="F:Terraria.ID.ProjectileID.KiteBunny"/>, <see cref="F:Terraria.ID.ProjectileID.KitePigron"/>, <see cref="F:Terraria.ID.ProjectileID.KiteManEater"/>, <see cref="F:Terraria.ID.ProjectileID.KiteJellyfishBlue"/>, <see cref="F:Terraria.ID.ProjectileID.KiteJellyfishPink"/>, <see cref="F:Terraria.ID.ProjectileID.KiteShark"/>, <see cref="F:Terraria.ID.ProjectileID.KiteSandShark"/>, <see cref="F:Terraria.ID.ProjectileID.KiteBunnyCorrupt"/>, <see cref="F:Terraria.ID.ProjectileID.KiteBunnyCrimson"/>, <see cref="F:Terraria.ID.ProjectileID.KiteGoldfish"/>, <see cref="F:Terraria.ID.ProjectileID.KiteAngryTrapper"/>, <see cref="F:Terraria.ID.ProjectileID.KiteKoi"/>, <see cref="F:Terraria.ID.ProjectileID.KiteCrawltipede"/>, <see cref="F:Terraria.ID.ProjectileID.KiteSpectrum"/>, <see cref="F:Terraria.ID.ProjectileID.KiteWanderingEye"/>, <see cref="F:Terraria.ID.ProjectileID.KiteUnicorn"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ShortSword">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.GladiusStab"/>, <see cref="F:Terraria.ID.ProjectileID.RulerStab"/>, <see cref="F:Terraria.ID.ProjectileID.CopperShortswordStab"/>, <see cref="F:Terraria.ID.ProjectileID.TinShortswordStab"/>, <see cref="F:Terraria.ID.ProjectileID.IronShortswordStab"/>, <see cref="F:Terraria.ID.ProjectileID.LeadShortswordStab"/>, <see cref="F:Terraria.ID.ProjectileID.SilverShortswordStab"/>, <see cref="F:Terraria.ID.ProjectileID.TungstenShortswordStab"/>, <see cref="F:Terraria.ID.ProjectileID.GoldShortswordStab"/>, <see cref="F:Terraria.ID.ProjectileID.PlatinumShortswordStab"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DesertTiger">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.WhiteTigerPounce"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Chum">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.ChumBucket"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.DesertTigerBall">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.StormTigerGem"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Whip">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.BlandWhip"/>, <see cref="F:Terraria.ID.ProjectileID.SwordWhip"/>, <see cref="F:Terraria.ID.ProjectileID.MaceWhip"/>, <see cref="F:Terraria.ID.ProjectileID.ScytheWhip"/>, <see cref="F:Terraria.ID.ProjectileID.CoolWhip"/>, <see cref="F:Terraria.ID.ProjectileID.FireWhip"/>, <see cref="F:Terraria.ID.ProjectileID.ThornWhip"/>, <see cref="F:Terraria.ID.ProjectileID.RainbowWhip"/>, <see cref="F:Terraria.ID.ProjectileID.BoneWhip"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ReleasedProjectile">
            <summary>
            Behavior: Includes Dove and Lantern projectiles<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.ReleaseDoves"/>, <see cref="F:Terraria.ID.ProjectileID.ReleaseLantern"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.StellarTune">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SparkleGuitar"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FirstFractal">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.FirstFractal"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.EnchantedDagger">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Smolstar"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FairyGlowStick">
            <summary>
            Behavior: Only used when the Fairy GlowSticks's ai[1] is greater than 0<br/>
            Used by: None
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FloatAndFly">
            <summary>
            Behavior: Includes the Prismatic Bolt and Nightglow projectiles, these float for a second and then fly toward their target<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.HallowBossRainbowStreak"/>, <see cref="F:Terraria.ID.ProjectileID.FairyQueenMagicItemShot"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SplitShotCore">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.HallowBossSplitShotCore"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.EverlastingRainbow">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.HallowBossLastingRainbow"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.WormPet">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.EaterOfWorldsPet"/>, <see cref="F:Terraria.ID.ProjectileID.DestroyerPet"/>, <see cref="F:Terraria.ID.ProjectileID.LunaticCultistPet"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.TitaniumShard">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.TitaniumStormShard"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Reaping">
            <summary>
            Behavior: The effect displayed when an enemy is hit with the Dark Harvest whip<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.ScytheWhipProj"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.CoolFlake">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.CoolWhipProj"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.FireCracker">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.FireWhipProj"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.EtherealLance">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.FairyQueenLance"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.SunDance">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.FairyQueenSunDance"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.TwilightLance">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.FairyQueenRangedItemShot"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Zenith">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.FinalFractal"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ZoologistStike">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.ZoologistStrikeGreen"/>, <see cref="F:Terraria.ID.ProjectileID.ZoologistStrikeRed"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.TorchGod">
            <summary>
            Behavior: The Torch God event, not the projectiles fired out of the torches<br/>
            Used by: <see cref="F:Terraria.ID.ProjectileID.TorchGod"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.LifeDrain">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.SoulDrain"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.PrincessWeapon">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.PrincessWeapon"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.ShadowHand">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.InsanityShadowFriendly"/>, <see cref="F:Terraria.ID.ProjectileID.InsanityShadowHostile"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.LightsBane">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.LightsBane"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Volcano">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Volcano"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.NightsEdge">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.NightsEdge"/>,<see cref="F:Terraria.ID.ProjectileID.Excalibur"/>,<see cref="F:Terraria.ID.ProjectileID.TrueExcalibur"/>,<see cref="F:Terraria.ID.ProjectileID.TerraBlade2"/>,<see cref="F:Terraria.ID.ProjectileID.TheHorsemansBlade"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.TrueNightsEdge">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.TrueNightsEdge"/>, <see cref="F:Terraria.ID.ProjectileID.TerraBlade2Shot"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.JuminoAnimation">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.JuminoStardropAnimation"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.Flamethrower">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.Flames"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.HorsemanPumpkin">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.HorsemanPumpkin"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjAIStyleID.JimsDrone">
            <summary>
            Used by: <see cref="F:Terraria.ID.ProjectileID.JimsDrone"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.CharacterPreviewAnimations">
            <summary>
            Determines the idle animation of a player's pets on the player select screen.
            <br/> Common code for these can be found in <see cref="T:Terraria.DelegateMethods.CharacterPreview"/>.
            <br/> Defaults to a new <see cref="T:Terraria.DataStructures.SettingsForCharacterPreview"/> instance, which does nothing.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.DontApplyParryDamageBuff">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile won't receive the +400% damage boost from the <see cref="F:Terraria.ID.BuffID.ParryDamageBuff"/>.
            <br/> Only applies to melee projectiles.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.IsAGravestone">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile handles player hits in a special way.
            <br/> If a projectile in this set hits a player, it's <see cref="F:Terraria.Projectile.ai"/>[0] value is used instead of <see cref="F:Terraria.Projectile.owner"/> when assigning the damage source.
            <br/> This has the effect of making the player who dropped the gravestone be responsible for any potential deaths rather than the server.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.IsAWhip">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile will use whip collision and can have flasks applied to it.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>You can adjust whip settings using <see cref="F:Terraria.Projectile.WhipSettings"/>.</remarks>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.AllowsContactDamageFromJellyfish">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile will zap the player if used to attack a zapping jellyfish. See <see cref="F:Terraria.ID.NPCID.Sets.ZappingJellyfish"/> for more info.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.ImmediatelyUpdatesNPCBuffFlags">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile will immediately update NPC buff flags (<see cref="F:Terraria.NPC.poisoned"/>, for example) on hit.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.IsAnNPCAttachedExplosive">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile is an explosive that can attach to an NPC.
            <br/> NPC-attached explosives will be killed when <see cref="M:Terraria.NPC.PopAllAttachedProjectilesAndTakeDamageForThem"/> is called.
            <br/> Used exclusively for the <see cref="F:Terraria.ID.ProjectileID.Daybreak"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
            <remarks>Check <see cref="M:Terraria.Projectile.IsAttachedTo(Terraria.NPC)"/> for the conditions in which a projectile in this set will actually explode.</remarks>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.WindPhysicsImmunity">
            <summary>
            Wind Physics is <b>completely disabled</b> and unfunctional in Terraria, but the presence of the code suggest that it might be enabled in a future update. There is no need to use WindPhysicsImmunity currently.<br/>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile will always use wind physics.
            <br/> If <see langword="false"/> for a given projectile type, then that projectile will never use wind physics.
            <br/> If <see langword="null"/> for a given projectile type, then vanilla decides if that projectile will use wind physics by checking <see cref="F:Terraria.Projectile.aiStyle"/>.
            <br/> Defaults to <see langword="null"/>.
            </summary>
            <remarks>
            Wind physics slightly slow down projectiles facing into the wind.
            <br/> Projectiles with the following AI styles will use wind physics if not blocked: <see cref="F:Terraria.ID.ProjAIStyleID.Arrow"/>, <see cref="F:Terraria.ID.ProjAIStyleID.ThrownProjectile"/>, <see cref="F:Terraria.ID.ProjAIStyleID.Bounce"/>, <see cref="F:Terraria.ID.ProjAIStyleID.FallingTile"/>, <see cref="F:Terraria.ID.ProjAIStyleID.GroundProjectile"/>, <see cref="F:Terraria.ID.ProjAIStyleID.Explosive"/>, <see cref="F:Terraria.ID.ProjAIStyleID.GraveMarker"/>, <see cref="F:Terraria.ID.ProjAIStyleID.MusicNote"/>, <see cref="F:Terraria.ID.ProjAIStyleID.CrystalShard"/>, <see cref="F:Terraria.ID.ProjAIStyleID.ColdBolt"/>, <see cref="F:Terraria.ID.ProjAIStyleID.GemStaffBolt"/>, <see cref="F:Terraria.ID.ProjAIStyleID.BeachBall"/>, <see cref="F:Terraria.ID.ProjAIStyleID.Flare"/>, <see cref="F:Terraria.ID.ProjAIStyleID.FireWork"/>, <see cref="F:Terraria.ID.ProjAIStyleID.RopeCoil"/>, <see cref="F:Terraria.ID.ProjAIStyleID.ExplosiveBunny"/>, <see cref="F:Terraria.ID.ProjAIStyleID.Bubble"/>, <see cref="F:Terraria.ID.ProjAIStyleID.Nail"/>, <see cref="F:Terraria.ID.ProjAIStyleID.IchorSplash"/>, <see cref="F:Terraria.ID.ProjAIStyleID.SporeGas"/>.
            </remarks>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.RocketsSkipDamageForPlayers">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile, despite exploding, will not deal damage to players.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.YoyosLifeTimeMultiplier">
            <summary>
            The lifetime of a yoyo projectile (<see cref="F:Terraria.ID.ProjAIStyleID.Yoyo"/>) in seconds.
            <br/> A value of <c>-1f</c> means that yoyo has an infinite lifetime.
            <br/> Defaults to <c>-1f</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.YoyosMaximumRange">
            <summary>
            The maximum distance a yoyo projectile (<see cref="F:Terraria.ID.ProjAIStyleID.Yoyo"/>) can be from its owner in pixels.
            <br/> Defaults to <c>200f</c> (12.5 tiles).
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.IsAGolfBall">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile is a kind of golf ball.
            <br/> Items that "shoot" golf balls can be placed onto tees. if one of these items is in the player's inventory or equipped, then its projectile will be preferred over the standard golf ball.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.YoyosTopSpeed">
            <summary>
            The maximum speed a yoyo projectile (<see cref="F:Terraria.ID.ProjAIStyleID.Yoyo"/>) can go in pixels per tick.
            <br/> Defaults to <c>10f</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.CanDistortWater">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile can create waves in water.
            <br/> Defaults to <see langword="true"/>.
            </summary>
            <remarks>This set only handles water. Use <see cref="F:Terraria.ID.ProjectileID.Sets.NoLiquidDistortion"/> to prevent any liquid distortion.</remarks>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.MinionShot">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile is shot by some minion.
            <br/> Used for tracking whip effects and preventing minions from cutting tiles.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.SentryShot">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile is shot by some sentry.
            <br/> Used for tracking whip effects and preventing sentries from cutting tiles.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.FallingBlockDoesNotFallThroughPlatforms">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile will not fall through platforms.
            <br/> only applies to projectiles using <see cref="F:Terraria.ID.ProjAIStyleID.FallingTile"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.ForcePlateDetection">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile can trigger <see cref="F:Terraria.ID.TileID.ProjectilePressurePad"/>s.
            <br/> If <see langword="false"/> for a given projectile type, then that projectile cannot trigger <see cref="F:Terraria.ID.TileID.ProjectilePressurePad"/>s.
            <br/> If <see langword="null"/> for a given projectile type, then that projectile can trigger <see cref="F:Terraria.ID.TileID.ProjectilePressurePad"/>s if <see cref="F:Terraria.Projectile.tileCollide"/> is <see langword="true"/>.
            <br/> Defaults to <see langword="null"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.TrailingMode">
            <summary>
            Determines what data will be remembered for projectile trails. Each projectile type defaults to -1, meaning no information is saved. Use values of 0 or 2 most of the time.<br/>0: only position data is remembered.<br/>1: should not be used.<br/>2: position, rotation, and spriteDirection data is remembered<br/>3: same as 2, but attempts to smooth out old data by interpolating values<br/>4: same as 2, but adjusts old data to follow the player owner.
            <br/>Must be used with <see cref="F:Terraria.ID.ProjectileID.Sets.TrailCacheLength"/>, <see cref="F:Terraria.Projectile.oldPos"/>, <see cref="F:Terraria.Projectile.oldRot"/>, <see cref="F:Terraria.Projectile.oldSpriteDirection"/> to be used properly. 
            <br/>Refer to <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/Projectiles/ExampleBullet.cs">ExampleBullet.cs</see> in ExampleMod for sample usage.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.TrailCacheLength">
            <summary>
            The length of the trail to store. Each projectile type defaults to 10. Use for drawing trails. Must be used with <see cref="F:Terraria.ID.ProjectileID.Sets.TrailingMode"/> to be used properly. 
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.LightPet">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile is a light pet.
            <br/> Items that summon light pets can be equipped in the light pet slot, and light pets are dyed according to their owner's <see cref="F:Terraria.Player.cLight"/> shader.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.HeldProjDoesNotUsePlayerGfxOffY">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile will not be visually offset by <see cref="F:Terraria.Player.gfxOffY"/>.
            <br/> Set to true for held projectiles that are already accounting for <see cref="F:Terraria.Player.gfxOffY"/> in their position. If the held projectile doesn't follow the players position, then set to true.
            <br/> Used in vanilla for flails.
            <br/> Defaults to <see langword="false"/>,
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.DontCancelChannelOnKill">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile will not call <see cref="M:Terraria.Player.TryCancelChannel(Terraria.Projectile)"/> when it dies.
            <br/> Used in vanilla for the Piranha Gun.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.CultistIsResistantTo">
            <summary>
            Indicates that the Lunatic Cultist takes 75% damage from this projectile. All projectiles in this set are homing projectiles, so this set can be seen as an indicator that this projectile homes in on the target. Use this set in <see cref="M:Terraria.ModLoader.ModNPC.ModifyHitByProjectile(Terraria.Projectile,Terraria.NPC.HitModifiers@)"/> and adjust the <c>damage</c> parameter to implement a similar penalty for homing projectiles.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.IsADD2Turret">
            <summary>
            Iff <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile is counted as a DD2 turret.
            <br/> Items that create DD2 turrets cannot be used before the Old One's Army is cleared at least once, but can be infinitely used during the event for 20 Etherian Mana.
            <br/> All DD2 turrets are cleared when the Old One's Army ends.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.TurretFeature">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then any item that shoots that projectile will have an alt. use function to clear all projectiles the using player owns that are in this set.
            <br/> Unused in vanilla.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.MinionTargettingFeature">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then any item that shoots that projectile can be right-clicked to force minion targeting.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.MinionSacrificable">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then other minions will be sacrificed to make room to summon this minion.
            <br/> Used for all standard minions.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.DontAttachHideToAlpha">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile will always draw using the lighting color at its center, even if <see cref="F:Terraria.Projectile.hide"/> is <see langword="true"/>. If not in this set, these projectiles would use the lighting color at their owner's center.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.ExtendedCanHitCheckSearch">
            <summary>
            A <see cref="T:Terraria.WorldBuilding.GenSearch"/> to use when checking for collisions, in addition to standard hitbox checks.
            <br/> Defaults to <see langword="null"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.ExtendedCanHitCheckRange">
            <summary>
            If non-zero, then the given projectile type (<see cref="F:Terraria.Projectile.type"/>) will check for collisions that many pixels above itself and its target if it doesn't directly collide.
            <br/> For example, a value of <c>48f</c> allow a hit if there was an empty line from 48 pixels above the projectile's <see cref="P:Terraria.Entity.Top"/> to 48 pixels above the target's Top.
            <br/> Defaults to <c>0f</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.IsARocketThatDealsDoubleDamageToPrimaryEnemy">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile will deal double damage as long as <c><see cref="F:Terraria.Projectile.timeLeft"/> &gt; 3</c>.
            <br/> Defauls to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.IsAMineThatDealsTripleDamageWhenStationary">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile will deal triple damage when moving less than 0.5 pixels per tick.
            <br/> Defauls to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.NoLiquidDistortion">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile will never distort liquids.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.DismountsPlayersOnHit">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile will forcibly dismount any player it hits
            <br/> Used in vanilla for the jousting lances.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.NoMeleeSpeedVelocityScaling">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then its velocity will not scale with the player's melee speed.
            <br/> Useful for melee projectiles (shortswords, lances, etc.) that use velocity as an offset from the player.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.DrawScreenCheckFluff">
            <summary>
            The distance off-screen, in pixels, that projectiles of the given projectile type (<see cref="F:Terraria.Projectile.type"/>) can be whilst still drawing.
            <br/> Useful for projectiles with drawn effects much larger than their hitbox.
            <br/> Defaults to <c>480</c> (30 tiles).
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.CanHitPastShimmer">
            <summary>
            If <see langword="true"/> for a given projectile type (<see cref="F:Terraria.Projectile.type"/>), then that projectile can hit players submerged in shimmer.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.SingleGrappleHook">
            <summary>
            Set of Grapple Hook Projectile IDs that determines whether or not said projectile can only have one copy of it within the world per player.
            </summary>
        </member>
        <member name="F:Terraria.ID.ProjectileID.Sets.SummonTagDamageMultiplier">
            <summary>
            Used to scale down summon tag damage for fast hitting minions and sentries. 
            </summary>
        </member>
        <member name="T:Terraria.ID.RecipeGroupID">
            <summary>
            Contains recipe group ids suitable for use in <see cref="M:Terraria.Recipe.AddRecipeGroup(System.Int32,System.Int32)"/>.
            <br/> Note that FishForDinner and GoldenCritter are actually unused and won't work. Also note that the ID values shown are incorrect.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.IceSkateSlippery">
            <summary>
            If <see langword="true"/> for a given tile type (<see cref="P:Terraria.Tile.TileType"/>), then players will slip on that tile.
            <br/> If players have Ice Skates (<see cref="F:Terraria.Player.iceSkate"/>) equipped, however, they will be much faster on this tile.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.DontDrawTileSliced">
            <summary>
            Set to true to prevent this tile from drawing with more detailed lighting, if the user is using a detailed lighting mode. If true, a single lighting value will be used to draw this tile instead of drawing the tile in 9 sections with different interpolated lighting values. <see cref="F:Terraria.ID.TileID.Traps"/> and <see cref="F:Terraria.ID.TileID.Boulder"/> are examples of tiles that use this. This is only relevant for tiles set as <see cref="F:Terraria.Main.tileSolid"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.AllowsSaveCompressionBatching">
            <summary>
            If <see langword="true"/> for a given tile type (<see cref="P:Terraria.Tile.TileType"/>), then that tile can be compressed when syncing or saving the world.
            <br/> Defaults to <see langword="true"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.CountsAsGemTree">
            <summary>
            If <see langword="true"/> for a given tile type (<see cref="P:Terraria.Tile.TileType"/>), then that tile is categorized as a Gem Tree.
            <br/> Vanilla only uses this for displaying a special message when using Lucy the Axe.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.IsATreeTrunk">
            <summary>
            If <see langword="true"/> for a given tile type (<see cref="P:Terraria.Tile.TileType"/>), then that tile is categorized as a tree trunk.
            <br/> Tree trunks are a type of tile anchor (<see cref="F:Terraria.Enums.AnchorType.Tree"/>), targettable by axes, and are replanted when using the <see cref="F:Terraria.ID.ItemID.AcornAxe"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.IsShakeable">
            <summary>
            If <see langword="true"/> for a given tile type (<see cref="P:Terraria.Tile.TileType"/>), then that tile can be shaken on hit.
            <br/> <strong>This set only applies to trees.</strong>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.PreventsTileRemovalIfOnTopOfIt">
            <summary>
            Prevents a tile immediately below a tile of this type from being mineable.
            <br/> Use <see cref="M:Terraria.ModLoader.ModTile.KillTile(System.Int32,System.Int32,System.Boolean@,System.Boolean@,System.Boolean@)"/> or <see cref="M:Terraria.ModLoader.GlobalTile.KillTile(System.Int32,System.Int32,System.Int32,System.Boolean@,System.Boolean@,System.Boolean@)"/> to dynamically prevent tile removal for situations with more complex logic. Note that block swap will still work.
            <br/> To affect tile replace behavior in a similar manner, see <see cref="F:Terraria.ID.TileID.Sets.PreventsTileReplaceIfOnTopOfIt"/>
            <br/> Used mostly by demon altar, trees, and item display tiles (Mannequin, Hat Rack).
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.PreventsTileReplaceIfOnTopOfIt">
            <summary>
            Prevents a tile immediately below a tile of this type from being replaceable via the block swap feature.
            <br/> Use <see cref="M:Terraria.ModLoader.ModTile.CanReplace(System.Int32,System.Int32,System.Int32)"/> or <see cref="M:Terraria.ModLoader.GlobalTile.CanReplace(System.Int32,System.Int32,System.Int32,System.Int32)"/> to dynamically prevent tile replacement for situations with more complex logic.
            <br/> To affect tile mining behavior in a similar manner, see <see cref="F:Terraria.ID.TileID.Sets.PreventsTileRemovalIfOnTopOfIt"/>
            <br/> Used mostly by trees tiles.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.AllBlocksWithSmoothBordersToResolveHalfBlockIssue">
            <summary>
            If <see langword="true"/> for a given tile type (<see cref="P:Terraria.Tile.TileType"/>), then that tile has smooth borders and is drawn differently when hammered to be a half-block.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.CanBeDugByShovel">
            <summary>
            If <see langword="true"/> for a given tile type (<see cref="P:Terraria.Tile.TileType"/>), then that tile can be mined using a shovel.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.DoesntPlaceWithTileReplacement">
            <summary>
            Indicates that this tile can't replace another tile via the block swap feature.
            <br/> Use <see cref="M:Terraria.ModLoader.ModTile.CanReplace(System.Int32,System.Int32,System.Int32)"/> or <see cref="M:Terraria.ModLoader.GlobalTile.CanReplace(System.Int32,System.Int32,System.Int32,System.Int32)"/> to dynamically prevent tile replacement for situations with more complex logic.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.DoesntGetReplacedWithTileReplacement">
            <summary>
            Indicates that this tile can't be replaced with another tile via the block swap feature.
            <br/> Use <see cref="M:Terraria.ModLoader.ModTile.CanReplace(System.Int32,System.Int32,System.Int32)"/> or <see cref="M:Terraria.ModLoader.GlobalTile.CanReplace(System.Int32,System.Int32,System.Int32,System.Int32)"/> to dynamically prevent tile replacement for situations with more complex logic.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.ConveyorDirection">
            <summary>
            If <c>!= 0</c> for a given tile type (<see cref="P:Terraria.Tile.TileType"/>), then that tile functions as a conveyor belt.
            <br/> A positive value pushes entities to the right, and a negative value to the left. The actual value does not matter, only the sign.
            <br/> Defaults to <c>0</c>.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.IgnoresNearbyHalfbricksWhenDrawn">
            <summary>
            Set to true to prevent this tile from being drawn slightly warped to fit with nearby half bricks. Tiles such as <see cref="F:Terraria.ID.TileID.Traps"/> and <see cref="F:Terraria.ID.TileID.PlanterBox"/> use this. This is only relevant for tiles set as <see cref="F:Terraria.Main.tileSolid"/> and not <see cref="F:Terraria.ID.TileID.Sets.NotReallySolid"/>. 
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.HasOutlines">
            <summary>
            Indicates that this tile has an outline texture to be drawn to indicate that it is interactable. If set to true for a modded tile, <see cref="P:Terraria.ModLoader.ModTile.HighlightTexture"/> will be used to autoload the highlight texture and must exist for the mod to load.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.Suffocate">
            <summary>
            If true, the tile will apply the <see cref="F:Terraria.ID.BuffID.Suffocation"/> buff if the player is overlapping the tiles. Used by sand tiles.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.TouchDamageHot">
            <summary>
            Applies the <see cref="F:Terraria.ID.BuffID.Burning"/> buff to any player touching the tile without <see cref="F:Terraria.Player.fireWalk"/>. Used by <see cref="F:Terraria.ID.TileID.Meteorite"/>, <see cref="F:Terraria.ID.TileID.Hellstone"/>, <see cref="F:Terraria.ID.TileID.HellstoneBrick"/>, <see cref="F:Terraria.ID.TileID.CrispyHoneyBlock"/>, and <see cref="F:Terraria.ID.TileID.AncientHellstoneBrick"/>
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.TouchDamageBleeding">
            <summary>
            Applies the <see cref="F:Terraria.ID.BuffID.Bleeding"/> buff to any player touching the tile. The duration is random from 4 to 10 seconds. Used by <see cref="F:Terraria.ID.TileID.Spikes"/> and <see cref="F:Terraria.ID.TileID.WoodenSpikes"/>. Used in conjunction with <see cref="F:Terraria.ID.TileID.Sets.TouchDamageImmediate"/> to deal damage on contact.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.TouchDamageImmediate">
            <summary>
            Deals the provided amount of damage to any player in contact with the tile. Used by cactus, thorn, and spike tiles.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.BlockMergesWithMergeAllBlock">
            <summary>
            Set to true automatically for all tiles that are <see cref="F:Terraria.Main.tileSolid"/> and not <see cref="F:Terraria.Main.tileSolidTop"/>. These tiles will merge with other tiles that are <see cref="F:Terraria.Main.tileBlendAll"/>.
            <br/>You can force a value to be assigned using <see cref="F:Terraria.ID.TileID.Sets.BlockMergesWithMergeAllBlockOverride"/> in <see cref="M:Terraria.ModLoader.ModType.SetStaticDefaults"/>, as this is set is populated afterwards, ignoring edits to it.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.Ore">
            <summary>
            Indicates that the tile is an ore. Used in worldgen code for various purposes and by Fairies.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.IsMultitile">
            <summary> Tiles within this set are multi-tiles that don't have a TileObjectData. This is only used to prevent TileLoader.Drop from being called multiple times when breaking these tiles, as might be expected. Trees and Cactus are not included in this, since each of those tiles drop items. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.CanBeClearedDuringOreRunner">
            <summary> Tiles within this set are allowed to be replaced by generating ore. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.CanBeSloped">
            <summary> Allows non-solid tiles to be sloped (solid tiles can always be sloped, regardless of this set). </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.IgnoredByNpcStepUp">
            <summary>
            Whether or not the tile will be ignored for automatic step up regarding town NPC collision.
            <br>Only checked when <see cref="M:Terraria.Collision.StepUp(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Int32,System.Int32,System.Single@,System.Single@,System.Int32,System.Boolean,System.Int32)"/> with specialChecksMode set to 1 is called</br>
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.DisableSmartCursor">
            <summary> Whether or not the smart cursor function is disabled when the cursor hovers above this tile. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.DisableSmartInteract">
            <summary> Whether or not the smart tile interaction function is disabled when the cursor hovers above this tile. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.IsValidSpawnPoint">
            <summary> Whether or not this tile is a valid spawn point. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.Torch">
            <summary> Whether or not this tile behaves like a torch. If you are making a torch tile, then setting this to true is necessary in order for tile placement, tile framing, and the item's smart selection to work properly. Each item that places torch tiles should also set <see cref="F:Terraria.ID.ItemID.Sets.Torches"/>.</summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.Campfire">
            <summary> Whether or not this tile behaves like a campfire. Campfires must be 3x2 and need to follow the vanilla layout with the on state being at the top of the texture. Padding must also be present in the same manner, resulting in a 54x36 section for each style. The animation, however, can be done with a separate flame texture if desired. <br/>
            Necessary for block swap and Marshmallow on a Stick features.</summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.Clock">
            <summary> Whether or not this tile is a clock. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.TreeSapling">
            <summary> Whether or not this tile is a sapling, which can grow into a tree based on the soil it's placed on. Be sure to set <see cref="F:Terraria.ID.TileID.Sets.CommonSapling"/> with this too. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.CountsAsWaterSource">
            <summary> Whether or not this tile counts as a water source for crafting purposes. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.CountsAsHoneySource">
            <summary> Whether or not this tile counts as a honey source for crafting purposes. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.CountsAsLavaSource">
            <summary> Whether or not this tile counts as a lava source for crafting purposes. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.CountsAsShimmerSource">
            <summary> Whether or not this tile counts as a shimmer source for crafting purposes. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.IgnoredByGrowingSaplings">
            <summary> Whether or not saplings count this tile as empty when trying to grow. </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.AvoidedByMeteorLanding">
            <summary> Whether or not this tile prevents a meteor from landing near it.</summary>
            <remarks> Note: Chests and Dungeon tiles are not in this set, but also prevent landing (handled through <see cref="F:Terraria.ID.TileID.Sets.BasicChest"/> and <see cref="F:Terraria.Main.tileDungeon"/>)</remarks>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.PreventsSandfall">
            <summary>
            Whether or not this tile will prevent sand/slush from falling beneath it.
            </summary>
            <remarks>
            Note: This Set does not include the values within the Sets <seealso cref="F:Terraria.ID.TileID.Sets.BasicChest"/>, <seealso cref="F:Terraria.ID.TileID.Sets.BasicChestFake"/>,
            and <seealso cref="F:Terraria.ID.TileID.Sets.BasicDresser"/>, but Tile IDs within those sets will also prevent sandfall.
            </remarks>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.CountsAsPylon">
            <summary>
            What tiles count as Pylons, which allow the player to teleport to any other valid Pylons on the map.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.WallsMergeWith">
            <summary>
            Tiles that are interpreted as a wall by nearby walls during framing, causing them to frame as if merging with this adjacent tile. Prevents wall from drawing within bounds for transparant tiles.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.BlockMergesWithMergeAllBlockOverride">
            <summary>
            The value a tile forces to be set for <see cref="F:Terraria.ID.TileID.Sets.BlockMergesWithMergeAllBlock"/> regardless of default conditions (see its documentation). null by default.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.CorruptBiome">
            New created sets to facilitate vanilla biome block counting including modded blocks. To replace the current hardcoded counts in SceneMetrics.cs
        </member>
        <member name="F:Terraria.ID.TileID.Sets.OpenDoorID">
            <summary>
            The ID of the tile that a given closed door transforms into when it becomes OPENED. Defaults to -1, which means said tile isn't a closed door.
            </summary>
        </member>
        <member name="F:Terraria.ID.TileID.Sets.CloseDoorID">
            <summary>
            The ID of the tile that a given open door transforms into when it becomes CLOSED. Defaults to -1, which means said tile isn't an open door.
            </summary>
        </member>
        <member name="M:Terraria.ID.TileID.Sets.AddCrimsonTile(System.UInt16,System.Int32)">
            Functions to simplify modders adding a tile to the crimson, corruption, or jungle regardless of a remix world or not. Can still add manually as needed.
        </member>
        <member name="F:Terraria.Item.CommonMaxStack">
            <summary>
            The default stack size for stackable items: 9999
            </summary>
        </member>
        <member name="F:Terraria.Item.cachedItemSpawnsByType">
            <summary>
            The number of cached item spawns by type.<br/>
            A value of -1 means that an item type is not being cached.<br/>
            See <see cref="M:Terraria.Item.StartCachingType(System.Int32)"/> and <see cref= "M:Terraria.Item.DropCache(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Boolean)" /> for more info.<br/>
            Indexed by <see cref="F:Terraria.Item.type"/>.Defaults to -1.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.potionDelay">
            <summary>
            The default cooldown, in ticks, of most healing items.<br/>
            This value is never changed. For creating a Philosopher's Stone-like item, see <see cref="F:Terraria.Player.pStone"/> or <see cref="F:Terraria.Player.potionDelayTime"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.restorationDelay">
            <summary>
            The default cooldown, in ticks, of Restoration Potions.<br/>
            This value is never changed. For creating a Philosopher's Stone-like item, see <see cref="F:Terraria.Player.pStone"/> or <see cref="F:Terraria.Player.restorationDelayTime"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.mushroomDelay">
            <summary>
            The default cooldown, in ticks, of Mushrooms.<br/>
            This value is never changed. For creating a Philosopher's Stone-like item, see <see cref="F:Terraria.Player.pStone"/> or <see cref="F:Terraria.Player.mushroomDelayTime"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.questItem">
            <summary>
            If true, categorizes the given item as a quest fish.<br/>
            Quest fish get a special tooltip, their own category in the Research Menu, and cannot be auto-moved to the Void Vault when picked up.<br/>
            If you'd like to make a quest fish, see <see cref="M:Terraria.Item.DefaultToQuestFish"/>.<br/>
            If you'd just like to emulate the one-per-inventory behavior of quest fish, see <see cref="F:Terraria.Item.uniqueStack"/>.<br/>
            Defaults to <see langword="false"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.headType">
            <summary>
            An array for converting an <see cref="F:Terraria.Item.headSlot"/> value into a <see cref="F:Terraria.Item.type"/> value.<br/>
            Indexed by <see cref="F:Terraria.Item.headSlot"/>. Defaults to 0.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.bodyType">
            <summary>
            An array for converting an <see cref="F:Terraria.Item.bodySlot"/> value into a <see cref="F:Terraria.Item.type"/> value.<br/>
            Indexed by <see cref="F:Terraria.Item.bodySlot"/>. Defaults to 0.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.legType">
            <summary>
            An array for converting an <see cref="F:Terraria.Item.legSlot"/> value into a <see cref="F:Terraria.Item.type"/> value.<br/>
            Indexed by <see cref="F:Terraria.Item.legSlot"/>. Defaults to 0.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.staff">
            <summary>
            If true, categorizes the given item type as a staff.<br/>
            Staffs are held differently when their <see cref="F:Terraria.Item.useStyle"/> is <see cref="F:Terraria.ID.ItemUseStyleID.Shoot"/>, but are otherwise no different than any other item.<br/>
            Indexed by <see cref="F:Terraria.Item.type"/>. Defaults to <see langword="false"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.claw">
            <summary>
            If true, categorizes the given item type as a claw.<br/>
            Claws are held differently when their <see cref="F:Terraria.Item.useStyle"/> is <see cref="F:Terraria.ID.ItemUseStyleID.Swing"/>, but are otherwise no different than any other item.<br/>
            Used exclusively by the Bladed Glove in vanilla.<br/>
            Indexed by <see cref="F:Terraria.Item.type"/>. Defaults to <see langword="false"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.flame">
            <summary>
            If true, will cause the corresponding flame texture to be drawn while this item is held. Used for torches, candles, .
            <br/> Modded items should make a texture file postfixed by "_Flame" to autoload the flame texture. For example, ExampleTorch in ExampleMod has both ExampleTorch.png and ExampleTorch_Flame.png.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Item.mech">
            <summary>
            If true, then the given item will show all placed wires and actuators when held.<br/>
            This item will also be grouped with other items with <c>mech</c> set to <see langword="true"/> when the inventory is sorted.<br/>
            Defaults to <see langword="false"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.noGrabDelay">
            <summary>
            The delay, in ticks, before players can pick up this item.<br/>
            Usually set to 100 (approximately 1.666... seconds) whenever an item is dropped.<br/>
            Set to 0 whenever an item drops from a projectile.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.beingGrabbed">
            <summary>
            If true, then this item is currently being grabbed by a player.<br/>
            Items being grabbed by the player cannot combine with nearby items, be picked up by enemies, burn in lava, or despawn.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.timeSinceItemSpawned">
            <summary>
            A value that increases every tick an item is in the world.<br/>
            Defaults to the value in <see cref="F:Terraria.ID.ItemID.Sets.OverflowProtectionTimeOffset"/> when an item is created, and increases by <see cref="F:Terraria.ID.ItemID.Sets.ItemSpawnDecaySpeed"/> every tick.<br/>
            When creating new items, items with a high <c>timeSinceItemSpawned</c> value will be replaced if no empty item slots are available.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.tileWand">
            <summary>
            The numerical ID of the item this item consumes when used.<br/>
            If greater than 0, this item cannot be used unless the player has the item type <c>tileWand</c> is set to. The item also gains a counter for said item type.<br/>
            Defaults to -1.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.wornArmor">
            <summary>
            If true, then this item is in the local player's armor slots.<br/>
            This causes the item to gain the set bonus tooltip if <see cref="F:Terraria.Player.setBonus"/> isn't an empty string.<br/>
            Defaults to <see langword="false"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.tooltipContext">
            <summary>
            The context in which this item's tooltip is being drawn.<br/>
            See <see cref="T:Terraria.UI.ItemSlot.Context"/> for more details.<br/>
            Defaults to -1.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.dye">
            <summary>
            The numerical ID of the armor shader in <see cref="F:Terraria.Graphics.Shaders.GameShaders.Armor"/> this item activates when worn in a dye slot.<br/>
            If greater than 0, then this item can be equipped into dye slots.<br/>
            Defaults to 0.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.fishingPole">
            <summary>
            The numerical value this item adds to a player's fishing skill when held.<br/>
            If greater than 0, categorizes this item as a fishing pole.<br/>
            Fishing poles can be placed into weapon racks, have a counter for the bait the player is carrying, and are held out when a bobber is active.<br/>
            Defaults to 0.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.bait">
            <summary>
            The numerical value this item adds to a player's fishing skill when used as bait.<br/>
            If greater than 0, categorizes this item as bait.<br/>
            Bait can be put into ammo slots and is consumed when fishing.<br/>
            The higher the value of <c>bait</c>, the lower the chance the bait is consumed.<br/>
            Defaults to 0.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.coinGrabRange">
            <summary>
            The additional distance, in pixels, that coins may be grabbed from if the player has the Gold Ring or its upgrades (<see cref="F:Terraria.Player.goldRing"/>).<br/>
            Applies to <see cref="F:Terraria.ID.ItemID.CopperCoin"/>, <see cref="F:Terraria.ID.ItemID.SilverCoin"/>, <see cref="F:Terraria.ID.ItemID.GoldCoin"/>, and <see cref="F:Terraria.ID.ItemID.PlatinumCoin"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.manaGrabRange">
            <summary>
            The additional distance, in pixels, that mana stars may be grabbed from if the player has the Celestial Magnet or its upgrades (<see cref="F:Terraria.Player.manaMagnet"/>).<br/>
            Applies to <see cref="F:Terraria.ID.ItemID.Star"/>, <see cref="F:Terraria.ID.ItemID.SoulCake"/>, and <see cref="F:Terraria.ID.ItemID.SugarPlum"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.lifeGrabRange">
            <summary>
            The additional distance, in pixels, that mana stars may be grabbed from if the player has consumed a Heartreach Potion (<see cref="F:Terraria.Player.lifeMagnet"/>).<br/>
            Applies to <see cref="F:Terraria.ID.ItemID.Heart"/>, <see cref="F:Terraria.ID.ItemID.CandyApple"/>, and <see cref="F:Terraria.ID.ItemID.CandyCane"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.treasureGrabRange">
            <summary>
            The additional distance, in pixels, that items may be grabbed from if the player has equipped a Treasure Magnet (<see cref="F:Terraria.Player.treasureMagnet"/>).<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.makeNPC">
            <summary>
            The numerical ID of the NPC that this item creates when used.<br/>
            Mainly used for caught critters as items so that they can be released into the world.
            </summary>
        </member>
        <member name="F:Terraria.Item.expertOnly">
            <summary>
            If true, then the given item's effects only function in Expert Mode or higher (<see cref="P:Terraria.Main.expertMode"/>).<br/>
            Specifically, any equipped, Expert-only accessory will not update, any Expert-only minecart will not be used when riding minecart tracks, and an 'X' will be drawn over the item when equipped.<br/>
            Unused in vanilla.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.expert">
            <summary>
            If true, then the given item is automatically given the Expert rarity, causing its name to be drawn in rainbow text.<br/>
            It also adds the "Expert" tooltip. To use the Expert rarity without adding this tooltip, see <see cref="F:Terraria.ID.ItemRarityID.Expert"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.masterOnly">
            <summary>
            If true, then the given item's effects only function in Master Mode or higher (<see cref="P:Terraria.Main.masterMode"/>).<br/>
            Specifically, any equipped, Master-only accessory will not update, any Master-only minecart will not be used when riding minecart tracks, and an 'X' will be drawn over the item when equipped.<br/>
            Unused in vanilla.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.master">
            <summary>
            If true, then the given item is automatically given the Master rarity, causing its name to be drawn in red-orange text.<br/>
            It also adds the "Master" tooltip. To use the Master rarity without adding this tooltip, see <see cref="F:Terraria.ID.ItemRarityID.Master"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.isAShopItem">
            <summary>
            If true, then the given item is being sold in a shop.<br/>
            Shop items display their price. See <see cref="F:Terraria.Item.value"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.hairDye">
            <summary>
            The numerical ID of the hair shader in <see cref="F:Terraria.Graphics.Shaders.GameShaders.Hair"/> this item will apply to the player when used.<br/>
            If greater than -1, then this item is a hair dye.<br/>
            Defaults to -1.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.paint">
            <summary>
            The numerical ID of the paint applied by this item when used with a paint brush or paint roller.<br/>
            For conversion into a shader index, see <see cref="M:Terraria.Main.ConvertPaintIdToTileShaderIndex(System.Int32,System.Boolean,System.Boolean)"/>.<br/>
            For more details regarding paint, see <see cref="P:Terraria.Tile.TileColor"/> and <see cref="P:Terraria.Tile.WallColor"/>.<br/>
            Defaults to 0.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.instanced">
            <summary>
            If true, then the given item is instanced per-client.<br/>
            Instanced items only appear on the client they were spawned on and are less likely to be replaced if a new item is spawned.<br/>
            Instanced items do not exist on servers.<br/>
            Vanilla uses this field for treasure bags and Defender Medals. tModLoader automatically handles this for modded treasure bags.<br/>
            If you would like to make an instanced item, see any one of the following for examples:<br/>
            - <see cref="M:Terraria.NPC.DropItemInstanced(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Boolean)"/><br/>
            - <see cref="M:Terraria.GameContent.ItemDropRules.CommonCode.DropItemLocalPerClientAndSetNPCMoneyTo0(Terraria.NPC,System.Int32,System.Int32,System.Boolean)"/><br/>
            - <see cref="F:Terraria.ID.MessageID.InstancedItem"/><br/>
            Defaults to false.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.type">
            <summary>
            The Item ID of this item. The Item ID is a unique number assigned to each Item loaded into the game. This will be equal to either an <see cref="T:Terraria.ID.ItemID"/> entry or <see cref="M:Terraria.ModLoader.ModContent.ItemType``1"/>, for example <see cref="F:Terraria.ID.ItemID.IronskinPotion"/> or ModContent.ItemType&lt;MyModItem&gt;(). To check if an Item instance is a specific Item, check <c>Item.type == ItemID.VanillaItemHere</c> or <c>Item.type == ModContent.ItemType&lt;ModdedItemHere&gt;()</c> in an <see langword="if"/> statement. 
            </summary>
        </member>
        <member name="F:Terraria.Item.favorited">
            <summary>
            If true, then the given item is favorited.<br/>
            Favorited items cannot be dropped, automatically moved into chests, placed in any kind of item rack, sold, trashed, or sorted.<br/>
            Favorited items can still be dropped if the player has no inventory space and will still drop on death on Mediumcore or higher difficulties.<br/>
            An item becomes unfavorited if removed from the player's inventory, including if the item is move to any equipment slot.<br/>
            Defaults to <see langword="false"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.holdStyle">
            <summary>
            Assign to an <see cref="T:Terraria.ID.ItemHoldStyleID"/> value to give this item a specific animation while the player is not using the item, but the item is currently selected. Leave as 0 and use <see cref="M:Terraria.ModLoader.ModItem.HoldStyle(Terraria.Player,Microsoft.Xna.Framework.Rectangle)"/> hook to implement a custom animation.
            <br/> Defaults to <see cref="F:Terraria.ID.ItemHoldStyleID.None"/>.
            </summary>
        </member>
        <member name="F:Terraria.Item.useStyle">
            <summary>
            Assign to an <see cref="T:Terraria.ID.ItemUseStyleID"/> value to give this item a specific animation while in use. Leave as 0 and use <see cref="M:Terraria.ModLoader.ModItem.UseStyle(Terraria.Player,Microsoft.Xna.Framework.Rectangle)"/> hook to implement a custom animation.
            <br/> Defaults to <see cref="F:Terraria.ID.ItemUseStyleID.None"/>.
            </summary>
        </member>
        <member name="F:Terraria.Item.channel">
            <summary>
            Used for items that have special behavior when the attack button is held.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Item.accessory">
            <summary>
            Whether the item is an accessory.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Item.useAnimation">
            <summary>
            The time span of the using animation for the item in ticks. This is independent of the time it takes for the item to actually be used and potentially autoReused again. For weapons it is recommended to be the same as <see cref="F:Terraria.Item.useTime"/> as this is only the animation.
            <br/> Blocks use 15. Default value is 100. Terraria runs at 60 frames per second, so 15 is 1/4th of a second.
            </summary>
        </member>
        <member name="F:Terraria.Item.useTime">
            <summary>
            The time span of using the item in ticks. This is independent of the time it takes for the item animation to finish. 
            <br/> Blocks use 10. Default value is 100.
            <br/> Weapons usually have equal <see cref="F:Terraria.Item.useAnimation"/> and useTime, unequal values for these two results in multiple attacks per click. See <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/Items/Weapons/ExampleGun.cs#L105">ExampleGun.cs's Clockwork Assault Rifle example</see> for an example of that.
            </summary>
        </member>
        <member name="F:Terraria.Item.stack">
            <summary>
            The current stack of the item. <see cref="F:Terraria.Item.maxStack"/> indicates the max possible stack.
            </summary>
        </member>
        <member name="F:Terraria.Item.maxStack">
            <summary>
            The maximum number of items that can be contained within a single stack. <see cref="F:Terraria.Item.stack"/> indicates the current stack size.
            <br/> Defaults to 1.
            </summary>
        </member>
        <member name="F:Terraria.Item.pick">
            <summary>
            The Pickaxe power of this item. For example, <c>Item.pick = 50;</c> will appear as 50% Pickaxe Power in the tooltip.
            <br/> The <see href="https://terraria.wiki.gg/wiki/Pickaxes">Pickaxes wiki page</see> is a good resource for finding a suitable value.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Item.axe">
            <summary>
            The Axe power of this item. The Axe power percentage shown to the user is five times this value, so adjust accordingly. For example, <c>Item.axe = 9;</c> will appear as 45% Axe Power in the tooltip.
            <br/> The <see href="https://terraria.wiki.gg/wiki/Axes">Axes wiki page</see> is a good resource for finding a suitable value.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Item.hammer">
            <summary>
            The Hammer power of this item. For example, <c>Item.hammer = 70;</c> will appear as 70% Hammer Power in the tooltip.
            <br/> The <see href="https://terraria.wiki.gg/wiki/Hammers">Hammers wiki page</see> is a good resource for finding a suitable value.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Item.tileBoost">
            <summary>
            Additional tile range provided by this tool or tile. Copper Pickaxe has a value of -1, reducing the range. Chain uses 3 to allow the tile to be placed from farther away than normal tiles.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Item.createTile">
            <summary>
            The ID of the tile this item places on use. Either a <see cref="T:Terraria.ID.TileID"/> entry or <see cref="M:Terraria.ModLoader.ModContent.TileType``1"/>, for example <see cref="F:Terraria.ID.TileID.WorkBenches"/> or ModContent.ItemType&lt;ExampleWorkbench&gt;()
            <br/> Defaults to -1.
            </summary>
        </member>
        <member name="F:Terraria.Item.createWall">
            <summary>
            The ID of the wall this item places on use. Either a <see cref="T:Terraria.ID.WallID"/> entry or <see cref="M:Terraria.ModLoader.ModContent.WallType``1"/>, for example <see cref="F:Terraria.ID.WallID.TopazGemspark"/> or ModContent.ItemType&lt;ExampleWall&gt;()
            <br/> Defaults to -1.
            </summary>
        </member>
        <member name="F:Terraria.Item.placeStyle">
            <summary>
            The style of the tile being placed. Used for tiles that have a different look depending on the item used to place them.
            <br/> The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Tile#multiple-styles">Basic Tile guide</see> explains more about this concept.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Item.damage">
            <summary>
            The base damage inflicted by this item. The <see href="https://terraria.wiki.gg/wiki/List_of_weapons">List of weapons wiki page</see> can be a useful guide for deciding on a value.
            <br/> Use <see cref="M:Terraria.ModLoader.ModItem.ModifyWeaponDamage(Terraria.Player,Terraria.ModLoader.StatModifier@)"/> for dynamic damage values.
            <br/> Defaults to -1.
            </summary>
        </member>
        <member name="F:Terraria.Item.knockBack">
            <summary>
            The force of the knock back. Max value is 20. The <see href="https://terraria.wiki.gg/wiki/Knockback">Knockback wiki page</see> has info on existing values. The <see href="https://terraria.wiki.gg/wiki/List_of_weapons">List of weapons wiki page</see> can also be a useful guide for deciding on a value.
            <br/> Use <see cref="M:Terraria.ModLoader.ModItem.ModifyWeaponKnockback(Terraria.Player,Terraria.ModLoader.StatModifier@)"/> for dynamic knockback values.
            <br/> Defaults to 0f.
            </summary>
        </member>
        <member name="F:Terraria.Item.healLife">
            <summary>
            The amount of health this item restores on use.
            <br/> Use <see cref="M:Terraria.ModLoader.ModItem.GetHealLife(Terraria.Player,System.Boolean,System.Int32@)"/> for dynamic health restoring values.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Item.healMana">
            <summary>
            The amount of mana this item restores on use.
            <br/> Use <see cref="M:Terraria.ModLoader.ModItem.GetHealMana(Terraria.Player,System.Boolean,System.Int32@)"/> for dynamic mana restoring values.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Item.potion">
            <summary>
            If true, this item will inflict potion sickness on use. Also determines whether the item cannot be used when the player has potion sickness, and if the item can be used with the Quick Heal key.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Item.consumable">
            <summary>
            Whether the item is consumed after use. If consumed, the item stack will decrease by 1. Modders can use the <see cref="M:Terraria.ModLoader.ModItem.ConsumeItem(Terraria.Player)"/> hook to dynamically decide if the item should be consumed. Modders can use <see cref="M:Terraria.ModLoader.ModItem.OnConsumeItem(Terraria.Player)"/> to act on an item being consumed.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Item.autoReuse">
            <summary>
            Whether the item is in continuous use while the mouse button is held down.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Item.useTurn">
            <summary>
            Whether the player can turn around while the using animation of this item is happening.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Item.color">
            <summary>
            Draws the item sprite with a colored tint. Gel and Sharkfin use this to spawn different colored items from the same ItemID. <c>NetMessage.SendData(88, ...)</c> needs to be used to sync this if not done in SetDefaults.
            <br/> Defaults to <see cref="P:Microsoft.Xna.Framework.Color.Transparent"/>
            </summary>
        </member>
        <member name="F:Terraria.Item.alpha">
            <summary>
            Set to a value from 0 to 255 to control how transparent the item will appear when drawn. Gel uses 175, gemstone items use 50. 0 is opaque, and 255 is transparent. Note that this is the opposite of how alpha is typically expressed in computer graphics. Use <see cref="M:Terraria.ModLoader.ModItem.GetAlpha(Microsoft.Xna.Framework.Color)"/> for more control over the resulting color.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Item.glowMask">
            <summary>
            The index in <see cref="F:Terraria.GameContent.TextureAssets.GlowMask"/> of this item's glow mask, or <c>-1</c> if this item doesn't have a glow mask.
            <br/> Currently does not support modded content.
            <br/> Defaults to <c>-1</c>.
            </summary>
        </member>
        <member name="F:Terraria.Item.scale">
            <summary>
            The size multiplier of the item's sprite while the item is being used. Also increases range for melee weapons.
            <br/> Use <see cref="M:Terraria.ModLoader.ModItem.ModifyItemScale(Terraria.Player,System.Single@)"/> for dynamic scale values.
            <br/> Defaults to 1f.
            </summary>
        </member>
        <member name="F:Terraria.Item.UseSound">
            <summary>
            The sound this item makes when used. Set this to an existing <see cref="T:Terraria.ID.SoundID"/> entry or assign to a new <see cref="T:Terraria.Audio.SoundStyle"/> for a custom sound.
            <br/> The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Sounds">Basic Sounds Guide</see> teaches how to find existing sounds to use, how to use custom sounds, and how to customize the playback properties of the sounds. 
            <br/> For example <c>Item.UseSound = SoundID.Item1;</c> can be used for the sword swing sound.
            <br/> Defaults to null.
            </summary>
        </member>
        <member name="F:Terraria.Item.defense">
            <summary>
            The amount of defense this item provides when equipped, either as an accessory or armor.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Item.rare">
            <summary>
            Indicates the rarity of an item. Assign to a <see cref="T:Terraria.ID.ItemRarityID"/> value. Vanilla values range from -1 to 13.
            <br/> Items with <see cref="F:Terraria.ID.ItemRarityID.White"/> rarity will burn in lava unless <see cref="F:Terraria.ID.ItemID.Sets.IsLavaImmuneRegardlessOfRarity"/> is used.
            <br/> Modded rarities can be assigned by: <c>Item.rare = ModContent.RarityType&lt;ExampleModRarity&gt;();</c>
            <br/> The <see href="https://terraria.wiki.gg/wiki/Rarity">Rarity wiki page</see> has guidelines for deciding on a suitable rarity.
            <br/> Defaults to <see cref="F:Terraria.ID.ItemRarityID.White"/>
            </summary>
        </member>
        <member name="F:Terraria.Item.shoot">
            <summary>
            The ID of the projectile that is fired by this item on use. Either a <see cref="T:Terraria.ID.ProjectileID"/> entry or <see cref="M:Terraria.ModLoader.ModContent.ProjectileType``1"/>, for example <see cref="F:Terraria.ID.ProjectileID.FireArrow"/> or ModContent.ProjectileType&lt;MyModProjectile&gt;()
            <br/> If this weapon uses <see cref="F:Terraria.Item.useAmmo"/>, then this value is ignored as the projectile will be decided by the ammo item, but shoot should still be 10 by convention.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Item.shootSpeed">
            <summary>
            The velocity in pixels the projectile fired by this item will have. Actual velocity depends on the projectile being fired. If your weapon is shooting projectiles and they are stationary, change this to something like 10f. Throwing Knife uses 10f. Held projectiles like Vortex Beater use shootSpeed to determine how far away from the player to hold the projectile.
            <br/> Defaults to 0f.
            </summary>
        </member>
        <member name="F:Terraria.Item.ammo">
            <summary>
            The Ammo ID this item belongs to. Weapons with <see cref="F:Terraria.Item.useAmmo"/> set to the same AmmoID will consume this item as ammo. See the <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Ammo">Ammo Guide</see> for more information.
            <br/> Defaults to <see cref="F:Terraria.ID.AmmoID.None"/>.
            </summary>
        </member>
        <member name="F:Terraria.Item.notAmmo">
            <summary>
            If true and the item is ammo (sets <see cref="F:Terraria.Item.ammo"/> to something), the item will not count as ammo for certain ammo-specific behavior, such as the tooltip mentioning the item is ammo, or ammo items going into ammo slots first when picked up. Used for the Coin items, Ale, and Wire.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Item.useAmmo">
            <summary>
            The Ammo ID this weapon will consume. Ammo items with <see cref="F:Terraria.Item.ammo"/> set to this same AmmoID will be consumed as ammo for this weapon to be used. See the <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Ammo">Ammo Guide</see> for more information.
            <br/> Defaults to <see cref="F:Terraria.ID.AmmoID.None"/>.
            </summary>
        </member>
        <member name="F:Terraria.Item.lifeRegen">
            <summary>
            The value to add to <see cref="F:Terraria.Player.lifeRegen"/> of the equipping player.
            <br/> Defaults to <c>0</c>.
            </summary>
        </member>
        <member name="F:Terraria.Item.mana">
            <summary>
            The amount of mana this item consumes on use.
            <br/> Use <see cref="M:Terraria.ModLoader.ModItem.ModifyManaCost(Terraria.Player,System.Single@,System.Single@)"/> for dynamic mana costs.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Item.noUseGraphic">
            <summary>
            If true, the item's sprite will not be visible while the item is in use.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Item.noMelee">
            <summary>
            If true, the item's using animation will not deal damage. Set to true on most weapons that aren't swords.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Item.value">
            <summary>
            The number of copper coins this item is worth (aka, cost to buy from a merchant). Setting it to <c>10462</c> would mean the item cost 1 gold, 4 silver, and 62 copper. The sell price of an item is one fifth of its value. Value also influences reforge costs with the goblin tinkerer.
            <br/> For convenience, you can also use the <see cref="M:Terraria.Item.buyPrice(System.Int32,System.Int32,System.Int32,System.Int32)"/> method for setting values: <c>Item.value = Item.buyPrice(0, 1, 4, 62);</c> You can also use the <see cref="M:Terraria.Item.sellPrice(System.Int32,System.Int32,System.Int32,System.Int32)"/> method if you would rather think about an item's value the other way. Both <c>Item.buyPrice(0, 0, 10, 55)</c> and <c>Item.sellPrice(0, 0, 2, 11)</c> would set the value to <c>1055</c>.
            </summary>
        </member>
        <member name="F:Terraria.Item.vanity">
            <summary>
            If <see langword="true"/>, this item is a vanity item.
            <br/> Vanity items can't receive prefixes and have a special vanity tooltip.
            </summary>
        </member>
        <member name="F:Terraria.Item.material">
            <summary>
            Indicates that an item should show the material tooltip. Typically this means that the item is used in at least 1 recipe. Automatically assigned.
            </summary>
        </member>
        <member name="F:Terraria.Item.noWet">
            <summary>
            If true, the item won't be drawn while the holding player is wet. The player will also not be in the animation frame corresponding to the item's holdStyle
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Item.buffType">
            <summary>
            The Buff ID of the buff given by this item on use. To have a potion give multiple buffs, assign one buff here and in <see cref="M:Terraria.ModLoader.ModItem.UseItem(Terraria.Player)"/>, call <see cref="M:Terraria.Player.AddBuff(System.Int32,System.Int32,System.Boolean,System.Boolean)"/> for the remaining buffs you wish to give.
            <br/> Make sure to set <see cref="F:Terraria.Item.buffTime"/> as well or the buff will instantly disappear.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Item.buffTime">
            <summary>
            The duration in ticks of the buff given by this item on use. There are 60 ticks per second, multiply the number of seconds by 60. For example, a buff lasting 8 minutes would use a value of either <c>28800</c> or <c>8*60*60</c>. 
            <br/> Make sure to set <see cref="F:Terraria.Item.buffType"/> as well. 
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Item.mountType">
            <summary>
            Specifies which mount to equip when the item is used. Assign to <c>ModContent.MountType&lt;ModdedMountHere&gt;()</c>. See <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/Items/ExampleMountItem.cs">ExampleMountItem.cs</see> for an example.
            <br/> Defaults to -1.
            </summary>
        </member>
        <member name="F:Terraria.Item.uniqueStack">
            <summary>
            Players cannot pick up a <c>uniqueStack</c> item if they have an item with the same <see cref="F:Terraria.Item.type"/> in their inventory.<br/>
            This does not apply to equipped items, nor does it apply to items held with the mouse (<see cref="F:Terraria.Main.mouseItem"/>).<br/>
            This field only prevents picking items up: Multiple <c>uniqueStack</c> items may still be transferred into the player's inventory from chests.<br/>
            Defaults to <see langword="false"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.shopSpecialCurrency">
            <summary>
            The numerical ID of the special currency this item is bought using.<br/>
            To make an item bought using Defender Medals, set this to <see cref="F:Terraria.ID.CustomCurrencyID.DefenderMedals"/>.<br/>
            See <see href="https://github.com/tModLoader/tModLoader/search?q=ExampleCustomCurrencyId">ExampleCustomCurrencyId</see> for an example of creating and using a custom currency.<br/>
            Must be used with <see cref="F:Terraria.Item.shopCustomPrice"/> assigning the price in terms of this custom currency.<br/>
            Defaults to -1, which means an item is bought using coins.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.shopCustomPrice">
            <summary>
            If not <see langword="null"/>, the custom value of the given item when being bought from a shop.<br/>
            Used for assigning a non-default price to an item in shops.<br/>
            Can be used with <see cref="F:Terraria.Item.shopSpecialCurrency"/> to assign a price in terms of a custom currency instead of coins.<br/>
            To get the raw price of an item, use <see cref="M:Terraria.Item.GetStoreValue"/>.<br/>
            To get the price of an item after discounts, use <see cref="M:Terraria.Player.GetItemExpectedPrice(Terraria.Item,System.Int64@,System.Int64@)"/>.<br/>
            Defaults to <see langword="null"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.DD2Summon">
            <summary>
            If true, the given item is categorized as a Dungeon Defenders 2 summon item.<br/>
            DD2 summon items get a counter for how much Etherian Mana is in the player's inventory.<br/>
            <b>This field being set does not make the item consume Etherian Mana.</b> Etherian Mana consumption is handled manually per-type.<br/>
            Defaults to <see langword="false"/>.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Item.crit">
            <summary>
            The base critical chance for this item. Remember that the player has a base crit chance of 4.
            <br/> Use <see cref="M:Terraria.ModLoader.ModItem.ModifyWeaponCrit(Terraria.Player,System.Single@)"/> for dynamic crit values.
            <br/> Defaults to 0
            </summary>
        </member>
        <member name="F:Terraria.Item.prefix">
            <summary>
            The current prefix applied to this item. Either a <see cref="T:Terraria.ID.PrefixID"/> entry or <see cref="M:Terraria.ModLoader.ModContent.PrefixType``1"/>. Prefixes are assigned by calling the <see cref="M:Terraria.Item.Prefix(System.Int32)"/> method.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Item.reuseDelay">
            <summary>
            A delay in frames added at the end of the using animation for the item, during which the player wont be able to use any items.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Item.hasVanityEffects">
            <summary>
            If <see langword="true"/>, this item has vanity effects even though it doesn't use equipment slots.
            <br/> Unused in vanilla, as the system it was used for was removed in 1.4.4.
            </summary>
        </member>
        <member name="P:Terraria.Item.Name">
            <summary>
            The localized name of this item without stack size or prefixes.
            <br/> Can be overridden using <see cref="M:Terraria.Item.SetNameOverride(System.String)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Item.HoverName">
            <summary>
            The name of this item including stack size and prefix.
            </summary>
        </member>
        <member name="P:Terraria.Item.PaintOrCoating">
            <summary>
            <see langword="true"/> if <c><see cref="F:Terraria.Item.paint"/> &gt; 0 || <see cref="F:Terraria.Item.paintCoating"/> &gt; 0</c> and <see langword="false"/> otherwise.
            </summary>
        </member>
        <member name="M:Terraria.Item.StartCachingType(System.Int32)">
            <summary>
            Begins caching items spawns for a given item type (<see cref="F:Terraria.Item.type"/>).
            <br/> Cached item types will not be spawned into the world when created with Item.NewItem().
            <br/> Cache sizes can be checked by indexing <see cref="F:Terraria.Item.cachedItemSpawnsByType"/> and dropped using <see cref="M:Terraria.Item.DropCache(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Boolean)"/>.
            </summary>
            <param name="t">The item type to start caching.</param>
        </member>
        <member name="M:Terraria.Item.DropCache(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Boolean)">
            <summary>
            Drops a cache previously created using <see cref="M:Terraria.Item.StartCachingType(System.Int32)"/>.
            <br/> If no cache of <paramref name="t"/> exists, nothing happens.
            </summary>
            <param name="reason">The source of the dropped cache.</param>
            <param name="pos">The position to drop the cache in world coordinates.</param>
            <param name="spread">The random spread of the dropped items in world coordinates.</param>
            <param name="t">The item type (<see cref="F:Terraria.Item.type"/>) to drop.</param>
            <param name="stopCaching">If <see langword="true"/>, then <paramref name="t"/> will no longer be cached, allowing future drops to spawn as normal.</param>
        </member>
        <member name="M:Terraria.Item.CanHavePrefixes">
            <summary>
            Determines if this <see cref="T:Terraria.Item"/> can receive prefixes.
            </summary>
            <returns>
            <see langword="true"/> if this <see cref="T:Terraria.Item"/> is allowed to receive prefixes, <see langword="false"/> otherwise.
            </returns>
        </member>
        <member name="M:Terraria.Item.Prefix(System.Int32)">
            <summary>
            Attempts to apply a prefix to this <see cref="T:Terraria.Item"/>.
            </summary>
            <param name="prefixWeWant">
            <br/> If <c><paramref name="prefixWeWant"/> == 0</c>, do nothing.
            <br/> If <c><paramref name="prefixWeWant"/> == -1</c>, then a random prefix is rolled, with a 25% chance to not roll a prefix and an additional 66% chance to void any prefixes in the <see cref="F:Terraria.ID.PrefixID.Sets.ReducedNaturalChance"/> set. This is used for chest loot, starting equipment, etc.
            <br/> If <c><paramref name="prefixWeWant"/> == -2</c>, then a random prefix is rolled, with no chance to not roll a prefix. This is used for the Goblin Tinkerer.
            <br/> If <c><paramref name="prefixWeWant"/> == -3</c>, then this method simple checks if this item <em>can</em> receive prefixes.
            <br/> Otherwise, attempt to apply the given <see cref="T:Terraria.ID.PrefixID"/> to this item.
            </param>
            <returns>
            <see langword="false"/> if:<list type="bullet">
            <item><paramref name="prefixWeWant"/> is <c>0</c></item>
            <item><see cref="M:Terraria.Item.CanHavePrefixes"/> returns <see langword="false"/></item>
            <item><see cref="M:Terraria.Item.CanApplyPrefix(System.Int32)"/> returns <see langword="false"/></item>
            <item><c><paramref name="prefixWeWant"/> == -1</c> and <c><see cref="F:Terraria.Item.maxStack"/> &gt; 1</c></item>
            <item><see cref="M:Terraria.ModLoader.ItemLoader.PrefixChance(Terraria.Item,System.Int32,Terraria.Utilities.UnifiedRandom)"/> returns <see langword="false"/></item>
            <item><c><paramref name="prefixWeWant"/> == -1 or -2 or -3</c> and <see cref="M:Terraria.ModLoader.PrefixLoader.Roll(Terraria.Item,Terraria.Utilities.UnifiedRandom,System.Int32@,System.Boolean)"/> returns <see langword="false"/>.</item>
            </list>
            Otherwise, return <see langword="true"/>.
            </returns>
        </member>
        <member name="M:Terraria.Item.CanRollPrefix(System.Int32)">
            <summary>
            Determines if this <see cref="T:Terraria.Item"/> can roll the given prefix.
            </summary>
            <param name="prefix">The <see cref="T:Terraria.ID.PrefixID"/> to check.</param>
            <returns><see langword="true"/> if this <see cref="T:Terraria.Item"/> can receive prefixes (<see cref="M:Terraria.Item.CanHavePrefixes"/>) and if <see cref="M:Terraria.ModLoader.PrefixLoader.CanRoll(Terraria.Item,System.Int32)"/> returns <see langword="true"/>, <see langword="false"/> otherwise.</returns>
            <remarks>Just because a prefix can be rolled does not mean it can be applied -- use <see cref="M:Terraria.Item.CanApplyPrefix(System.Int32)"/> to check for that.</remarks>
        </member>
        <member name="M:Terraria.Item.CanApplyPrefix(System.Int32)">
            <summary>
            Determines if this <see cref="T:Terraria.Item"/> can receive the given prefix.
            </summary>
            <param name="prefix">The <see cref="T:Terraria.ID.PrefixID"/> to check.</param>
            <returns><see langword="true"/> if this <see cref="T:Terraria.Item"/> can roll the given prefix (<see cref="M:Terraria.Item.CanRollPrefix(System.Int32)"/>) and if the applied prefix does not fail to modify any stat values.</returns>
        </member>
        <member name="M:Terraria.Item.GetPrefixCategory">
            <summary>
            Determines the <see cref="T:Terraria.ModLoader.PrefixCategory"/> of this <see cref="T:Terraria.Item"/>.
            </summary>
            <returns>The <see cref="T:Terraria.ModLoader.PrefixCategory"/> of this <see cref="T:Terraria.Item"/> or <see langword="null"/> if this <see cref="T:Terraria.Item"/> doesn't have a category.</returns>
        </member>
        <member name="M:Terraria.Item.GetVanillaPrefixes(Terraria.ModLoader.PrefixCategory)">
            <summary>
            Gets the vanilla prefixes for the given <see cref="T:Terraria.ModLoader.PrefixCategory"/>.
            </summary>
            <param name="category">The <see cref="T:Terraria.ModLoader.PrefixCategory"/> to check.</param>
            <returns>An array of vanilla <see cref="T:Terraria.ID.PrefixID"/>s for the given category, or an empty array for <see cref="F:Terraria.ModLoader.PrefixCategory.Custom"/>.</returns>
        </member>
        <member name="M:Terraria.Item.IsAPrefixableAccessory">
            <summary>
            Determines if this <see cref="T:Terraria.Item"/> is an accessory that can receive prefixes.
            </summary>
            <returns><see langword="true"/> if this <see cref="T:Terraria.Item"/> is an accessory, is not a vanity item, and is not blacklisted from receiving prefixes (<see cref="F:Terraria.ID.ItemID.Sets.CanGetPrefixes"/>).</returns>
        </member>
        <member name="M:Terraria.Item.AffixName">
            <summary>
            Gets the localized name of this <see cref="T:Terraria.Item"/> including its prefix.
            </summary>
            <returns>The localized name of this <see cref="T:Terraria.Item"/> including its prefix, or simply <see cref="P:Terraria.Item.Name"/> if the prefix doesn't exist or is an empty string.</returns>
        </member>
        <member name="M:Terraria.Item.getRect">
            <summary>
            Gets this <see cref="T:Terraria.Item"/>'s hitbox in the world. Equivalent to <see cref="P:Terraria.Entity.Hitbox"/>.
            </summary>
            <returns>This <see cref="T:Terraria.Item"/>'s hitbox in the world.</returns>
        </member>
        <member name="M:Terraria.Item.BannerToItem(System.Int32)">
            <summary>
            Converts a banner ID into the equivalent item type (<see cref="F:Terraria.Item.type"/>).
            </summary>
            <param name="banner">The banner ID to convert.</param>
            <returns>
            The item type associated with the given banner ID.
            <br/> <strong>This method will return the wrong item type if <paramref name="banner"/> is not a valid banner ID.</strong>
            </returns>
            <remarks>You can get the banner ID of an NPC using <see cref="M:Terraria.Item.NPCtoBanner(System.Int32)"/>.</remarks>
        </member>
        <member name="M:Terraria.Item.NPCtoBanner(System.Int32)">
            <summary>
            Converts an NPC type (<see cref="F:Terraria.NPC.type"/>) into the equivalent banner ID.
            </summary>
            <param name="i">The NPC type to convert.</param>
            <returns>The banner ID associated with the given NPC type, or <c>0</c> if the NPC type has no associated banner.</returns>
        </member>
        <member name="M:Terraria.Item.BannerToNPC(System.Int32)">
            <summary>
            Converts a banner ID into the equivalent NPC type (<see cref="F:Terraria.NPC.type"/>).
            </summary>
            <param name="i">The banner ID to convert.</param>
            <returns>The NPC type associated with the given banner ID, or <see cref="F:Terraria.ID.NPCID.None"/> for an invalid banner ID.</returns>
        </member>
        <member name="M:Terraria.Item.DefaultToQuestFish">
            <summary>
            This method sets a variety of Item values common to quest fish items.<br/>
            Specifically:<code>
            questItem = true;
            maxStack = 1;
            width = 26;
            height = 26;
            uniqueStack = true;
            rare = <see cref="F:Terraria.ID.ItemRarityID.Quest"/>;
            </code>
            </summary>
        </member>
        <member name="M:Terraria.Item.DefaultToGolfBall(System.Int32)">
            <summary>
            This method sets a variety of Item values common to golf ball items.<br/>
            Specifically:<code>
            shoot = <paramref name="projid"/>;
            useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Swing"/>;
            shootSpeed = 12f;
            width = 18;
            height = 20;
            maxStack = 1;
            UseSound = <see cref="F:Terraria.ID.SoundID.Item1"/>;
            useAnimation = 15;
            useTime = 15;
            noUseGraphic = true;
            noMelee = true;
            accessory = true;
            SetShopValues(ItemRarityColor.Green2, buyPrice(0, 1));
            hasVanityEffects = true;
            </code>
            </summary>
            <param name="projid"></param>
        </member>
        <member name="M:Terraria.Item.DefaultToSolution(System.Int32)">
            <summary>
            This method sets a variety of Item values common to Clentaminator ammo solution items.<br/>
            Specifically:<code>
            shoot = projectileId - 145;
            ammo = AmmoID.Solution;
            width = 10;
            height = 12;
            value = buyPrice(0, 0, 15);
            rare = 3;
            maxStack = <see cref="F:Terraria.Item.CommonMaxStack"/>;
            consumable = true;
            </code>
            </summary>
            <param name="projectileId"></param>
        </member>
        <member name="M:Terraria.Item.DefaultToWhip(System.Int32,System.Int32,System.Single,System.Single,System.Int32)">
            <summary>
            This method sets a variety of Item values common to whip weapons.<br/>
            Specifically:<code>
            autoReuse = false;
            useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Swing"/>;
            useAnimation = animationTotalTime;
            useTime = animationTotalTime;
            width = 18;
            height = 18;
            shoot = projectileId;
            UseSound = <see cref="F:Terraria.ID.SoundID.Item152"/>;
            noMelee = true;
            DamageType = <see cref="P:Terraria.ModLoader.DamageClass.SummonMeleeSpeed"/>;
            noUseGraphic = true;
            damage = dmg;
            knockBack = kb;
            shootSpeed = <paramref name="shootspeed"/>;
            </code>
            </summary>
            <param name="projectileId"></param>
            <param name="dmg"></param>
            <param name="kb"></param>
            <param name="shootspeed"></param>
            <param name="animationTotalTime"></param>
        </member>
        <member name="M:Terraria.Item.DefaultToStaff(System.Int32,System.Single,System.Int32,System.Int32)">
            <summary>
            This method sets a variety of Item values common to staff magic weapons.<br/>
            Specifically:<code>
            DefaultToMagicWeapon(projType, singleShotTime, pushForwardSpeed, hasAutoReuse: true);
            mana = manaPerShot;
            width = 40;
            height = 40;
            UseSound = <see cref="F:Terraria.ID.SoundID.Item43"/>;
            </code>
            Additionally: <br/><inheritdoc cref="M:Terraria.Item.DefaultToMagicWeapon(System.Int32,System.Int32,System.Single,System.Boolean)" />
            </summary>
            <param name="projType"></param>
            <param name="pushForwardSpeed">Passed into DefaultToMagicWeapon as the shotVelocity parameter</param>
            <param name="singleShotTime"></param>
            <param name="manaPerShot"></param>
        </member>
        <member name="M:Terraria.Item.DefaultToSpear(System.Int32,System.Single,System.Int32)">
            <summary>
            This method sets a variety of Item values common to spear weapons.<br/>
            Specifically:<code>
            useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Shoot"/>;
            useAnimation = animationTime;
            useTime = animationTime;
            shootSpeed = pushForwardSpeed;
            width = 32;
            height = 32;
            UseSound = SoundID.Item1;
            shoot = projType;
            noMelee = true;
            noUseGraphic = true;
            DamageType = DamageClass.Melee;
            </code>
            </summary>
            <param name="projType"></param>
            <param name="pushForwardSpeed"></param>
            <param name="animationTime"></param>
        </member>
        <member name="M:Terraria.Item.DefaultToPlaceableWall(System.Int32)">
            <summary>
            This method sets a variety of Item values common to placeable walls.<br/>
            Specifically:<code>
            useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Swing"/>;
            useTurn = true;
            useAnimation = 15;
            useTime = 7;
            autoReuse = true;
            maxStack = <see cref="F:Terraria.Item.CommonMaxStack"/>;
            consumable = true;
            createWall = wallToPlace;
            width = 12;
            height = 12;
            </code>
            </summary>
            <param name="wallToPlace"></param>
        </member>
        <member name="M:Terraria.Item.DefaultToBow(System.Int32,System.Single,System.Boolean)">
            <summary>
            This method sets a variety of Item values common to bow weapons.<br/>
            Specifically: <code>width = 14;<br/>height = 30;<br/>UseSound = SoundID.Item5;</code><br/>
            Additionally: <br/><inheritdoc cref="M:Terraria.Item.DefaultToRangedWeapon(System.Int32,System.Int32,System.Int32,System.Single,System.Boolean)" />
            </summary>
            <param name="singleShotTime"></param>
            <param name="shotVelocity"></param>
            <param name="hasAutoReuse"></param>
        </member>
        <member name="M:Terraria.Item.DefaultToMagicWeapon(System.Int32,System.Int32,System.Single,System.Boolean)">
            <summary>
            This method sets a variety of Item values common to magic weapons.<br/>
            Specifically:<code>
            autoReuse = hasAutoReuse;
            useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Shoot"/>;
            useAnimation = singleShotTime;
            useTime = singleShotTime;
            shoot = projType;
            shootSpeed = shotVelocity;
            noMelee = true;
            DamageType = DamageClass.Magic;
            </code>
            </summary>
            <param name="projType"></param>
            <param name="singleShotTime"></param>
            <param name="shotVelocity"></param>
            <param name="hasAutoReuse"></param>
        </member>
        <member name="M:Terraria.Item.DefaultToRangedWeapon(System.Int32,System.Int32,System.Int32,System.Single,System.Boolean)">
            <summary>
            This method sets a variety of Item values common to ranged weapons.<br/>
            Specifically:<code>
            autoReuse = hasAutoReuse;
            useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Shoot"/>;
            useAnimation = singleShotTime;
            useTime = singleShotTime;
            shoot = baseProjType;
            useAmmo = ammoID;
            shootSpeed = shotVelocity;
            noMelee = true;
            DamageType = DamageClass.Ranged;
            </code>
            </summary>
            <param name="baseProjType"></param>
            <param name="ammoID">The Ammo ID this weapon will consume. See the <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Ammo">Ammo Guide</see> for more information</param>
            <param name="singleShotTime"></param>
            <param name="shotVelocity"></param>
            <param name="hasAutoReuse"></param>
        </member>
        <member name="M:Terraria.Item.DefaultToThrownWeapon(System.Int32,System.Int32,System.Single,System.Boolean)">
            <summary>
            This method sets a variety of Item values common to thrown weapons.<br/>
            Specifically:<code>
            autoReuse = hasAutoReuse;
            useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Swing"/>;
            useAnimation = singleShotTime;
            useTime = singleShotTime;
            shoot = baseProjType;
            shootSpeed = shotVelocity;
            noMelee = true;
            DamageType = DamageClass.Ranged;
            consumable = true;
            maxStack = <see cref="F:Terraria.Item.CommonMaxStack"/>;
            </code>
            </summary>
            <param name="baseProjType"></param>
            <param name="singleShotTime"></param>
            <param name="shotVelocity"></param>
            <param name="hasAutoReuse"></param>
        </member>
        <member name="M:Terraria.Item.DefaultToTorch(System.Int32,System.Int32,System.Boolean)">
            <summary>
            This method sets a variety of Item values common to items that place music boxes.<br/>
            Specifically:<code>
            flame = true;
            noWet = !allowWaterPlacement;
            holdStyle = <see cref="F:Terraria.ID.ItemHoldStyleID.HoldFront"/>;
            autoReuse = true;
            maxStack = <see cref="F:Terraria.Item.CommonMaxStack"/>;
            consumable = true;
            createTile = tileIDToPlace;
            placeStyle = tileStyleToPlace;
            width = 10;
            height = 12;
            value = 60;
            useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Swing"/>;
            useTurn = true;
            useAnimation = 15;
            useTime = 10;
            </code>
            </summary>
            <param name="tileIDToPlace"></param>
            <param name="tileStyleToPlace"></param>
            <param name="allowWaterPlacement"></param>
        </member>
        <member name="M:Terraria.Item.DefaultToPlaceableTile(System.Int32,System.Int32)">
            <inheritdoc cref="M:Terraria.Item.DefaultToPlaceableTile(System.UInt16,System.Int32)"/>
        </member>
        <member name="M:Terraria.Item.DefaultToPlaceableTile(System.UInt16,System.Int32)">
            <summary>
            This method sets a variety of Item values common to items that place tiles.<br/>
            Specifically:<code>
            createTile = tileIDToPlace;
            placeStyle = tileStyleToPlace;
            width = 14;
            height = 14;
            useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Swing"/>;
            useAnimation = 15;
            useTime = 10;
            maxStack = <see cref="F:Terraria.Item.CommonMaxStack"/>;
            useTurn = true;
            autoReuse = true;
            consumable = true;
            </code>
            </summary>
            <param name="tileIDToPlace"></param>
            <param name="tileStyleToPlace"></param>
        </member>
        <member name="M:Terraria.Item.DefaultToFood(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            This method sets a variety of Item values common to food items.<br/>
            Specifically: <code>
            UseSound = useGulpSound ? Item3 : Item2;
            useStyle = useGulpSound ? <see cref="F:Terraria.ID.ItemUseStyleID.DrinkLiquid"/> : <see cref="F:Terraria.ID.ItemUseStyleID.EatFood"/>;
            useTurn = true;
            useAnimation = useTime = animationTime;
            maxStack = <see cref="F:Terraria.Item.CommonMaxStack"/>;
            consumable = true;
            buffType = <paramref name="foodbuff"/>;
            buffTime = <paramref name="foodbuffduration"/>;
            rare = <see cref="F:Terraria.ID.ItemRarityID.Blue"/>;
            value = 20 silver;
            </code>
            </summary>
            <param name="newwidth"></param>
            <param name="newheight"></param>
            <param name="foodbuff"></param>
            <param name="foodbuffduration"></param>
            <param name="useGulpSound">If true, the gulp sound is set, otherwise the crunch sound is set</param>
            <param name="animationTime"></param>
        </member>
        <member name="M:Terraria.Item.SetShopValues(Terraria.Enums.ItemRarityColor,System.Int32)">
            <summary>
            A helper method that sets item rarity and item value. 
            </summary>
            <param name="rarity"></param>
            <param name="coinValue"></param>
        </member>
        <member name="M:Terraria.Item.DefaultToHeadgear(System.Int32,System.Int32,System.Int32)">
            <summary>Modders should not use this.</summary>
        </member>
        <member name="M:Terraria.Item.DefaultToMusicBox(System.Int32,System.Int32)">
            <summary>
            This method sets a variety of Item values common to items that place music boxes.<br/>
            Specifically:<code>
            useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Swing"/>;
            useTurn = true;
            useAnimation = 15;
            useTime = 10;
            autoReuse = true;
            consumable = true;
            createTile = tileIDToPlace;
            placeStyle = style;
            width = 24;
            height = 24;
            rare = <see cref="F:Terraria.ID.ItemRarityID.LightRed"/>;
            value = 100000;
            accessory = true;
            hasVanityEffects = true;
            </code>
            </summary>
            <param name="tileIDToPlace"></param>
            <param name="style"></param>
        </member>
        <member name="M:Terraria.Item.MechSpawn(System.Single,System.Single,System.Int32)">
            <summary>
            Use to check if a mechanism is allowed to spawn an Item of the provided type at the provided world coordinates. Checks nearby area to see if the <see href="https://terraria.wiki.gg/wiki/Statues#Spawn_limits">Spawn Limits</see> have been reached.
            </summary>
        </member>
        <member name="M:Terraria.Item.buyPrice(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts the provided buy price into copper coins.
            <br/> If assigned to <see cref="F:Terraria.Item.value"/>, that item will be bought for the provided value.
            </summary>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Terraria.Item.sellPrice(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts the provided sell value into copper coins. This value is five times larger than <see cref="M:Terraria.Item.buyPrice(System.Int32,System.Int32,System.Int32,System.Int32)"/>.
            <br/> If assigned to <see cref="F:Terraria.Item.value"/>, that item will be sold for the provided value.
            </summary>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/>
            <br/><br/>This particular overload uses two Vector2 to determine the actual spawn position.
            </summary>
            <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/></returns>
        </member>
        <member name="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/>
            <br/><br/>This particular overload uses a Vector2 instead of X and Y to determine the actual spawn position.
            </summary>
            <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/></returns>
        </member>
        <member name="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Spawns an item into the game world with the given type and stack size. The X, Y, Width, and Height parameters dictate a rectangle, the item will be spawned centered within that rectangle. Other overloads support passing in a position directly, or just use 0 for Width and Height if the center is passed in a X and Y.
            <br/> This method should not be called on multiplayer clients. If you need to spawn items from client code, use <see cref="M:Terraria.Player.QuickSpawnItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32)"/> instead, it handles the multiplayer syncing code needed.
            <br/> See the <paramref name="noBroadcast"/> documentation if you need to customize attached ModItem or GlobalItem data prior to syncing.
            <br/> The source represents the entity causing this item to spawn. The return value is the index of the spawned Item within the <see cref="F:Terraria.Main.item"/> array. 
            </summary>
            <param name="source"></param>
            <param name="X"></param>
            <param name="Y"></param>
            <param name="Width"></param>
            <param name="Height"></param>
            <param name="Type">Either an <see cref="T:Terraria.ID.ItemID"/> entry or <see cref="M:Terraria.ModLoader.ModContent.ItemType``1"/>, for example <see cref="F:Terraria.ID.ItemID.IronskinPotion"/> or ModContent.ItemType&lt;MyModItem&gt;()</param>
            <param name="Stack">Item stack</param>
            <param name="noBroadcast">Controls whether an item spawned on a server is synced using <see cref="M:Terraria.NetMessage.SendData(System.Int32,System.Int32,System.Int32,Terraria.Localization.NetworkText,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)"/> and <see cref="F:Terraria.ID.MessageID.SyncItem"/>. If false, the item will be synced. If true, the calling code can modify the item instance and then sync the item with <see cref="F:Terraria.ID.MessageID.SyncItem"/>. Has no effect except on server. NewItem running on multiplayer clients always needs to manually sync, see <see cref="M:Terraria.Player.QuickSpawnItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32)"/> source code for an example.</param>
            <param name="pfix"></param>
            <param name="noGrabDelay"></param>
            <param name="reverseLookup"></param>
            <returns>The index of the item within <see cref="F:Terraria.Main.item"/></returns>
        </member>
        <member name="M:Terraria.Item.SetNameOverride(System.String)">
            <summary>
            Overrides the value of <see cref="P:Terraria.Item.Name"/>.
            </summary>
            <param name="name">The new name of this <see cref="T:Terraria.Item"/>.</param>
        </member>
        <member name="M:Terraria.Item.ClearNameOverride">
            <summary>
            Clears the overridden value of <see cref="P:Terraria.Item.Name"/>.
            </summary>
        </member>
        <member name="M:Terraria.Item.GetGlobalItem``1">
            <summary> Gets the instance of the specified GlobalItem type. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.IndexOutOfRangeException"/>
        </member>
        <member name="M:Terraria.Item.GetGlobalItem``1(``0)">
            <summary> Gets the local instance of the type of the specified GlobalItem instance. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.NullReferenceException"/>
        </member>
        <member name="M:Terraria.Item.TryGetGlobalItem``1(``0@)">
            <summary> Gets the instance of the specified GlobalItem type. </summary>
        </member>
        <member name="M:Terraria.Item.TryGetGlobalItem``1(``0,``0@)">
            <summary> Safely attempts to get the local instance of the type of the specified GlobalItem instance. </summary>
            <returns> Whether or not the requested instance has been found. </returns>
        </member>
        <member name="P:Terraria.Item.NetStateVersion">
            <summary>
            An additional identifier 
            </summary>
        </member>
        <member name="M:Terraria.Item.NetStateChanged">
             <summary>
             Call this to trigger a re-sync of this item in a player's inventory or equipment in multiplayer.<br/>
             The item will be sent to the server and other players at the end of the frame (not immediately).<br/>
            <br/>
             Has no effect on server-side items or items in remote player's inventories<br/>
             </summary>
        </member>
        <member name="P:Terraria.Item.attackSpeedOnlyAffectsWeaponAnimation">
            <summary>
            Dictates whether or not attack speed modifiers on this weapon will actually affect its use time.<br/>
            Defaults to false, which allows attack speed modifiers to affect use time. Set this to true to prevent this from happening.<br/>
            Used in vanilla by all melee weapons which shoot a projectile and have <see cref="F:Terraria.Item.noMelee"/> set to false.
            </summary>
        </member>
        <member name="P:Terraria.Item.AllowReforgeForStackableItem">
            <summary>
            Set to true in SetDefaults to allow this item to receive a prefix on reforge even if maxStack is not 1.
            <br>This prevents it from receiving a prefix on craft.</br>
            </summary>
        </member>
        <member name="P:Terraria.Item.useLimitPerAnimation">
            <summary>
            Dictates the amount of times a weapon can be used (shot, etc) each time it animates (is swung, clicked, etc).<br/>
            Defaults to null.<br/>
            Used in vanilla by the following:<br/>
            - BookStaff<br/>
            - FairyQueenMagicItem<br/>
            - FairyQueenRangedItem<br/>
            </summary>
        </member>
        <member name="P:Terraria.Item.consumeAmmoOnFirstShotOnly">
            <summary>
            Dictates whether or not this item should only consume ammo on its first shot of each use.<br/>
            Defaults to false.<br/>
            Used in vanilla by the following:<br/>
            - Flamethrower<br/>
            - Elf Melter<br/>
            </summary>
        </member>
        <member name="P:Terraria.Item.consumeAmmoOnLastShotOnly">
            <summary>
            Dictates whether or not this item should only consume ammo on its last shot of each use.<br/>
            Defaults to false. <br/>
            Used in vanilla by the following:<br/>
            - ClockworkAssaultRifle<br/>
            - Clentaminator<br/>
            - FairyQueenRangedItem<br/>
            </summary>
        </member>
        <member name="P:Terraria.Item.InterruptChannelOnHurt">
            <summary>
            When enabled and the player is hurt, <see cref="F:Terraria.Player.channel"/> will be set to false
            </summary>
        </member>
        <member name="P:Terraria.Item.StopAnimationOnHurt">
            <summary>
            When enabled and the player is hurt, <see cref="F:Terraria.Player.channel"/> will be set to false, and the item animation will stop immediately
            </summary>
        </member>
        <member name="P:Terraria.Item.DamageType">
            <summary>
            The damage type of this Item. Assign to DamageClass.Melee/Ranged/Magic/Summon/Throwing for vanilla classes, or <see cref="M:Terraria.ModLoader.ModContent.GetInstance``1"/> for custom damage types.
            </summary>
        </member>
        <member name="P:Terraria.Item.ArmorPenetration">
            <summary>
            The number of defense points that this item can ignore on its own. Cannot be set to negative values. Defaults to 0.
            </summary>
        </member>
        <member name="M:Terraria.Item.CountsAsClass``1">
            <inheritdoc cref="M:Terraria.Item.CountsAsClass(Terraria.ModLoader.DamageClass)"/>
        </member>
        <member name="M:Terraria.Item.CountsAsClass(Terraria.ModLoader.DamageClass)">
            <summary>
            This is used to check if this item benefits from the specified <see cref="T:Terraria.ModLoader.DamageClass"/>.
            </summary>
            <param name="damageClass">The DamageClass to check for in this item.</param>
            <returns><see langword="true"/> if this item's <see cref="T:Terraria.ModLoader.DamageClass"/> matches <paramref name="damageClass"/>, <see langword="false"/> otherwise</returns>
        </member>
        <member name="M:Terraria.Item.IsNotSameTypePrefixAndStack(Terraria.Item)">
            <summary>
            returns false if and only if type, stack and prefix match<br/>
            <seealso cref="M:Terraria.Item.IsNetStateDifferent(Terraria.Item)"/>
            </summary>
        </member>
        <member name="M:Terraria.Item.IsNetStateDifferent(Terraria.Item)">
            <summary>
            Returns true if these items are different and there is a need to re-sync them
            </summary>
        </member>
        <member name="M:Terraria.Item.CopyNetStateTo(Terraria.Item)">
            <summary>
            Use this instead of <see cref="M:Terraria.Item.Clone"/> for much faster state snapshotting and change sync detection.<br/>
            Note!! <see cref="M:Terraria.Item.SetDefaults(System.Int32)"/> will NOT be called. The target item will remain as it was (most likely air), except for type, stack, prefix and netStateVersion
            </summary>
        </member>
        <member name="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Rectangle,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/>
            <br/><br/>This particular overload uses a Rectangle instead of X, Y, Width, and Height to determine the actual spawn position.
            </summary>
            <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/></returns>
        </member>
        <member name="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/>
            <br/><br/>This particular overload uses a Vector2 instead of X, Y, Width, and Height to determine the actual spawn position.
            </summary>
            <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/></returns>
        </member>
        <member name="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,Terraria.Item,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/>
            <br/><br/>This particular overload uses an Item instead of just the item type. All modded data will be preserved.
            </summary>
            <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/></returns>
        </member>
        <member name="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Terraria.Item,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/>
            <br/><br/>This particular overload uses an Item instead of just the item type. All modded data will be preserved.
            <br/><br/>This particular overload uses a Vector2 instead of X and Y to determine the actual spawn position.
            </summary>
            <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/></returns>
        </member>
        <member name="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,Terraria.Item,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/>
            <br/><br/>This particular overload uses an Item instead of just the item type. All modded data will be preserved.
            <br/><br/>This particular overload uses a Vector2 instead of X and Y to determine the actual spawn position.
            </summary>
            <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/></returns>
        </member>
        <member name="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,Terraria.Item,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/>
            <br/><br/>This particular overload uses an Item instead of just the item type. All modded data will be preserved.
            <br/><br/>This particular overload uses a Vector2 instead of X, Y, Width, and Height to determine the actual spawn position.
            </summary>
            <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/></returns>
        </member>
        <member name="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Rectangle,Terraria.Item,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/>
            <br/><br/>This particular overload uses an Item instead of just the item type. All modded data will be preserved.
            <br/><br/>This particular overload uses a Rectangle instead of X, Y, Width, and Height to determine the actual spawn position.
            </summary>
            <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/></returns>
        </member>
        <member name="P:Terraria.Item.ResearchUnlockCount">
            <summary>
            A utility property for easily getting or setting the amount of items required for this item's current type to be researched.
            <br/> By default, all modded items will have this set to 1. Set to 0 for un-researchable items, such as items that disappear on pickup. The <see href="https://terraria.wiki.gg/wiki/Journey_Mode#Research">Journey Mode Research wiki page</see> lists values for various types of items, use it as a guide for consistency.
            <br/> <b>NOTE:</b> The accessed values are stored per item type, not per item instance. You're recommended to only use the setter in load-time hooks, like <see cref="M:Terraria.ModLoader.ModType.SetStaticDefaults"/>.
            </summary>
        </member>
        <member name="M:Terraria.Lang.CreateDialogFilter(System.String,System.Object)">
            <summary>
            Filters LocalizedText objects by checking if their key starts with the provided <paramref name="startsWith"/> parameter and if the conditions embedded into the LocalizedText are all satisfied by the data in <paramref name="substitutions"/>. See <see cref="M:Terraria.Localization.LocalizedText.CanFormatWith(System.Object)"/> for more information about conditions embedded in localization text. <br/><br/>
            When passed into <see cref="M:Terraria.Localization.Language.FindAll(Terraria.Localization.LanguageSearchFilter)"/>, all LocalizedText with keys starting with <paramref name="startsWith"/> that satisfy <paramref name="substitutions"/> will be returned. When passed into <see cref="M:Terraria.Localization.Language.SelectRandom(Terraria.Localization.LanguageSearchFilter,Terraria.Utilities.UnifiedRandom)"/>, a single random LocalizedText with key starting with <paramref name="startsWith"/> that satisfies <paramref name="substitutions"/> will be returned.<br/><br/>
            </summary>
            <param name="startsWith"></param>
            <param name="substitutions"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Lang.CreateDialogFilter(System.String)">
            <summary>
            Filters LocalizedText objects by checking if their key starts with the provided <paramref name="startsWith"/> parameter.<br/><br/>
            When passed into <see cref="M:Terraria.Localization.Language.FindAll(Terraria.Localization.LanguageSearchFilter)"/>, all LocalizedText with keys starting with <paramref name="startsWith"/> will be returned. When passed into <see cref="M:Terraria.Localization.Language.SelectRandom(Terraria.Localization.LanguageSearchFilter,Terraria.Utilities.UnifiedRandom)"/>, a single random LocalizedText with key starting with <paramref name="startsWith"/> will be returned.<br/><br/>
            </summary>
            <param name="startsWith"></param>
            <returns></returns>
        </member>
        <member name="T:Terraria.Localization.Language">
            <summary>
            Contains methods to access or retrieve localization values. The <see href="https://github.com/tModLoader/tModLoader/wiki/Localization">Localization Guide</see> teaches more about localization.
            </summary>
        </member>
        <member name="M:Terraria.Localization.Language.GetText(System.String)">
            <summary>
            Retrieves a LocalizedText object for a specified localization key. The actual text value can be retrieved from LocalizedText by accessing the <see cref="P:Terraria.Localization.LocalizedText.Value"/> property or by using the <see cref="M:Terraria.Localization.Language.GetTextValue(System.String)"/> method directly.<br/><br/>
            Using LocalizedText instead of string is prefered when the value is stored. If the user switches languages or if resource packs or mods change text, the LocalizedText will automatically receive the new value. In turn, mods using those LocalizedText will also start displaying the updated values.<br/><br/>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Localization.Language.GetTextValue(System.String)">
            <summary>
            Retrieves the text value for a specified localization key. The text returned will be for the currently selected language.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Localization.Language.GetTextValue(System.String,System.Object)">
            <inheritdoc cref="M:Terraria.Localization.LocalizedText.Format(System.Object[])"/>
        </member>
        <member name="M:Terraria.Localization.Language.GetTextValue(System.String,System.Object,System.Object)">
            <inheritdoc cref="M:Terraria.Localization.LocalizedText.Format(System.Object[])"/>
        </member>
        <member name="M:Terraria.Localization.Language.GetTextValue(System.String,System.Object,System.Object,System.Object)">
            <inheritdoc cref="M:Terraria.Localization.LocalizedText.Format(System.Object[])"/>
        </member>
        <member name="M:Terraria.Localization.Language.GetTextValue(System.String,System.Object[])">
            <inheritdoc cref="M:Terraria.Localization.LocalizedText.Format(System.Object[])"/>
        </member>
        <member name="M:Terraria.Localization.Language.GetTextValueWith(System.String,System.Object)">
            <inheritdoc cref="M:Terraria.Localization.LocalizedText.FormatWith(System.Object)"/>
        </member>
        <member name="M:Terraria.Localization.Language.Exists(System.String)">
            <summary>
            Checks if a LocalizedText with the provided key has been registered or not. This can be used to avoid retrieving dummy values from <see cref="M:Terraria.Localization.Language.GetText(System.String)"/> and <see cref="M:Terraria.Localization.Language.GetTextValue(System.String)"/> and instead load a fallback value or do other logic. If the key should be created if it doesn't exist, <see cref="M:Terraria.Localization.Language.GetOrRegister(System.String,System.Func{System.String})"/> can be used instead.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Localization.Language.FindAll(Terraria.Localization.LanguageSearchFilter)">
            <summary>
            Finds all LocalizedText that satisfy the <paramref name="filter"/> parameter. Typically used with <see cref="M:Terraria.Lang.CreateDialogFilter(System.String)"/> or <see cref="M:Terraria.Lang.CreateDialogFilter(System.String,System.Object)"/> as the <paramref name="filter"/> argument to find all LocalizedText that have a specific key prefix and satisfy provided conditions.
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Localization.Language.SelectRandom(Terraria.Localization.LanguageSearchFilter,Terraria.Utilities.UnifiedRandom)">
            <summary>
            Selects a single random LocalizedText that satisfies the <paramref name="filter"/> parameter. Typically used with <see cref="M:Terraria.Lang.CreateDialogFilter(System.String)"/> or <see cref="M:Terraria.Lang.CreateDialogFilter(System.String,System.Object)"/> as the <paramref name="filter"/> argument to find a random LocalizedText that has a specific key prefix and satisfies the provided conditions.
            </summary>
            <param name="filter"></param>
            <param name="random"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Localization.Language.GetOrRegister(System.String,System.Func{System.String})">
            <summary>
            Returns a <see cref="T:Terraria.Localization.LocalizedText"/> for a given key.
            <br/>If no existing localization exists for the key, it will be defined so it can be exported to a matching mod localization file.
            </summary>
            <param name="key">The localization key</param>
            <param name="makeDefaultValue">A factory method for creating the default value, used to update localization files with missing entries</param>
            <returns></returns>
        </member>
        <member name="T:Terraria.Localization.LocalizedText">
            <summary>
            Contains the localization value corresponding to a key for the current game language. Automatically updates as language, mods, and resource packs change. The <see href="https://github.com/tModLoader/tModLoader/wiki/Localization">Localization Guide</see> teaches more about localization.
            </summary>
        </member>
        <member name="P:Terraria.Localization.LocalizedText.Value">
            <summary>
            Retrieves the text value. This is the actual text the user should see.
            </summary>
        </member>
        <member name="M:Terraria.Localization.LocalizedText.FormatWith(System.Object)">
            <summary>
            Creates a string from this LocalizedText populated with data from the provided <paramref name="obj"/> parameter. The properties of the provided object are substituted by name into the placeholders of the original text. For example, when used with <see cref="M:Terraria.Lang.CreateDialogSubstitutionObject(Terraria.NPC)"/>, the text "{Nurse}" will be replaced with the first name of the Nurse in the world. Modded substitutions are not currently supported. <br/><br/>
            When used in conjuction with <see cref="M:Terraria.Localization.Language.SelectRandom(Terraria.Localization.LanguageSearchFilter,Terraria.Utilities.UnifiedRandom)"/> and <see cref="M:Terraria.Lang.CreateDialogFilter(System.String,System.Object)"/>, simple boolean conditions expressed in each LocalizedText can be used to filter a collection of LocalizedText.  <br/><br/>
            <see cref="M:Terraria.Localization.LocalizedText.Format(System.Object[])"/> is more commonly used to format LocalizedText placeholders. That method replaces placeholders such as "{0}", "{1}", etc with the string representation of the corresponding objects provided.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Localization.LocalizedText.CanFormatWith(System.Object)">
            <summary>
            Checks if the conditions embedded in this LocalizedText are satisfied by the <paramref name="obj"/> argument.
            For example when used with <see cref="M:Terraria.Lang.CreateDialogSubstitutionObject(Terraria.NPC)"/> as the <paramref name="obj"/> argument, "{?Rain}" at the start of a LocalizedText value will cause false to be returned if it is not raining. "{?!Rain}" would do the opposite. If all conditions are satisfied, true is returned.<br/>
            The method is typically used indirectly by using <see cref="M:Terraria.Lang.CreateDialogFilter(System.String,System.Object)"/>.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Localization.LocalizedText.Format(System.Object[])">
            <summary>
            Creates a string from this LocalizedText populated with data from the provided <paramref name="args"/> arguments. Formats the string in the same manner as <see href="https://learn.microsoft.com/en-us/dotnet/api/system.string.format?view=net-6.0">string.Format</see>. Placeholders such as "{0}", "{1}", etc will be replaced with the string representation of the corresponding objects provided.<br/>
            Additionally, pluralization is supported as well. The <see href="https://github.com/tModLoader/tModLoader/wiki/Contributing-Localization#placeholders">Contributing Localization Guide</see> teaches more about placeholders and plural support.
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Localization.LocalizedText.WithFormatArgs(System.Object[])">
             <summary>
             Creates a new LocalizedText with the supplied arguments formatted into the value (via <see cref="M:System.String.Format(System.String,System.Object[])"/>)<br/>
             Will automatically update to re-format the string with cached args when language changes. <br/>
            <br/>
             The resulting LocalizedText should be stored statically. Should not be used to create 'throwaway' LocalizedText instances. <br/>
             Use <see cref="M:Terraria.Localization.LocalizedText.Format(System.Object[])"/> instead for repeated on-demand formatting with different args.
             <br/> The <see href="https://github.com/tModLoader/tModLoader/wiki/Localization#string-formatting">Localization Guide</see> teaches more about using placeholders in localization.
             </summary>
             <param name="args">The substitution args</param>
             <returns></returns>
        </member>
        <member name="F:Terraria.Main.dayRate">
            <summary>
            The rate at which <see cref="F:Terraria.Main.time"/> updates per tick.
            <br/> Can be modified using <see cref="M:Terraria.ModLoader.ModSystem.ModifyTimeRate(System.Double@,System.Double@,System.Double@)"/>. Capped at <c>86,400.0</c>.
            </summary>
        </member>
        <member name="F:Terraria.Main.pvpBuff">
            <summary>
            Indexed by <see cref="T:Terraria.ID.BuffID"/>. If <see langword="true"/> for a given <see cref="T:Terraria.ID.BuffID"/>, then that buff can be applied to players by other players in PvP.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Main.persistentBuff">
            <summary>
            Allows status effects for which this is set to true to persist after the afflicted player's death.<br/>
            Defaults to false; all vanilla flask effects have their entries here set to true.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Main.vanityPet">
            <summary>
            Categorizes status effects for which this is set to true as being from vanity pets, preventing them from overlapping with other vanity pet status effects.<br/>
            Defaults to false; all vanilla vanity pets have their entries here set to true.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Main.lightPet">
            <summary>
            Categorizes status effects for which this is set to true as being tied to a light pet, preventing them from overlapping with other light pet status effects.<br/>
            Defaults to false; all vanilla light pets have their entries here set to true.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Main.meleeBuff">
            <summary>
            Categorizes status effects for which this is set to true as being from flasks, preventing them from overlapping with other flask status effects.<br/>
            Defaults to false; all vanilla flask effects have their entries here set to true.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Main.debuff">
            <summary>
            Categorizes status effects for which this is set to true as being debuffs instead of buffs.<br/>
            This has multiple effects on gameplay:<br/>
            - the Nurse can remove the status effect when healing the afflicted player (to prevent this, refer to <see cref="F:Terraria.ID.BuffID.Sets.NurseCannotRemoveDebuff"/>)<br/>
            - the status effect cannot be cleared from overflowing the status effect cap (buffs will be cleared instead)<br/>
            - the status effect cannot be cleared by right-clicking it (which can be done for all other status effect types)<br/>
            Defaults to false; all vanilla debuffs have their entries here set to true.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Main.buffNoSave">
            <summary>
            Indexed by <see cref="T:Terraria.ID.BuffID"/>. If <see langword="true"/> for a given <see cref="T:Terraria.ID.BuffID"/>, then that buff will not be saved when exiting a world.
            <br/> Vanilla sets this for DoT effects (<see cref="F:Terraria.ID.BuffID.Poisoned"/>), short item buffs (<see cref="F:Terraria.ID.BuffID.Panic"/>), mount buffs, and conditionally-applied buffs (<see cref="F:Terraria.ID.BuffID.Campfire"/>, <see cref="F:Terraria.ID.BuffID.Werewolf"/>).
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Main.buffNoTimeDisplay">
            <summary>
            Prevents status effects which have their entries set to true from displaying the amount of time they have left.<br/>
            Defaults to false; most, if not all, status effects which have their entries set to true here are related to mounts, pets, and summons.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Main.maxTilesX">
            <summary>
            The width of the currently-loaded world in tiles.
            </summary>
        </member>
        <member name="F:Terraria.Main.maxTilesY">
            <summary>
            The height of the currently-loaded world in tiles.
            </summary>
        </member>
        <member name="F:Terraria.Main.worldSurface">
            <summary>
            The y-coordinate of the top of the dirt layer, in tile coordinates. Corresponds to 0' on the Depth Meter.
            </summary>
            <remarks>Players under the surface will have <see cref="P:Terraria.Player.ZoneDirtLayerHeight"/> set to <see langword="true"/>.</remarks>
        </member>
        <member name="F:Terraria.Main.rockLayer">
            <summary>
            The y-coordinate of the top of the caverns layer, in tile coordinates.
            </summary>
            <remarks>Players in this layer will have <see cref="P:Terraria.Player.ZoneRockLayerHeight"/> set to <see langword="true"/>.</remarks>
        </member>
        <member name="F:Terraria.Main.time">
            <summary>
            The time that has passed since it last became day/night.
            <br/> Increased by <see cref="F:Terraria.Main.dayRate"/> every tick.
            <br/> If it is <see cref="F:Terraria.Main.dayTime"/>, this caps at <see cref="F:Terraria.Main.dayLength"/>. Otherwise, this caps at <see cref="F:Terraria.Main.nightLength"/>.
            </summary>
            <remarks>
            If you need 24-hour time, use <see cref="M:Terraria.Utils.GetDayTimeAs24FloatStartingFromMidnight"/>.
            </remarks>
        </member>
        <member name="F:Terraria.Main.projFrames">
            <summary>
            Indicates how many frames of animation are in each projectile type spritesheet.<br/>
            Use <see cref="F:Terraria.Projectile.frame"/> to animate the projectile.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Projectile#animationmultiple-frames">Basic Projectile Guide</see> teaches how to animate projectiles.<br/>
            Indexed by <see cref="F:Terraria.Projectile.type"/>. Defaults to 1.
            </summary>
        </member>
        <member name="F:Terraria.Main.tileLighted">
            <summary>
            Indexed by <see cref="T:Terraria.ID.TileID"/>. If <see langword="true"/> for a given <see cref="T:Terraria.ID.TileID"/>, then that tile produces light.
            <br/> You can set the light color for tile using <see cref="M:Terraria.ModLoader.ModBlockType.ModifyLight(System.Int32,System.Int32,System.Single@,System.Single@,System.Single@)"/> or <see cref="M:Terraria.ModLoader.GlobalBlockType.ModifyLight(System.Int32,System.Int32,System.Int32,System.Single@,System.Single@,System.Single@)"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Main.tileMergeDirt">
            <summary>
            Indexed by <see cref="T:Terraria.ID.TileID"/>. If <see langword="true"/> for a given <see cref="T:Terraria.ID.TileID"/>, then that tile has frames for merging with <see cref="F:Terraria.ID.TileID.Dirt"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Main.tileCut">
            <summary>
            If true, Tiles of the indexed Tile Type will be destroyed by weapons and projectiles.
            </summary>
        </member>
        <member name="F:Terraria.Main.tileShine">
            <summary>
            How rarely tiny ambient dust appear from this tile. Larger values mean less frequently
            </summary>
        </member>
        <member name="F:Terraria.Main.tileShine2">
            <summary>
            If true, the tile will be drawn to be slightly more bright. 
            </summary>
        </member>
        <member name="F:Terraria.Main.wallHouse">
            <summary>
            If true, the wall is considered "safe" for enemy spawning purposes.
            </summary>
        </member>
        <member name="F:Terraria.Main.tileAxe">
            <summary>
            If true for the given tile type, tiles of the type are mined using an axe instead of pickaxe.
            </summary>
        </member>
        <member name="F:Terraria.Main.tileWaterDeath">
            <summary>
            If true for the given tile type, tiles of the type will be destroyed if in contact with water. <see cref="P:Terraria.ObjectData.TileObjectData.WaterDeath"/> supersedes this if a <see cref="T:Terraria.ObjectData.TileObjectData"/> is available.
            </summary>
        </member>
        <member name="F:Terraria.Main.tileLavaDeath">
            <summary>
            If true for the given tile type, tiles of the type will be destroyed if in contact with lava. <see cref="P:Terraria.ObjectData.TileObjectData.LavaDeath"/> supersedes this if a <see cref="T:Terraria.ObjectData.TileObjectData"/> is available.
            </summary>
        </member>
        <member name="F:Terraria.Main.tileSpelunker">
            <summary>
            If true for the given tile type, tiles will be drawn much brighter and give off additional dust if the player is under the effects of the Spelunker buff, magic lantern, or similar effect. 
            </summary>
        </member>
        <member name="F:Terraria.Main.tileOreFinderPriority">
            <summary>
            The priority of this tile in relation to the Metal Detector. The tile with the highest priority in range will show the corresponding map entry. The <see href="https://terraria.wiki.gg/wiki/Metal_Detector">Metal Detector wiki page</see> lists existing values to use as reference.
            </summary>
        </member>
        <member name="F:Terraria.Main.tileFrameImportant">
            <summary> Set to true if this is not a typical Terrain tile. Terrain tiles are 1x1 tiles that automatically adjust their frame values to nearby tiles. They don't have a TileObjectData.
            <br/> All non-1x1 tiles should set this to true. All 1x1 tiles that have a TileObjectData or that shoud preserve frame data should set this to true. </summary>
        </member>
        <member name="F:Terraria.Main.tileFlame">
            <summary>If true, indicates that a tile has a flame texture that will draw over the tile. Modded tiles should not use this. <see cref="M:Terraria.ModLoader.ModBlockType.PostDraw(System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch)"/> can be used to manually draw a flame texture.</summary>
        </member>
        <member name="F:Terraria.Main.npcCatchable">
            <summary>
            Used to denote an NPC as being catchable by bug nets and similar.<br/>
            Contrary to its name, this array isn't actually used for catching logic at all.<br/>
            It is instead used to determine if an NPC can be released back into the world after being caught.<br/>
            These NPC will be forced <see cref="F:Terraria.NPC.friendly"/> for 1.5 seconds if naturally spawned.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Main.screenPosition">
            <summary>
            The position of the top left corner of the screen in world coordinates. Modify in <see cref="M:Terraria.ModLoader.ModSystem.ModifyScreenPosition"/> or <see cref="M:Terraria.ModLoader.ModPlayer.ModifyScreenPosition"/>. Also consider using <c>Main.instance.CameraModifiers.Add(CameraModifier);</c> as shown in ExampleMods MinionBossBody for screen shakes.<br/><br/>
            When manually drawing, subtracting Main.screenPosition from the world position of the thing being drawn will result in the correct screen coordinates for use in <see cref="T:Microsoft.Xna.Framework.Graphics.SpriteBatch"/>.Draw methods. When drawing tiles or walls, an additional offset calculated as <c>Vector2 zero = Main.drawToScreen? Vector2.Zero : new Vector2(Main.offScreenRange, Main.offScreenRange);</c> needs to be added to the coordinates.
            </summary>
        </member>
        <member name="F:Terraria.Main.myPlayer">
            <summary>
            The index in <see cref="F:Terraria.Main.player"/> of this client's Player.
            <br/> If this is <c>255</c>, this client is the server.
            </summary>
        </member>
        <member name="F:Terraria.Main.clientPlayer">
            <summary>
            Used internally for network syncing. Use <see cref="P:Terraria.Main.LocalPlayer"/> to access the player for the local user.
            </summary>
        </member>
        <member name="F:Terraria.Main.netMode">
            <summary>
            Denotes the current network mode: <b>0</b> for single player client, <b>1</b> for multiplayer client, and <b>2</b> for server.<br/>
            Using <see cref="T:Terraria.ID.NetmodeID"/> entries instead of 0, 1, and 2 will greatly enhance code readability.<br/>
            Modders must properly use netMode to selectively run code. Following examples in ExampleMod and Terraria code as well as reading the <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Netcode">Basic Netcode guide</see> are the best way to learn how to use netMode correctly.<br/>
            </summary>
        </member>
        <member name="P:Terraria.Main.MouseScreen">
            <summary>
            Fetches the position of the mouse cursor on the screen.<br/>
            Useful for making things visually happen near the cursor.<br/>
            </summary>
        </member>
        <member name="P:Terraria.Main.MouseWorld">
            <summary>
            Fetches the position of the mouse cursor in the world.<br/>
            Useful for making things functionally happen near the cursor, such as projectile or NPC spawns.<br/>
            </summary>
        </member>
        <member name="P:Terraria.Main.UnderworldLayer">
            <summary>
            The y-coordinate of the top of the underworld, in tile coordinates.
            </summary>
            <remarks>Player in this layer will have <see cref="!:Player.ZoneUnderworld"/> set to <see langword="true"/>.</remarks>
        </member>
        <member name="P:Terraria.Main.LocalPlayer">
            <summary>
            Retrieves the <see cref="T:Terraria.Player"/> object for the local user. Shorthand for <c><see cref="F:Terraria.Main.player"/>[<see cref="F:Terraria.Main.myPlayer"/>]</c>.<br/>
            Many gameplay elements such as recipes, UI, TownNPC chat, and Biome logic are only executed locally, <see cref="P:Terraria.Main.LocalPlayer"/> is suitable for code relating to those situations. If the hook has a <see cref="T:Terraria.Player"/> parameter, it is likely not suitable to use <see cref="P:Terraria.Main.LocalPlayer"/> in it.
            </summary>
        </member>
        <member name="M:Terraria.Main.RegisterItemAnimation(System.Int32,Terraria.DataStructures.DrawAnimation)">
            <summary>
            Registers an animation for an item type to draw inside UI (not world or held item on player).
            To enable its animation in the world, use ItemID.Sets.AnimatesAsSoul in conjunction with this
            </summary>
            <param name="index">Item type</param>
            <param name="animation">Draw animation</param>
        </member>
        <member name="M:Terraria.Main.DrawHealthBar(System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            Draws a small health bar.
            <br/> <see cref="F:Terraria.Main.spriteBatch"/> should <strong>already be started</strong> before calling this method.
            </summary>
            <param name="X">The x-coordinate of the health bar in world coordinates.</param>
            <param name="Y">The y-coordinate of the health bar in world coordinates.</param>
            <param name="Health">
            The current health displayed. The health bar is drawn <c><paramref name="Health"/> / <paramref name="MaxHealth"/></c> percent full.
            <br/> If <c><paramref name="Health"/> &lt;= 0</c>, no health bar is drawn.
            <br/> If <c><paramref name="Health"/> &gt; <paramref name="MaxHealth"/></c>, the health bar will not exceed max capacity.
            </param>
            <param name="MaxHealth">The maximum health displayed. The health bar is drawn <c><paramref name="Health"/> / <paramref name="MaxHealth"/></c> percent full.</param>
            <param name="alpha">The opacity of the healthbar, where <c>0f</c> is transparent and <c>1f</c> is opaque.</param>
            <param name="scale">The visual scale of the health bar.</param>
            <param name="noFlip">If <see langword="true"/>, then the health bar will not adjust its y-position for players with reversed gravity.</param>
        </member>
        <member name="M:Terraria.Main.GetItemDrawFrame(System.Int32,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Rectangle@)">
            <summary>
            Gets the texture and frame of the given item type (<see cref="F:Terraria.Item.type"/>).
            </summary>
            <param name="item">The item type to use.</param>
            <param name="itemTexture">The <see cref="T:Microsoft.Xna.Framework.Graphics.Texture2D"/> in <see cref="F:Terraria.GameContent.TextureAssets.Item"/> of <paramref name="item"/>.</param>
            <param name="itemFrame">The <see cref="T:Microsoft.Xna.Framework.Rectangle"/> covering this item's current frame on <paramref name="itemTexture"/>.</param>
        </member>
        <member name="M:Terraria.Main.TryGetBuffTime(System.Int32,System.Int32@)">
            <summary>
            Checks if the buff at index <paramref name="buffSlotOnPlayer"/> is allowed to draw a "remaining time" text, and sets <paramref name="buffTimeValue"/> to it.
            <para>Check <paramref name="buffTimeValue"/> > 2 afterwards if you want to mirror text draw logic.</para>
            </summary>
            <param name="buffSlotOnPlayer">The index for buffType and buffTime</param>
            <param name="buffTimeValue">The "remaining time" in ticks</param>
            <returns><see langword="true"/> if <paramref name="buffTimeValue"/> is set, otherwise <see langword="false"/></returns>
        </member>
        <member name="M:Terraria.Main.DrawBuffIcon(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the buff icon corresponding to the buff in Main.LocalPlayer.buffType[<paramref name="buffSlotOnPlayer"/>].
            <para>Calls TML hooks related to drawing and clicking.</para>
            <para>Has two exclusive contexts: Below the accessory slots (Main.EquipPage == 2), and regular under-the-inventory.</para>
            </summary>
            <param name="drawBuffText">The return from a previous DrawBuffIcon call, -1 if first drawn buff</param>
            <param name="buffSlotOnPlayer">The index for buffType and buffTime</param>
            <param name="x">Top-left draw position on the x-axis</param>
            <param name="y">Top-left draw position on the y-axis</param>
            <returns>The index of the currently mouseovered buff icon, equal to <paramref name="buffSlotOnPlayer"/> if it's currently mouseovered, -1 otherwise</returns>
        </member>
        <member name="M:Terraria.Main.TryRemovingBuff(System.Int32,System.Int32)">
            <summary>
            Calls Player.DelBuff with index i after checking Main.debuff of buff type b. Will toggle Player.hideMisc for pet and light pet.
            </summary>
            <param name="i">The index for buffType and buffTime</param>
            <param name="b">The buff type</param>
        </member>
        <member name="M:Terraria.Main.NewText(System.Object,System.Nullable{Microsoft.Xna.Framework.Color})">
            <inheritdoc cref="M:Terraria.Main.NewText(System.String,System.Byte,System.Byte,System.Byte)"/>
        </member>
        <member name="M:Terraria.Main.NewText(System.String,System.Byte,System.Byte,System.Byte)">
            <summary>
            Spawns chat text on the local client. Does nothing on the server. <br />
            For floating text, such as damage, see <see cref="T:Terraria.CombatText" /> <br />
            <VariousTextOptionsSummary>
        <br />Summary of options to display text to the user:<br />
        • <see cref="M:Terraria.Main.NewText(System.String,System.Byte,System.Byte,System.Byte)" /> to display a message in chat. <br />
        • <see cref="T:Terraria.CombatText" /> to display floating damage numbers in-game. Used for damage and healing numbers. <br />
        • <see cref="T:Terraria.PopupText" /> to display non-overlapping floating in-game text. Used for reforge and item pickup messages. <br />
    </VariousTextOptionsSummary>
            </summary>
        </member>
        <member name="M:Terraria.Main.StopRain">
            <summary>
            Stops rain. Should be called on the server (netMode != client) - vanilla syncs it using <see cref="M:Terraria.Main.SyncRain"/>.
            <br>You can also call this on the client to update visuals immediately, assuming it was called serverside as well (Journey Mode rain slider does this).</br>
            </summary>
        </member>
        <member name="M:Terraria.Main.StartRain">
            <summary>
            Starts rain for a random amount of time. Should be called on the server (netMode != client) - vanilla syncs it using <see cref="M:Terraria.Main.SyncRain"/>.
            <br>You can also call this on the client to update visuals immediately, assuming it was/will be called serverside as well (Journey Mode rain slider does this).</br>
            </summary>
        </member>
        <member name="M:Terraria.Main.DamageVar(System.Single,System.Single)">
            <summary>
            Multiplies the input damage by a random value between <c>0.85f</c> and <c>1.15f</c>.
            </summary>
            <param name="dmg">The damage to vary.</param>
            <param name="luck">
            How lucky the damager is, in the range [-1f, 1f].
            <br/> If <c><paramref name="luck"/> &gt; 0f</c>, there is a <c><paramref name="luck"/></c>% chance that damage variation is rerolled, with the higher value being used.
            <br/> If <c><paramref name="luck"/> &lt; 0f</c>, there is a <c>-<paramref name="luck"/></c>% chance that damage variation is rerolled, with the lower value being used.
            </param>
            <returns>The varied damage value, rounded to the nearest integer.</returns>
        </member>
        <member name="F:Terraria.Main.worldEventUpdates">
            <summary>
            Representation that dictates the actual amount of "world event updates" that happen in a given GAME tick. This number increases/decreases in direct tandem with
            <seealso cref="F:Terraria.Main.desiredWorldEventsUpdateRate"/>.
            </summary>
        </member>
        <member name="P:Terraria.Main.CurrentPlayer">
            <summary>
            A replacement for `Main.LocalPlayer` which respects whichever player is currently running hooks on the main thread.
            This works in the player select screen, and in multiplayer (when other players are updating)
            </summary>
        </member>
        <member name="M:Terraria.Main.IsTileSpelunkable(System.Int32,System.Int32)">
            <summary>
            Checks if a tile at the given coordinates counts towards tile coloring from the Spelunker buff, and is detected by various pets.
            </summary>
        </member>
        <member name="M:Terraria.Main.SyncRain">
            <summary>
            Syncs rain state if <see cref="M:Terraria.Main.StartRain"/> or <see cref="M:Terraria.Main.StopRain"/> were called in the same tick and caused a change to <seealso cref="F:Terraria.Main.maxRaining"/>.
            <br>Can be called on any side, but only the server will actually sync it.</br>
            </summary>
        </member>
        <member name="M:Terraria.Main.RunOnMainThread(System.Action)">
            <summary>
            Wait for an action to be performed on the main thread.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Terraria.Main.RunOnMainThread``1(System.Func{``0})">
            <summary>
            Wait for an action to be performed on the main thread.
            </summary>
            <param name="func"></param>
        </member>
        <member name="T:Terraria.ModLoader.AccessorySlotLoader">
            <summary>
            This serves as a central place to store equipment slots and their corresponding textures. You will use this to obtain the IDs for your equipment textures.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.AccessorySlotLoader.DrawVerticalAlignment">
            <summary>
            The variable known as num20 used to align all equipment slot drawing in Main.
            Represents the y position where equipment slots start to be drawn from.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.AccessorySlotLoader.DefenseIconPosition">
            <summary>
            The variable that determines where the DefenseIcon will be drawn, after considering all slot information.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.AccessorySlotLoader.Draw(System.Int32,System.Boolean,System.Int32,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws Vanilla and Modded Accessory Slots
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.AccessorySlotLoader.SetDrawLocation(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Applies Xloc and Yloc data for the slot, based on ModAccessorySlotPlayer.scrollSlots
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.AccessorySlotLoader.DrawVisibility(System.Boolean@,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,Microsoft.Xna.Framework.Graphics.Texture2D@)">
            <summary>
            Is run in AccessorySlotLoader.Draw.
            Creates &amp; sets up Hide Visibility Button.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.AccessorySlotLoader.DrawSlot(Terraria.Item[],System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Is run in AccessorySlotLoader.Draw.
            Generates a significant amount of functionality for the slot, despite being named drawing because vanilla.
            At the end, calls this.DrawRedirect to enable custom drawing
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.AccessorySlotLoader.GetBackgroundTexture(System.Int32,System.Int32)">
            <summary>
            Provides the Texture for a Modded Accessory Slot
            This probably will need optimization down the road.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.AccessorySlotLoader.ModSlotCheck(Terraria.Item,System.Int32,System.Int32)">
            <summary>
            Checks if the provided item can go in to the provided slot.
            Includes checking if the item already exists in either of Player.Armor or ModSlotPlayer.exAccessorySlot
            Invokes directly ItemSlot.AccCheck &amp; ModSlot.CanAcceptItem
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.AccessorySlotLoader.ModifyDefaultSwapSlot(Terraria.Item,System.Int32@)">
            <summary>
            After checking for empty slots in ItemSlot.AccessorySwap, this allows for changing what the target slot will be if the accessory isn't already equipped.
            DOES NOT affect vanilla behavior of swapping items like for like where existing in a slot
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.AccessorySlotLoader.PreferredGolfBall(System.Int32@)">
            <summary>
            Mirrors Player.GetPreferredGolfBallToUse.
            Provides the golf ball projectile from an accessory slot.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.AsyncProvider`1.#ctor(System.Collections.Generic.IAsyncEnumerable{`0})">
            <remarks>
              Remember to provide your enumerator with
              `[EnumeratorCancellation] CancellationToken token = default`
              as argument to allow cancellation notification.
            </remarks>
        </member>
        <member name="T:Terraria.ModLoader.AutoloadAttribute">
            <summary>
            Allows for types to be autoloaded and unloaded.
            True to always autoload, false to never autoload, null to use mod default.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.BackgroundTextureLoader">
            <summary>
            This is the class that keeps track of all modded background textures and their slots/IDs.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackgroundTextureLoader.GetBackgroundSlot(System.String)">
            <summary> Returns the slot/ID of the background texture with the given full path. The path must be prefixed with a mod name. Throws exceptions on failure. </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackgroundTextureLoader.GetBackgroundSlot(Terraria.ModLoader.Mod,System.String)">
            <summary> Returns the slot/ID of the background texture with the given mod and path. Throws exceptions on failure. </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackgroundTextureLoader.TryGetBackgroundSlot(System.String,System.Int32@)">
            <summary> Safely attempts to output the slot/ID of the background texture with the given full path. The path must be prefixed with a mod name. </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackgroundTextureLoader.TryGetBackgroundSlot(Terraria.ModLoader.Mod,System.String,System.Int32@)">
            <summary> Safely attempts to output the slot/ID of the background texture with the given mod and path. </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackgroundTextureLoader.AddBackgroundTexture(Terraria.ModLoader.Mod,System.String)">
            <summary>
            Adds a texture to the list of background textures and assigns it a background texture slot.
            </summary>
            <param name="mod">The mod that owns this background.</param>
            <param name="texture">The texture.</param>
        </member>
        <member name="T:Terraria.ModLoader.UndergroundBackgroundStylesLoader">
            <summary>
            This serves as the central class from which ModUndergroundBackgroundStyle functions are supported and carried out.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.BossBarLoader.drawingInfo">
            <summary>
            Set to the current info that is being drawn just before any registered bar draws through the vanilla system (modded and vanilla), reset in the method used to draw it.
            <para>Allows tML to short-circuit the draw method and make ModBossBar and GlobalBossBar modify the draw parameters. Is null if a ModBossBarStyle skips drawing</para>
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.BossBarLoader.styleLoading">
            <summary>
            Used to prevent switching to the default style while the mods are loading (The code responsible for it runs in the main menu too)
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.BossBarLoader.lastSelectedStyle">
            <summary>
            The string that is saved in the config
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.BossBarLoader.bossBarTextures">
            <summary>
            Only contains textures that exist.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BossBarLoader.SwitchBossBarStyle(Terraria.ModLoader.ModBossBarStyle)">
            <summary>
            Sets the pending style that should be switched to
            </summary>
            <param name="bossBarStyle">Pending boss bar style</param>
        </member>
        <member name="M:Terraria.ModLoader.BossBarLoader.GotoSavedStyle">
            <summary>
            Sets the saved style that should be switched to, handles possibly unloaded/invalid ones and defaults to the vanilla style
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BossBarLoader.HandleStyle">
            <summary>
            Checks if the style was changed and applies it, saves the config if required
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BossBarLoader.GetTexture(Terraria.ModLoader.ModBossBar)">
            <summary>
            Returns the texture that the given bar is using. If it does not have a custom one, it returns the vanilla texture
            </summary>
            <param name="bossBar">The ModBossBar</param>
            <returns>Its texture, or the vanilla texture</returns>
        </member>
        <member name="M:Terraria.ModLoader.BossBarLoader.NpcToBossBar(Terraria.NPC,Terraria.ModLoader.ModBossBar@)">
            <summary>
            Gets the ModBossBar associated with this NPC
            </summary>
            <param name="npc">The NPC</param>
            <param name="value">When this method returns, contains the ModBossBar associated with the specified NPC</param>
            <returns><see langword="true"/> if a ModBossBar is assigned to it; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Terraria.ModLoader.BossBarLoader.InsertMenu(System.Action@)">
            <summary>
            Inserts the boss bar style select option into the main and in-game menu under the "Interface" category
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BossBarLoader.DrawFancyBar_TML(Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.DataStructures.BossBarDrawParams)">
            <summary>
            Draws a healthbar with fixed barTexture dimensions (516x348) where the effective bar top left starts at 32x24, and is 456x22 big
            <para>The icon top left starts at 4x20, and is 26x28 big</para>
            <para>Frame 0 contains the frame (outline)</para>
            <para>Frame 1 contains the 2 pixel wide strip for the tip of the bar itself</para>
            <para>Frame 2 contains the 2 pixel wide strip for the bar itself, stretches out</para>
            <para>Frame 3 contains the background</para>
            <para>Frame 4 contains the 2 pixel wide strip for the tip of the bar itself (optional shield)</para>
            <para>Frame 5 contains the 2 pixel wide strip for the bar itself, stretches out (optional shield)</para>
            <para>Supply your own textures if you need a different shape/color, otherwise you can make your own method to draw it</para>
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="drawParams">The draw parameters for the boss bar</param>
        </member>
        <member name="T:Terraria.ModLoader.BuffLoader">
            <summary>
            This serves as the central class from which buff-related functions are supported and carried out.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BuffLoader.GetBuff(System.Int32)">
            <summary>
            Gets the ModBuff instance with the given type. If no ModBuff with the given type exists, returns null.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.BuildInfo.BuildDate">
            <summary>
            local time, for display purposes
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.CloneByReference">
            <summary>
            Indicates that references to this object can be shared between clones.
            When applied to a class, applies to all fields/properties of that type.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.CommandLoader">
            <summary>
            This serves as the central class from which ModCommand functions are supported and carried out.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.CommandLoader.GetCommand(Terraria.ModLoader.CommandCaller,System.String,Terraria.ModLoader.ModCommand@)">
            <summary>
            Finds a command by name. Handles mod prefixing. Replies with error messages.
            </summary>
            <param name="caller">Handles relaying the results of the command and narrows down the search by CommandType context</param>
            <param name="name">The name of the command to retrieve</param>
            <param name="mc">The found command, or null if an error was encountered.</param>
            <returns>True if a ModCommand was found, or an error message was replied. False if the command is unrecognized.</returns>
        </member>
        <member name="T:Terraria.ModLoader.Config.BackgroundColorAttribute">
            <summary>
            Specifies a background color to be used for the property, field, or class in the ModConfig UI.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.SliderColorAttribute">
            <summary>
            Specifies a slider color for ModConfig elements that use a slider. The default color is white.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.ReloadRequiredAttribute">
            <summary>
            This attribute hints that changing the value of the annotated property or field will put the config in a state that requires a reload. An overridden ModConfig.NeedsReload can further validate if more complex logic is needed.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.LabelKeyAttribute">
            <summary>
            A label is the text shown to the user in the ModConfig UI. <br/>
            This attribute sets a custom localization key for the label of the annotated property, field, or class. <br/>
            The provided localization key must start with "$". <br/>
            Without this attribute, the localization key "Mods.{ModName}.Configs.{ConfigName}.{MemberName}.Label" will be assumed for members of ModConfig classes. <br/>
            Annotations on members of non-ModConfig classes need to supply a custom localization key using this attribute to be localized, otherwise they will appear as the member name directly. <br/>
            If the translation value of a property or field that is an object is an empty string, the label of the class will be used instead. <br/>
            Values can be interpolated into the resulting label text using <see cref="T:Terraria.ModLoader.Config.LabelArgsAttribute"/>. <br/>
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.LabelArgsAttribute">
            <summary>
            Use to provide values to be interpolated into the label of the annotated property or field.<br/>
            string arguments starting with "$" are interpreted as localization keys.<br/>
            Interpolating values can be useful for reusing common labels to keep localization files clean and organized.<br/>
            For example, if a mod provides toggles for several features, a common label could be used for each with only the provided value being different.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Localization#string-formatting">string formatting section of the Localization wiki page</see> explains this concept further.<br/>
            <see href="https://github.com/tModLoader/tModLoader/wiki/Localization#scope-simplification">Scope simplification</see> can be used to shorten localization keys passed in.<br/>
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.TooltipKeyAttribute">
            <summary>
            A tooltip is the text shown to the user in the ModConfig UI next to the cursor when they hover over the annotated member (property, field, or class). This can be longer and more descriptive than the Label. <br/>
            This attribute sets a custom localization key for the tooltip of the annotated property, field, or class. <br/>
            The provided localization key must start with "$". <br/>
            Without this attribute, the localization key "Mods.{ModName}.Configs.{ConfigName}.{MemberName}.Tooltip" will be assumed for members of ModConfig classes. <br/>
            Annotations on members of non-ModConfig classes need to supply a custom localization key using this attribute to be localized, no localization key is assumed.
            If the translation value of a property or field that is an object is an empty string, the tooltip of the class will be used instead.
            Passing in just "$" will result in no tooltip entry being added to the localization files.<br/>
            Values can be interpolated into the resulting label text using <see cref="T:Terraria.ModLoader.Config.TooltipArgsAttribute"/>. <br/>
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.TooltipArgsAttribute">
            <summary>
            Use to provide values to be interpolated into the tooltip of the annotated property or field.<br/>
            string arguments starting with "$" are interpreted as localization keys.<br/>
            Interpolating values can be useful for reusing common tooltips to keep localization files clean and organized.<br/>
            For example, if a mod provides toggles for several features, a common tooltip could be used for each with only the provided value being different.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Localization#string-formatting">string formatting section of the Localization wiki page</see> explains this concept further.<br/>
            <see href="https://github.com/tModLoader/tModLoader/wiki/Localization#scope-simplification">Scope simplification</see> can be used to shorten localization keys passed in.<br/>
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.ShowDespiteJsonIgnoreAttribute">
            <summary>
            This attribute indicates that the field or property should be shown in the ModConfig UI despite having a <see cref="T:Newtonsoft.Json.JsonIgnoreAttribute"/> annotation.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.HeaderAttribute">
            <summary>
            This attribute adds a label above this property or field in the ModConfig UI that acts as a header. Use this to delineate sections within your config. <br/>
            Note that fields will be in order, and properties will be in order, but fields and properties will not be interleaved together in the source code order. <br/>
            <br/>
            Header accept either a translation key or an identifier. <br/>
            To use a translation key, the value passed in must start with "$". <br/>
            A value passed in that does not start with "$" is interpreted as an identifier. The identifier is used to construct the localization key "Mods.{ModName}.Configs.{ConfigName}.Headers.{Identifier}" <br/>
            No spaces are allowed in translation keys, so avoid spaces <br/>
            Annotations on members of non-ModConfig classes need to supply a localization key using this attribute to be localized, no localization key can be correctly assumed using just an identifier. <br/>
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.CustomModConfigItemAttribute">
            <summary>
            Use this attribute to specify a custom UI element to be used for the annotated property, field, or class in the ModConfig UI.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.JsonDefaultValueAttribute">
            <summary>
            Similar to DefaultValueAttribute but for reference types. It uses a json string that will be used populate this element when initialized. Defines the default value, expressed as json, to be used to populate an object with the NullAllowed attribute. Modders should only use this in conjuction with NullAllowed, as simply initializing the field with a default value is preferred.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.DefaultListValueAttribute">
            <summary>
            Defines the default value to be added when using the ModConfig UI to add elements to a Collection (List, Set, or Dictionary value). Works the same as System.ComponentModel.DefaultValueAttribute, but can't inherit from it because it would break when deserializing any data structure annotated with it.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.DefaultDictionaryKeyValueAttribute">
            <summary>
            Defines the default key value to be added when using the ModConfig UI to add elements to a Dictionary. Works the same as System.ComponentModel.DefaultValueAttribute, but can't inherit from it because it would break when deserializing any data structure annotated with it. This attribute compliments DefaultListValueAttribute when used annotating a Dictionary.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.JsonDefaultListValueAttribute">
            <summary>
            Similar to DefaultListValueAttribute but for reference types. It uses a json string that will be used populate new instances list elements. Defines the default value, expressed as json, to be added when using the ModConfig UI to add elements to a Collection (List, Set, or Dictionary value).
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.JsonDefaultDictionaryKeyValueAttribute">
            <summary>
            Similar to JsonDefaultListValueAttribute, but for assigning to the Dictionary Key rather than the Value.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.OptionStringsAttribute">
            <summary>
            By default, string fields will provide the user with a text input field. Use this attribute to restrict strings to a selection of options.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.IncrementAttribute">
            <summary>
            Use this to set an increment for sliders. The slider will move by the amount assigned. Remember that this is just a UI suggestion and manual editing of config files can specify other values, so validate your values.
            Defaults are: float: 0.01f - byte/int/uint: 1
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.RangeAttribute">
            <summary>
            Specifies a range for primitive data values. Without this, default min and max are as follows: float: 0, 1 - int/uint: 0, 100 - byte: 0, 255
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.SliderAttribute">
            <summary>
            Affects whether this data will be presented as a slider or an input field. Add this attribute to use a slider. Currently only affects data of type int.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.DrawTicksAttribute">
            <summary>
            Add this attribute and the sliders will show white tick marks at each increment.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.ColorNoAlphaAttribute">
            <summary>
            Add this attribute to a Color item and Alpha will not be presented in the UI and will remain as 255 unless manually edited.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.ColorHSLSliderAttribute">
            <summary>
            Add this attribute to a Color item and the UI will present a Hue, Saturation, and Lightness sliders rather than Red, Green, and Blue sliders. Pass in false to skip Saturation and Lightness.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.SeparatePageAttribute">
            <summary>
            This specifies that the annotated item will appear as a button that leads to a separate page in the UI. Use this to organize hierarchies.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.NullAllowedAttribute">
            <summary>
            This attribute means the annotated item can possibly be null. This will allow the UI to make the item null. It is up to the modder to make sure the item isn't null in the ModConfig constructor and nested classes.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.ExpandAttribute">
            <summary>
            Affects whether this data will be expanded by default. The default value currently is true. Use the constructor with 2 parameters to control if list elements should be collapsed or expanded.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.ReferenceDefaultsPreservingResolver">
            <summary>
            Custom ContractResolver for facilitating refernce type defaults.
            The ShouldSerialize code enables unchanged-by-user reference type defaults to properly not serialize.
            The ValueProvider code helps during deserialization to not
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.ConfigScope">
            <summary>
            Each ModConfig class has a different scope. Failure to use the correct mode will lead to bugs.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.Config.ConfigScope.ServerSide">
            <summary>
            This config is shared between all clients and maintained by the server. Use this for game-play changes that should affect all players the same. ServerSide also covers single player as well.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.Config.ConfigScope.ClientSide">
            <summary>
            This config is specific to the client. Use this for personalization options.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.EntityDefinition">
            <summary>
            Classes implementing EntityDefinition serve to function as a way to save and load the identities of various Terraria objects. Only the identity is preserved, no other data such as stack size, damage, etc. These classes are well suited for ModConfig, but can be saved and loaded in a TagCompound as well.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.ItemDefinition">
            <summary>
            ItemDefinition represents an Item identity. A typical use for this class is usage in ModConfig, perhapse to facilitate an Item tweaking mod.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Config.ToFromStringConverter`1">
            <summary>
            This TypeConverter facilitates converting to and from the string Type. This is necessary for Objects that are to be used as Dictionary keys, since the JSON for keys needs to be a string. Classes annotated with this TypeConverter need to implement a static FromString method that returns T.
            </summary>
            <typeparam name="T">The Type that implementes the static FromString method that returns Type T.</typeparam>
        </member>
        <member name="T:Terraria.ModLoader.Config.ModConfig">
            <summary>
            ModConfig provides a way for mods to be configurable. ModConfigs can either be Client specific or Server specific.
            When joining a MP server, Client configs are kept but Server configs are synced from the server.
            Using serialization attributes such as [DefaultValue(5)] or [JsonIgnore] are critical for proper usage of ModConfig.
            tModLoader also provides its own attributes such as ReloadRequiredAttribute and LabelAttribute.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Config.ModConfig.OnLoaded">
            <summary>
            This method is called when the ModConfig has been loaded for the first time. This happens before regular Autoloading and Mod.Load. You can use this hook to assign a static reference to this instance for easy access.
            tModLoader will automatically assign (and later unload) this instance to a static field named Instance in the class prior to calling this method, if it exists.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Config.ModConfig.OnChanged">
            <summary>
            This hook is called anytime new config values have been set and are ready to take effect. This will always be called right after OnLoaded and anytime new configuration values are ready to be used. The hook won't be called with values that violate NeedsReload. Use this hook to integrate with other code in your Mod to apply the effects of the configuration values. If your NeedsReload is correctly implemented, you should be able to apply the settings without error in this hook. Be aware that this hook can be called in-game and in the main menu, as well as in single player and multiplayer situations.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Config.ModConfig.AcceptClientChanges(Terraria.ModLoader.Config.ModConfig,System.Int32,System.String@)">
            <summary>
            Called on the Server for ServerSide configs to determine if the changes asked for by the Client will be accepted. Useful for enforcing permissions. Called after a check for NeedsReload.
            </summary>
            <param name="pendingConfig">An instance of the ModConfig with the attempted changes</param>
            <param name="whoAmI">The client whoAmI</param>
            <param name="message">A message that will be returned to the client, set this to the reason the server rejects the changes.</param>
            <returns>Return false to reject client changes</returns>
        </member>
        <member name="M:Terraria.ModLoader.Config.ModConfig.Clone">
            <summary>
            tModLoader will call Clone on ModConfig to facilitate proper implementation of the ModConfig user interface and detecting when a reload is required. Modders need to override this method if their config contains reference types. Failure to do so will lead to bugs. See ModConfigShowcaseDataTypes.Clone for examples and explanations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Config.ModConfig.NeedsReload(Terraria.ModLoader.Config.ModConfig)">
            <summary>
            Whether or not a reload is required. The default implementation compares properties and fields annotated with the ReloadRequiredAttribute. Unlike the other ModConfig hooks, this method is called on a clone of the ModConfig that was saved during mod loading. The pendingConfig has values that are about to take effect. Neither of these instances necessarily match the instance used in OnLoaded.
            </summary>
            <param name="pendingConfig">The other instance of ModConfig to compare against, it contains the values that are pending to take effect</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Config.UI.ConfigElement.Bind(Terraria.ModLoader.Config.UI.PropertyFieldWrapper,System.Object,System.Collections.IList,System.Int32)">
            <summary>
            Bind must always be called after the ctor and serves to facilitate a convenient inheritance workflow for custom ConfigElemets from mods.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Core.LoaderUtils.ResetStaticMembers(System.Type,System.Boolean)">
            <summary> Calls static constructors on the provided type and, optionally, its nested types. </summary>
        </member>
        <member name="M:Terraria.ModLoader.Core.ModCompile.RoslynCompile(System.String,System.Collections.Generic.List{System.String},System.String[],System.String[],System.Boolean,System.Byte[]@,System.Byte[]@)">
            <summary>
            Compile a dll for the mod based on required includes.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Core.ModOrganizer">
            <summary>
            Responsible for sorting, dependency verification and organizing which mods to load
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Core.ModOrganizer.FindWorkshopMods">
            <summary>Mods in workshop folders, not in dev folder or modpacks</summary>
        </member>
        <member name="M:Terraria.ModLoader.Core.ModOrganizer.FindDevFolderMods">
            <summary>Mods in dev folder, not in workshop or modpacks</summary>
        </member>
        <member name="M:Terraria.ModLoader.Core.ModOrganizer.FindMods(System.Boolean)">
            <summary>Mods from any location, using the default internal priority logic</summary>
        </member>
        <member name="M:Terraria.ModLoader.Core.ModOrganizer.DetectModChangesForInfoMessage">
            <summary>
            Returns changes based on last time <see cref="M:Terraria.ModLoader.Core.ModOrganizer.SaveLastLaunchedMods"/> was called. Can be null if no changes.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Core.ModOrganizer.SaveLastLaunchedMods">
            <summary>
            Collects local mod status and saves it to a file.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Core.ModOrganizer.CleanupOldPublish(System.String)">
            <summary>
            Must Be called AFTER the new files are added to the publishing repo.
            Assumes one .tmod per YYYY.XX folder in the publishing repo
            </summary>
            <param name="repo"></param>
        </member>
        <member name="M:Terraria.ModLoader.Core.TmodFile.AddFile(System.String,System.Byte[])">
            <summary>
            Adds a (fileName -> content) entry to the compressed payload
            This method is not threadsafe with reads, but is threadsafe with multiple concurrent AddFile calls
            </summary>
            <param name="fileName">The internal filepath, will be slash sanitised automatically</param>
            <param name="data">The file content to add. WARNING, data is kept as a shallow copy, so modifications to the passed byte array will affect file content</param>
        </member>
        <member name="T:Terraria.ModLoader.DamageClass">
            <summary>
            <see cref="T:Terraria.ModLoader.DamageClass"/> is used to determine the application of item effects, damage/stat scaling, and class bonuses.
            </summary>
            <remarks>
            New classes can be created and can be set to inherit these applications from other classes. 
            <para>For a more in-depth explanation and demonstration refer to <see href="https://github.com/tModLoader/tModLoader/blob/stable/ExampleMod/Content/DamageClasses/ExampleDamageClass.cs">ExampleMod's ExampleDamageClass.cs</see>.</para>
            </remarks>
        </member>
        <member name="P:Terraria.ModLoader.DamageClass.Default">
            <summary>
            Default damage class for non-classed weapons and items, does not benefit from Generic bonuses
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DamageClass.Generic">
            <summary>
            Base damage class for all weapons. All vanilla damage classes inherit bonuses applied to this class.
            Accessories which benefit all classes provide bonuses via the Generic class
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DamageClass.MeleeNoSpeed">
            <summary>
            This is a damage class used by various projectile-only vanilla melee weapons. Attack speed has no effect on items with this damage class.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DamageClass.SummonMeleeSpeed">
            <summary>
            This is a damage class used solely by vanilla whips. It benefits from melee attackSpeed bonuses.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DamageClass.MagicSummonHybrid">
            <summary>
            This is a damage class used solely by vanilla forbidden storm. It scales with both magic and summon damage modifiers.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DamageClass.Throwing">
            <summary>
            Class provided for modders who want to coordinate throwing accessories and items. Not used by any vanilla items.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DamageClass.Type">
            <summary>
            The internal ID of this <see cref="T:Terraria.ModLoader.DamageClass"/>.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DamageClass.DisplayName">
            <summary>
            This is the name that will show up when an item tooltip displays 'X [ClassName]'.
            </summary>
            <remarks>
            This should include the 'damage' part.
            Note that vanilla entries all start with a space that will need to be trimmed if used in other contexts.
            </remarks>
        </member>
        <member name="M:Terraria.ModLoader.DamageClass.GetModifierInheritance(Terraria.ModLoader.DamageClass)">
            <summary>
            This lets you define the classes that this <see cref="T:Terraria.ModLoader.DamageClass"/> will benefit from (other than itself) for the purposes of stat bonuses, such as damage and crit chance.
            This is used to allow extensive specifications for what your damage class can and can't benefit from in terms of other classes' stat bonuses.
            </summary>
            <param name="damageClass">The <see cref="T:Terraria.ModLoader.DamageClass"/> which you want this <see cref="T:Terraria.ModLoader.DamageClass"/> to benefit from statistically.</param>
            <returns>By default this will return <see cref="F:Terraria.ModLoader.StatInheritanceData.Full"/> for <see cref="P:Terraria.ModLoader.DamageClass.Generic"/> and <see cref="F:Terraria.ModLoader.StatInheritanceData.None"/> for any other.</returns>
        </member>
        <member name="M:Terraria.ModLoader.DamageClass.GetEffectInheritance(Terraria.ModLoader.DamageClass)">
            <summary> 
            This lets you define the classes that this <see cref="T:Terraria.ModLoader.DamageClass"/> will count as (other than itself) for the purpose of armor and accessory effects, such as Spectre armor's bolts on magic attacks, or Magma Stone's Hellfire debuff on melee attacks.<br/>
            For a more in-depth explanation and demonstration, see <see href="https://github.com/tModLoader/tModLoader/blob/stable/ExampleMod/Content/DamageClasses/ExampleDamageClass.cs">ExampleMod's ExampleDamageClass.cs</see>
            </summary>
            <remarks>Return <see langword="true"/> for each <see cref="T:Terraria.ModLoader.DamageClass"/> you want to inherit from</remarks>
            <param name="damageClass">The <see cref="T:Terraria.ModLoader.DamageClass"/> you want to inherit effects from.</param>
            <returns><see langword="false"/> by default - which does not let any other classes' effects trigger on this <see cref="T:Terraria.ModLoader.DamageClass"/>.</returns>
        </member>
        <member name="M:Terraria.ModLoader.DamageClass.SetDefaultStats(Terraria.Player)">
            <summary> 
            This lets you define default stat modifiers for all items of this class (e.g. base crit chance).
            </summary>
            <param name="player">The player to apply stat modifications to</param>
        </member>
        <member name="P:Terraria.ModLoader.DamageClass.UseStandardCritCalcs">
            <summary>
            This lets you decide whether or not your damage class will use standard crit chance calculations.
            Setting this to <see langword="false"/> will also hide the critical strike chance line in the tooltip of any item that uses this <see cref="T:Terraria.ModLoader.DamageClass"/>.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.DamageClass.ShowStatTooltipLine(Terraria.Player,System.String)">
            <summary>
            Overriding this lets you disable standard statistical tooltip lines displayed on items associated with this <see cref="T:Terraria.ModLoader.DamageClass"/>. All tooltip lines are enabled by default.
            </summary>
            <remarks>To disable tooltip lines you should return <see langword="false"/> for each of those cases.</remarks>
            <param name="player">The player to apply tooltip changes to</param>
            <param name="lineName">The tooltip line to change visibility for. Usable values are: "Damage", "CritChance", "Speed", and "Knockback"</param>
        </member>
        <member name="M:Terraria.ModLoader.DamageClass.CountsAsClass``1">
            <inheritdoc cref="M:Terraria.ModLoader.DamageClass.CountsAsClass(Terraria.ModLoader.DamageClass)"/>
        </member>
        <member name="M:Terraria.ModLoader.DamageClass.CountsAsClass(Terraria.ModLoader.DamageClass)">
            <summary>
            This is used to check if this <see cref="T:Terraria.ModLoader.DamageClass"/> has been set to inherit effects from the provided <see cref="T:Terraria.ModLoader.DamageClass"/>, as dictated by <see cref="M:Terraria.ModLoader.DamageClass.GetEffectInheritance(Terraria.ModLoader.DamageClass)"/>
            </summary>
            <param name="damageClass">The DamageClass you want to check if effects are inherited by this DamageClass.</param>
            <returns><see langword="true"/> if this damage class is inheriting effects from <paramref name="damageClass"/>, <see langword="false"/> otherwise</returns>
        </member>
        <member name="M:Terraria.ModLoader.DamageClassLoader.GetDamageClass(System.Int32)">
            <summary>
            Gets the DamageClass instance corresponding to the specified type
            </summary>
            <param name="type">The <see cref="P:Terraria.ModLoader.DamageClass.Type"/> of the damage class</param>
            <returns>The DamageClass instance, null if not found.</returns>
        </member>
        <member name="T:Terraria.ModLoader.Default.DefaultBossBarStyle">
            <summary>
            This is the default boss bar style - the way vanilla draws boss bars.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Default.MenutML">
            <summary>
            This is the default modmenu - the one that tML uses and the default one upon entering the game for the first time.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Default.MenuJourneysEnd">
            <summary>
            The Journey's End theme converted into a ModMenu, so that it better fits with the new system.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Default.MenuOldVanilla">
            <summary>
            The Terraria 1.3.5.3 theme converted into a ModMenu, so that it better fits with the new system.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Default.LegacyUnloadedTilesSystem">
            <summary>
            Handles conversion of legacy 1.3 world unloaded tile TML TagCompound data to the newer 1.4+ systems.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Default.ModAccessorySlotPlayer.UpdateVisibleAccessories">
            <summary>
            Updates functional slot visibility information on the player for Mod Slots, in a similar fashion to Player.UpdateVisibleAccessories()
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Default.ModAccessorySlotPlayer.UpdateVisibleVanityAccessories">
            <summary>
            Updates vanity slot information on the player for Mod Slots, in a similar fashion to Player.UpdateVisibleAccessories()
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Default.ModAccessorySlotPlayer.UpdateDyes(System.Boolean)">
            <summary>
            Mirrors Player.UpdateDyes() for modded slots
            Runs On Player Select, so is Player instance sensitive!!!
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Default.ModAccessorySlotPlayer.UpdateEquips">
            <summary>
            Runs a simplified version of Player.UpdateEquips for the Modded Accessory Slots
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Default.PylonShopNPC">
            <summary>
            This is a GlobalNPC native to tML that handles adding Pylon items to NPC's shops, to save on patch size within vanilla.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Default.TEModdedPylon">
            <summary>
            This is a TML provided Tile Entity that acts extremely similar to vanilla's pylon TEs by default. If you plan
            to make a pylon tile in any capacity, you must extend this TE at least once.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.DrawableTooltipLine">
            <summary>
            This class serves as a way to store information about a line that will be drawn of tooltip for an item. You will create and manipulate objects of this class if you use the draw hooks for tooltips in ModItem and GlobalItem. For examples, see ExampleSword
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.Text">
            <summary>
            The text of this tooltip.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.Index">
            <summary>
            The index of the tooltip in the array
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.IsModifier">
            <summary>
            Whether or not this tooltip gives prefix information. This will make it so that the tooltip is colored either green or red.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.IsModifierBad">
            <summary>
            If isModifier is true, this determines whether the tooltip is colored green or red.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DrawableTooltipLine.OriginalX">
            <summary>
            The X position where the tooltip would be drawn that is not adjusted by mods.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DrawableTooltipLine.OriginalY">
            <summary>
            The Y position where the tooltip would be drawn that is not adjusted by mods.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.X">
            <summary>
            The X position where the tooltip would be drawn.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.Y">
            <summary>
            The Y position where the tooltip would be drawn.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DrawableTooltipLine.Color">
            <summary>
            The color the tooltip would be drawn in
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.DrawableTooltipLine.OverrideColor">
            <summary>
            If the tooltip line's color was overridden this will hold that color, it will be null otherwise
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.OneDropLogo">
            <summary>
            Whether the tooltip is a One Drop logo or not. If it is, the tooltip text will be empty.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.Font">
            <summary>
            The font this tooltip would be drawn with
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.Rotation">
            <summary>
            The rotation this tooltip would be drawn in
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.Origin">
            <summary>
            The origin of this tooltip
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.DrawableTooltipLine.BaseScale">
            <summary>
            The baseScale of this tooltip. When drawing the One Drop logo the scale is calculated by (baseScale.X + baseScale.Y) / 2
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.DrawableTooltipLine.#ctor(Terraria.ModLoader.TooltipLine,System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a new DrawableTooltipLine object
            </summary>
            <param name="parent">The TooltipLine to make this DrawableTooltipLine from</param>
            <param name="index">The index of the line in the array</param>
            <param name="x">The X position where the tooltip would be drawn.</param>
            <param name="y">The Y position where the tooltip would be drawn.</param>
            <param name="color">The color the tooltip would be drawn in</param>
        </member>
        <member name="M:Terraria.ModLoader.DustLoader.GetDust(System.Int32)">
            <summary>
            Gets the ModDust instance with the given type. Returns null if no ModDust with the given type exists.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Engine.ErrorReporting">
            <summary>
            This class handles displaying errors that require a OS-provided modal message box. Fatal errors and errors that happen in situations where a suitable place to display an error doesn't exist (such as when initially loading). 
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Engine.FallbackSyncContext">
            <summary>
            Provides a SynchronizationContext for running continuations on the Main thread in the Update loop, for platforms which don't initialized with one
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Engine.FNALogging">
            <summary>
            Attempt to track spurious device resets, backbuffer flickers and resizes
            Also setup some FNA logging
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Engine.LogArchiver">
            <summary>
            Log archiving is performed after log initialization in a separate class to avoid loading Ionic.Zip before logging initialises and it can be patched
            Some CLRs will load all required assemblies when the class is entered, not necessarily just the method, so you've got to watch out
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Engine.LogArchiver.ArchiveLogs">
            <summary>
            Attempt archiving logs.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Engine.LoggingHooks.HookWebRequests">
            <summary>
            Attempt to hook the .NET internal methods to log when requests are sent to web addresses.
            Use the right internal methods to capture redirects
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Engine.TMLContentManager.GetPath(System.String)">
            <summary> Returns a path to the provided relative asset path, prioritizing overrides in the alternate content manager. Throws exceptions on failure. </summary>
        </member>
        <member name="M:Terraria.ModLoader.Engine.TMLContentManager.TryGetPath(System.String,System.String@)">
            <summary> Safely attempts to get a path to the provided relative asset path, prioritizing overrides in the alternate content manager. </summary>
        </member>
        <member name="M:Terraria.ModLoader.Engine.ZipExtractFix.Init">
            <summary>
            When Ionic.Zip extracts an entry it uses \\ for all separators when it should use Path.DirectorySeparatorChar for platform compatibility
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.EquipLoader">
            <summary>
            This serves as a central place to store equipment slots and their corresponding textures. You will use this to obtain the IDs for your equipment textures.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.EquipLoader.GetEquipTexture(Terraria.ModLoader.EquipType,System.Int32)">
            <summary>
            Gets the equipment texture for the specified equipment type and ID.
            </summary>
            <param name="type"></param>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.EquipLoader.AddEquipTexture(Terraria.ModLoader.Mod,System.String,Terraria.ModLoader.EquipType,Terraria.ModLoader.ModItem,System.String,Terraria.ModLoader.EquipTexture)">
            <summary>
            Adds an equipment texture of the specified type, internal name, and/or associated item to your mod.<br/>
            If no internal name is provided, the associated item's name will be used instead.<br/>
            You can then get the ID for your texture by calling EquipLoader.GetEquipTexture, and using the EquipTexture's Slot property.<br/>
            If you need to override EquipmentTexture's hooks, you can specify the class of the equipment texture class.
            </summary>
            <remarks>
            If both an internal name and associated item are provided, the EquipTexture's name will be set to the internal name, alongside the keys for the equipTexture dictionary.<br/>
            Additionally, if multiple EquipTextures of the same type are registered for the same item, the first one to be added will be the one automatically displayed on the player and mannequins.
            </remarks>
            <param name="mod">The mod the equipment texture is from.</param>
            <param name="equipTexture">The equip texture.</param>
            <param name="item">The item.</param>
            <param name="name">The internal name.</param>
            <param name="type">The type.</param>
            <param name="texture">The texture.</param>
            <returns>the ID / slot that is assigned to the equipment texture.</returns>
        </member>
        <member name="M:Terraria.ModLoader.EquipLoader.GetEquipTexture(Terraria.ModLoader.Mod,System.String,Terraria.ModLoader.EquipType)">
            <summary>
            Gets the EquipTexture instance corresponding to the name and EquipType. Returns null if no EquipTexture with the given name and EquipType is found.
            </summary>
            <param name="mod">The mod the equipment texture is from.</param>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.EquipLoader.GetEquipSlot(Terraria.ModLoader.Mod,System.String,Terraria.ModLoader.EquipType)">
            <summary>
            Gets the slot/ID of the equipment texture corresponding to the given name. Returns -1 if no EquipTexture with the given name is found.
            </summary>
            <param name="mod">The mod the equipment texture is from.</param>
            <param name="name">The name.</param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.EquipLoader.EquipFrameEffects(Terraria.Player)">
            <summary>
            Hook Player.PlayerFrame
            Calls each of the item's equipment texture's FrameEffects hook.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.EquipTexture">
            <summary>
            This serves as a place for you to program behaviors of equipment textures. This is useful for equipment slots that do not have any item associated with them (for example, the Werewolf buff). Note that this class is purely for visual effects.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.EquipTexture.Texture">
            <summary>
            The name and folders of the texture file used by this equipment texture.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.EquipTexture.Name">
            <summary>
            The internal name of this equipment texture.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.EquipTexture.Type">
            <summary>
            The type of equipment that this equipment texture is used as.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.EquipTexture.Slot">
            <summary>
            The slot (internal ID) of this equipment texture.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.EquipTexture.Item">
            <summary>
            The item that is associated with this equipment texture. Null if no item is associated with this.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.FrameEffects(Terraria.Player,Terraria.ModLoader.EquipType)">
            <summary>
            Allows you to create special effects (such as dust) when this equipment texture is displayed on the player under the given equipment type. By default this will call the associated ModItem's UpdateVanity if there is an associated ModItem.
            </summary>
            <param name="player"></param>
            <param name="type"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.IsVanitySet(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns whether or not the head armor, body armor, and leg armor textures make up a set. This hook is used for the PreUpdateVanitySet, UpdateVanitySet, and ArmorSetShadows hooks. By default this will return the same thing as the associated ModItem's IsVanitySet, or false if no ModItem is associated.
            </summary>
            <param name="head"></param>
            <param name="body"></param>
            <param name="legs"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.PreUpdateVanitySet(Terraria.Player)">
            <summary>
            Allows you to create special effects (such as the necro armor's hurt noise) when the player wears this equipment texture's vanity set. This hook is called regardless of whether the player is frozen in any way. By default this will call the associated ModItem's PreUpdateVanitySet if there is an associated ModItem.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.UpdateVanitySet(Terraria.Player)">
            <summary>
            Allows you to create special effects (such as dust) when the player wears this equipment texture's vanity set. This hook will only be called if the player is not frozen in any way. By default this will call the associated ModItem's UpdateVanitySet if there is an associated ModItem.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.ArmorSetShadows(Terraria.Player)">
            <summary>
            Allows you to determine special visual effects this vanity set has on the player without having to code them yourself. By default this will call the associated ModItem's ArmorSetShadows if there is an associated ModItem.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.SetMatch(System.Boolean,System.Int32@,System.Boolean@)">
             <summary>
             Allows you to modify the equipment that the player appears to be wearing. This hook will only be called for head, body and leg textures. Note that equipSlot is not the same as the item type of the armor the player will appear to be wearing. Worn equipment has a separate set of IDs. You can find the vanilla equipment IDs by looking at the headSlot, bodySlot, and legSlot fields for items, and modded equipment IDs by looking at EquipLoader.
            If this hook is called on body armor, equipSlot allows you to modify the leg armor the player appears to be wearing. If you modify it, make sure to set robes to true. If this hook is called on leg armor, equipSlot allows you to modify the leg armor the player appears to be wearing, and the robes parameter is useless.
            By default, if there is an associated ModItem, this will call that ModItem's SetMatch.
             </summary>
             <param name="male"></param>
             <param name="equipSlot"></param>
             <param name="robes"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.DrawArmorColor(Terraria.Player,System.Single,Microsoft.Xna.Framework.Color@,System.Int32@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify the colors in which this armor texture and surrounding accessories are drawn, in addition to which glow mask and in what color is drawn. By default this will call the associated ModItem's DrawArmorColor if there is an associated ModItem.
            </summary>
            <param name="drawPlayer"></param>
            <param name="shadow"></param>
            <param name="color"></param>
            <param name="glowMask"></param>
            <param name="glowMaskColor"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.ArmorArmGlowMask(Terraria.Player,System.Single,System.Int32@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify which glow mask and in what color is drawn on the player's arms. Note that this is only called for body equipment textures. By default this will call the associated ModItem's ArmorArmGlowMask if there is an associated ModItem.
            </summary>
            <param name="drawPlayer"></param>
            <param name="shadow"></param>
            <param name="glowMask"></param>
            <param name="color"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.VerticalWingSpeeds(Terraria.Player,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to modify vertical wing speeds.
            </summary>
            <param name="player"></param>
            <param name="ascentWhenFalling"></param>
            <param name="ascentWhenRising"></param>
            <param name="maxCanAscendMultiplier"></param>
            <param name="maxAscentMultiplier"></param>
            <param name="constantAscend"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.HorizontalWingSpeeds(Terraria.Player,System.Single@,System.Single@)">
            <summary>
            Allows you to modify horizontal wing speeds.
            </summary>
            <param name="player"></param>
            <param name="speed"></param>
            <param name="acceleration"></param>
        </member>
        <member name="M:Terraria.ModLoader.EquipTexture.WingUpdate(Terraria.Player,System.Boolean)">
            <summary>
            Allows for wing textures to do various things while in use. "inUse" is whether or not the jump button is currently pressed. Called when this wing texture visually appears on the player. Use to animate wings, create dusts, invoke sounds, and create lights. By default this will call the associated ModItem's WingUpdate if there is an associated ModItem.
            </summary>
            <param name="player"></param>
            <param name="inUse"></param>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.EquipType">
            <summary>
            This is an enum of all the types of equipment that exist. An equipment type is defined as a type or layer of texture that is drawn on the player (for example, body and shield and wings).
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.GameTipData">
            <summary>
            Wrapper class for a LocalizedText and visibility field that has intended use with modification
            of Game Tips.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.GameTipData.Mod">
            <summary>
            The mod instance this tip belongs to. This value is null
            for vanilla tips.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.GameTipData.Name">
            <summary>
            Retrieves the "name" of this GameTip, which is the Key excluding the beginning Mods.ModName.GameTips portion.
            For example, if the key was "Mods.ExampleMod.GameTips.ExampleTip", this would return "ExampleTip".
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.GameTipData.FullName">
            <summary>
            Retrieves the FULL "name" of this GameTip, which includes the Mod and this tip's Name.
            For example, if this tip was from ExampleMod and was named "ExampleTip", this would
            return "ExampleMod/ExampleTip"
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GameTipData.Hide">
            <summary>
            Until reload, prevents this tip from ever appearing during loading screens.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.GameTipID">
            <summary>
            This class contains a more human-readable name for every single Game Tip created by Vanilla.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.UseSafeOrPiggyBank">
            <summary>
            "Other players can loot your chests! If you don't trust them, use a Safe or Piggy Bank; those items have storage that is exclusive to each player."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.InfoAccessoriesInInventory">
            <summary>
            "Info accessories don't need to be equipped to provide you and nearby friends with useful information; you can just leave them in your Inventory."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.RopeAndRopeCoils">
            <summary>
            "Rope can really help you get around while exploring caves. You can even craft it into a Rope Coil which can be thrown and automatically unfolds!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GlowingMushroomBiomeAndTruffles">
            <summary>
            "Mushroom Biomes can be grown above ground as well as below. Friendly Truffles will sometimes make themselves at home in Surface Mushroom Biomes."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.SpawnPointSettingWithBed">
            <summary>
            "You can change your spawn point by placing and using a bed."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.MagicMirror">
            <summary>
            "If you find a Magic Mirror, you can use it to teleport back to your spawn point."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.FloatingIslandsInSky">
            <summary>
            "There are Floating Islands in the sky."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.BoundNPCsInWorld">
            <summary>
            "Sometimes you can find NPCs hidden around the World."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.BloodMoonZombieDoorOpening">
            <summary>
            "During a Blood Moon, Zombies can open doors."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.WaterBreaksFall">
            <summary>
            "Water will break your fall."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GlowsticksAndTorches">
            <summary>
            "Torches and Glowsticks can be a light for you in dark places when all other lights go out. Torches won't work underwater, but Glowsticks will."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.LavaAndObsidianSkinPotion">
            <summary>
            "Don't fall into lava without drinking an Obsidian Skin Potion first!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.LuckyHorseshoeFallDamage">
            <summary>
            "You won't take falling damage if you have a Lucky Horseshoe. Look for them in chests underground."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.ObsidianSkullWithHellstoneOrMeteorite">
            <summary>
            "Walking on Hellstone and Meteorite can burn you! Protect yourself by equipping an Obsidian Skull or similar accessory."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.LifeCrystalsForLifeIncrease">
            <summary>
            "Life Crystals are hidden around the World. Use them to increase your health."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.TorchesCrafting">
            <summary>
            "Torches require Wood and Gel to craft. Gel can be obtained by defeating slimes."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.OrePickaxePowerRequirements">
            <summary>
            "Some ores require better pickaxes to mine."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.BossesBetterWithFriends">
            <summary>
            "Bosses are easier to defeat with friends."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.BowsAndGunsNeedAmmo">
            <summary>
            "Bows and guns require the proper ammo in your Ammo Slots."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.OldManWithCurseIsClothier">
            <summary>
            "The Old Man at the Dungeon is a Clothier. If only someone could lift his curse..."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.MerchantsNeedMoneyToMoveIn">
            <summary>
            "Merchants love money. If you save up enough, one might move in!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.DemolitionistNeedsExplosivesToMoveIn">
            <summary>
            "Keep an explosive in your inventory or a storage container to attract a Demolitionist to your house."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.NeedHousingForTownNPCs">
            <summary>
            "Make sure you have valid housing with empty rooms, and you may attract new inhabitants to your World."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.PlatformsWhileExploring">
            <summary>
            "When exploring, it helps to keep some Platforms on hand. They can be crafted from numerous materials such as Wood, Glass, or even Bones."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.DryadNeedsBossToMoveIn">
            <summary>
            "Slay a boss to attract a Dryad to your house. She can tell you the state of Corruption, Crimson, and Hallow in your World."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.ButtonRemappingInControlsMenu">
            <summary>
            "Advanced players may wish to remap their buttons; you can do this from the Controls Menu in Settings."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.MiningHelmet">
            <summary>
            "Wear a Mining Helmet if you don't want to use Torches."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.CanWearBucketsOnHead">
            <summary>
            "You can wear Buckets on your head!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GuideVoodooDollToSummonWOF">
            <summary>
            "Defeat the boss in The Underworld to change the World forever. Find a Guide Voodoo Doll and hurl it into the infernal lava to summon him."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.PwnHammerForAltars">
            <summary>
            "Demon Altars and Crimson Altars can't be destroyed with a normal hammer. You have to pwn them."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.BunnyKillingIsCruel">
            <summary>
            "Killing Bunnies is cruel. Period."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.ManaCrystalCrafting">
            <summary>
            "Falling Stars sometimes appear at night. Collect 5 of them to craft a Mana Crystal you can use to increase your Mana."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.WatchOutForMeteorites">
            <summary>
            "Watch out for Meteorites!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.PetsAreBestFriends">
            <summary>
            "A pet can be your best friend."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.DigDeeperForUnderworld">
            <summary>
            "If you dig deep enough, you'll end up in The Underworld!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.SantaClausDuringChristmasSeason">
            <summary>
            "Santa Claus is real. He comes to town after the Frost Legion is defeated (and 'tis the season)."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.SnowGlobalSummonsFrostLegion">
            <summary>
            "Don't shake a Snow Globe unless you want to summon the Frost Legion."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.SpredHallowWithSeedsOrWater">
            <summary>
            "You can use Hallowed Seeds, Holy Water, or Pearlstone to make Hallow spread."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.CorruptionCantSpreadInHallow">
            <summary>
            "The Hallow is the only place where Corruption and Crimson cannot spread."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.CorruptionHasChasms">
            <summary>
            "The Corruption is full of chasms. Mind the gaps."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.TimeHealsWounds">
            <summary>
            "Time heals all wounds."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.AcornsGrowTrees">
            <summary>
            "You can plant Acorns to grow new trees."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.RocketScienceAndBoots">
            <summary>
            "Rocket science gave us Rocket Boots."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.CloudInABalloonCrafting">
            <summary>
            "The Cloud in a Bottle and Shiny Red Balloon accessories both improve your ability to jump. Combine them to make a Cloud in a Balloon."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.StoreMoneyInBank">
            <summary>
            "If you store your Coins in a Chest or Piggy Bank, you will be less likely to lose them."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.PotionCraftingWithBottle">
            <summary>
            "To craft potions, place a Bottle on a Table to make an Alchemy Station. Double, double, toil and trouble!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.MonstersSpawnWithoutWalls">
            <summary>
            "If your house doesn't have background walls, monsters will be able to spawn inside."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.ArmorSetBonus">
            <summary>
            "Wearing a full set of armor crafted from the same material gives you an extra bonus."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.CreateMetalBarWithFurnace">
            <summary>
            "Build a Furnace to craft metal bars out of ore."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.SilkCrafting">
            <summary>
            "You can harvest Cobwebs and turn them into Silk. You can use Silk to craft beds, sofas, and more!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.WiresFromMechanic">
            <summary>
            "You can buy Wires from the Mechanic and use them to create traps, pumping systems, or other elaborate devices."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.HousingUIInEquipmentMenu">
            <summary>
            "The Housing section of the Equipment Menu allows you to decide what rooms you want your NPCs to live in."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.CobaltShieldKnockback">
            <summary>
            "If you're sick of getting knocked around, try equipping a Cobalt Shield. You can find one in the Dungeon."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GrapplingHooksForExploration">
            <summary>
            "Grappling Hooks are invaluable tools for exploration. Try crafting them with Hooks or gems."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.HousesCanHavePlatformFloors">
            <summary>
            "A room in a house can have Wood Platforms as a floor or ceiling, but NPCs need at least one solid block to stand on."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.ShadowOrbsDestruction">
            <summary>
            "You can destroy Shadow Orbs and Crimson Hearts with a hammer or explosives, but prepare yourself for the forces they unleash."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GoblinArmyCrowdControl">
            <summary>
            "When dealing with a Goblin Army, crowd control is key."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.WizardsUseManaFlowers">
            <summary>
            "The best wizards around use Mana Flowers."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.SuspiciousItemWarning">
            <summary>
            "Use 'suspicious looking items' at your own risk!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.OverpoweredSand">
            <summary>
            "Sand is overpowered."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GoblinTinkererLocation">
            <summary>
            "The Goblin Tinkerer found in Underground Caverns will sell you many useful items, including a Tinkerer's Workshop."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.ValidHousingCheckInHousingUI">
            <summary>
            "You can check if a room is valid housing from the Housing section of the Inventory Menu."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.SeedsForPotionIngredients">
            <summary>
            "Seeds can be used to grow a variety of useful ingredients for crafting potions."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.UseMapWhenLost">
            <summary>
            "If you get lost or need to find another player, open the World Map."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.CraftHammerToDestroyWalls">
            <summary>
            "If you need to remove background walls, craft a hammer!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.ExtraPlatformOrWallConversion">
            <summary>
            "Got some extra walls or platforms? You can turn them back into their original materials!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.FishingIsLucrative">
            <summary>
            "Fishing is a fantastic source of crafting ingredients, accessories, and loot crates!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.WingsAllowFlight">
            <summary>
            "Nothing improves your mobility like Wings. Who wouldn't want to fly?"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.MinecartCraftingAndLocation">
            <summary>
            "Riding Minecarts is one of the best ways of getting around. You can build your own tracks, or find them Underground."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.LifeFruitLocation">
            <summary>
            "Life Crystals not enough for you? Eventually, Life Fruit will grow in the Jungle, and can give you an extra boost to your health."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.UseSylistForNewHair">
            <summary>
            "Change your clothes in game at a Dresser or talk to the Stylist for a new hairdo."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.MountMobilityAndUniqueness">
            <summary>
            "Mounts grant the player increased mobility and a variety of useful abilities. Each one is unique!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.ExpertModeChallenge">
            <summary>
            "Looking for a challenge? Try Expert mode!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.MartianProbesSpawnInvasion">
            <summary>
            "Be careful around Martian Probes. If they scan you, they'll summon a Martian Invasion!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.SolarEclipseCreepyMonsters">
            <summary>
            "During a Solar Eclipse, be on the lookout for tons of strange and creepy monsters."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.OldOnesArmyInvasion">
            <summary>
            "Sometimes, enemies may even invade from other dimensions . . ."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.PumpkingMoonStarting">
            <summary>
            "A Pumpkin Medallion can be used to summon the Pumpkin Moon. Spooky!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.FrostMoonStarting">
            <summary>
            "Feeling up for the chill of winter? Use a Naughty Present to summon the Frost Moon!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.SandstormWarning">
            <summary>
            "When a Sandstorm hits, deserts can be very dangerous. New enemies, reduced visibility, and it can even be hard to move!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.ArmsDealerNeedsGunToMoveIn">
            <summary>
            "The Arms Dealer knows more about guns than anyone. If you find one, he might move in."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.MechanicLocation">
            <summary>
            "The Mechanic got lost in the Dungeon. You'll have to help her out if you want her to move in."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.NurseNeedsLifeCrystalToMoveIn">
            <summary>
            "Once you use a Life Crystal, a Nurse might move in! Speak to her for healing at any time . . . for a price, of course."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.DyesFromDyeTrader">
            <summary>
            "If you ever want to get stylish, try dyes! The Dye Trader can help you turn some materials into new dye colors."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.TavernkeepOrigins">
            <summary>
            "The Tavernkeep is a guest from a faraway land called Etheria."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.StylistLocation">
            <summary>
            "If you need a new haircut, go check out a nearby Spider Biome. Stylists always end up lost in them!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.PainterNeedsOtherNPCsToMoveIn">
            <summary>
            "Regular Wood and Stone not vibrant enough for you? A Painter will move in and sell paints if enough townsfolk move in."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.ExploreTheOceans">
            <summary>
            "It's worth it to explore your Oceans. You can find treasure, dyes, and even sleeping fishermen."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.WitchDoctorNeedsQueenBeeToMoveIn">
            <summary>
            "You could get a Witch Doctor to come to your World if you defeat the Queen Bee."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.PartyGirlNeedsOtherNPCsToMoveIn">
            <summary>
            "The Party Girl won't move in unless your World is full of other townsfolk. Afterall, what's a party without lots of guests?"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.WizardLocation">
            <summary>
            "The Wizard sells some useful magic artifacts, but he has a tendency to wander off Underground."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.TaxCollectorNeedsToBePurified">
            <summary>
            "The Tax Collector spends his days wandering the Underworld as a Tortured Soul. If only there were a way to purify him . . ."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.PirateInvasionAndTownNPC">
            <summary>
            "Pirates are so unpredictable. First they invade your world, and then they move into your houses!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.SteampunkerNeedsMechDeadToMoveIn">
            <summary>
            "If you ever defeat any giant robots, a Steampunker might move in to your World."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.CyborgSellsRockets">
            <summary>
            "If you like rockets, the Cyborg may have some for sale."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.TravellingMerchantStaysTemporarily">
            <summary>
            "The Traveling Merchant never stays in one place for long, but he always brings different wares when he visits!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.BoneMerchantLocation">
            <summary>
            "Not all Skeletons are evil. Some are even known to sell unique items to those that can find them."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.UseAchievementGuideForHelp">
            <summary>
            "Not sure what to do next? Take a look at the Achievement Guide for a clue!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.MoneyStealingInExpertMode">
            <summary>
            "If an enemy steals your money after you die in Expert Mode, hunt it down! If you defeat it, you can get your money back."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.BlockSwapUsage">
            <summary>
            "With the Block Swap mechanic enabled, you can replace one block with another directly, rather than having to mine it first."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GoodieBagsDuringHalloween">
            <summary>
            "Keep an eye out for Goodie Bags around Halloween. If you open them, you can find all sorts of spooky items.  Trick or Treat!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.CloudsPreventFallDamage">
            <summary>
            "Clouds are nice and soft, and you won't get hurt falling on them no matter how far you fall."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.SummonerTargeting">
            <summary>
            "Did you know you can order your Summons to attack a specific target? While holding a Summoning Weapon, Right Click an enemy!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.CameraZoomFunctionality">
            <summary>
            "Press the + and - keys to zoom in &amp; out! Focus on what matters!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.MapPinging">
            <summary>
            "Have something on the Map to show a friend? Double click on the Map to ping a location for everyone to see!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.VoidBagUsage">
            <summary>
            "The Void Bag is a magical artifact that will store items for you when your inventory is full."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.TrapWarning">
            <summary>
            "Enemies aren't the only danger when exploring Underground. Watch out for traps too!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.AskGuideForCraftingRecipes">
            <summary>
            "Find a cool new Material?  Want to know what you can make?  Check with your friendly neighborhood Guide!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.NPCsWillRespawn">
            <summary>
            "Have some NPCs perished?  Don't worry, they'll be back in the morning."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.ExplosivesAreDangerous">
            <summary>
            "Explosives are dangerous!\n...and effective..."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.KeyboardAutoReuse">
            <summary>
            "You can continuously use some items by holding down the {InputTrigger_UseOrAttack} button."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.KeyboardCursorMode">
            <summary>
            "Press {InputTrigger_SmartCursor} to switch between Cursor Modes."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.KeyboardTrash">
            <summary>
            "If your Inventory is full, you can press {InputTriggerUI_Trash} and {InputTrigger_UseOrAttack} to send items to the Trash."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.KeyboardQuickSelling">
            <summary>
            "When speaking to a vendor, you can sell items in your Inventory by pressing {InputTriggerUI_Trash} and {InputTrigger_UseOrAttack}."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.KeyboardTorchRemoval">
            <summary>
            "You can remove Torches with {InputTrigger_InteractWithTile} or with a pickaxe."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.KeyboardQuickEquip">
            <summary>
            "In your Inventory, you can press {InputTrigger_InteractWithTile} to equip items such as armor or accessories directly to a usable slot."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.KeyboardAutoSelect">
            <summary>
            "Hold {InputTrigger_SmartSelect} to use Auto Select, a versatile feature that adapts to your environment. It will allow you to automatically hold your Torches in dark caves, Glowsticks when underwater, or even select the right tool for breaking something."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.KeyboardFavoriting">
            <summary>
            "Press {InputTriggerUI_FavoriteItem} and {InputTrigger_UseOrAttack} to Favorite an item. Favorited items can no longer be sold, thrown away, or dropped. No more accidentally losing your favorite items!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GamePadDPadFavoriting">
            <summary>
            "You can assign your favorite items to the DPad for rapid use by enabling DPad Hotbar in Gamepad Settings!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GamePadAutoReuse">
            <summary>
            "You can continuously use some items by holding down the {InputTrigger_UseOrAttack} button."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GamePadCursorMode">
            <summary>
            "Press {InputTrigger_SmartCursor} to switch between Cursor Modes."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GamePadTrash">
            <summary>
            "If your Inventory is full, you can press {InputTriggerUI_Trash} to send items to the Trash."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GamePadQuickSelling">
            <summary>
            "When speaking to a vendor, you can sell items in your Inventory by pressing {InputTriggerUI_SellItem}."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GamePadTorchRemoval">
            <summary>
            "You can remove Torches with {InputTrigger_InteractWithTile} or with a pickaxe."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GamePadQuickEquip">
            <summary>
            "In your Inventory, you can press {InputTrigger_QuickEquip} to equip items such as armor or accessories directly to a usable slot."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GamePadAutoSelect">
            <summary>
            "Hold {InputTrigger_SmartSelect} to use Auto Select, a versatile feature that adapts to your environment. It will allow you to automatically hold your Torches in dark caves, Glowsticks when underwater, or even select the right tool for breaking something."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GamePadFavoriting">
            <summary>
            "Press {InputTriggerUI_FavoriteItem} to Favorite an item. Favorited items can no longer be sold, thrown away, or dropped. No more accidentally losing your favorite items!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GamePadInventoryBuilding">
            <summary>
            "While navigating your Inventory, press {InputTriggerUI_BuildFromInventory} while highlighting a tool or block to build directly from your Inventory."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GamePadRadialHotbar">
            <summary>
            "Hold {InputTrigger_RadialQuickbar} and {InputTrigger_RadialHotbar} to bring up the Radial Quickbar and Radial Hotbar menus. These will allow you to quickly access potions, mounts, and the items in your hotbar."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GamePadControlLayouts">
            <summary>
            "There are multiple Gamepad control layouts available in the menu. Choose from Redigit's Pick, Yoraiz0r's Pick, Xbox, Playstation, or even make your own Custom settings!"
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GamePadCursorSnap">
            <summary>
            "If you select DPad Cursor Snap in the Gamepad settings, you can use the DPad for improved precision when mining or building."
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.GameTipID.GamePadEnemyLockOn">
            <summary>
            "When using Gamepad, you can lock on to enemies by pressing {InputTrigger_LockOn}. Locked on targets will be marked by a spinning reticle, and long range weapons will automatically aim at your target!"
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.GlobalBlockType">
            <summary>
            This is the superclass for GlobalTile and GlobalWall, combining common code
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.KillSound(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Allows you to customize which sound you want to play when the tile/wall at the given coordinates is hit. Return false to stop the game from playing its default sound for the tile/wall. Returns true by default.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="fail">If true, the tile/wall is only partially damaged. If false, the tile/wall is fully destroyed.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.NumDust(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Allows you to change how many dust particles are created when the tile/wall at the given coordinates is hit.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="fail"></param>
            <param name="num"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.CreateDust(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Allows you to modify the default type of dust created when the tile/wall at the given coordinates is hit. Return false to stop the default dust (the dustType parameter) from being created. Returns true by default.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="dustType"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.CanPlace(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to stop a tile/wall from being placed at the given coordinates. Return false to block the tile/wall from being placed. Returns true by default.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.CanExplode(System.Int32,System.Int32,System.Int32)">
            <summary>
            Whether or not the tile/wall at the given coordinates can be killed by an explosion (ie. bombs). Returns true by default; return false to stop an explosion from destroying it.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.PreDraw(System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Allows you to draw things behind the tile/wall at the given coordinates. Return false to stop the game from drawing the tile/wall normally. Returns true by default.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="spriteBatch"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.PostDraw(System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Allows you to draw things in front of the tile/wall at the given coordinates. This can also be used to do things such as creating dust. Called on active tiles. See also ModSystem.PostDrawTiles.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="spriteBatch"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.RandomUpdate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Called for every tile/wall the world randomly decides to update in a given tick. Useful for things such as growing or spreading.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.PlaceInWorld(System.Int32,System.Int32,System.Int32,Terraria.Item)">
            <summary>
            Allows you to do something when this tile/wall is placed. Called on the local Client and Single Player.
            </summary>
            <param name="i">The x position in tile coordinates. Equal to Player.tileTargetX</param>
            <param name="j">The y position in tile coordinates. Equal to Player.tileTargetY</param>
            <param name="type"></param>
            <param name="item">The item used to place this tile/wall.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBlockType.ModifyLight(System.Int32,System.Int32,System.Int32,System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to determine how much light the block emits.
            If it is a tile, make sure you set Main.tileLighted[Type] to true in SetDefaults for this to work.
            If it is a wall, it can also let you light up the block in front of this wall.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
        </member>
        <member name="T:Terraria.ModLoader.GlobalBossBar">
            <summary>
            A class that is used to modify existing boss health bars. To add them, use ModBossBar instead.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBossBar.PreDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.NPC,Terraria.DataStructures.BossBarDrawParams@)">
            <summary>
            Allows you to draw things before the default draw code is ran. Return false to prevent drawing the bar. Returns true by default.
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="npc">The NPC this bar is focused on</param>
            <param name="drawParams">The draw parameters for the boss bar</param>
            <returns><see langword="true"/> for allowing drawing, <see langword="false"/> for preventing drawing</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBossBar.PostDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.NPC,Terraria.DataStructures.BossBarDrawParams)">
            <summary>
            Allows you to draw things after the bar has been drawn. skipped is true if you or another mod has skipped drawing the bar (possibly hiding it or in favor of new visuals).
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="npc">The NPC this bar is focused on</param>
            <param name="drawParams">The draw parameters for the boss bar</param>
        </member>
        <member name="T:Terraria.ModLoader.GlobalBuff">
            <summary>
            This class allows you to modify the behavior of any buff in the game.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.Update(System.Int32,Terraria.Player,System.Int32@)">
            <summary>
            Allows you to make the buff with the given ID give certain effects to a player. If you remove the buff from the player, make sure the decrement the buffIndex parameter by 1.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.Update(System.Int32,Terraria.NPC,System.Int32@)">
            <summary>
            Allows you to make the buff with the given ID give certain effects to an NPC. If you remove the buff from the NPC, make sure to decrement the buffIndex parameter by 1.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.ReApply(System.Int32,Terraria.Player,System.Int32,System.Int32)">
            <summary>
            Allows to you make special things happen when adding the given type of buff to a player when the player already has that buff. Return true to block the vanilla re-apply code from being called; returns false by default. The vanilla re-apply code sets the buff time to the "time" argument if that argument is larger than the current buff time. (For Mana Sickness, the vanilla re-apply code adds the "time" argument to the current buff time.)
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.ReApply(System.Int32,Terraria.NPC,System.Int32,System.Int32)">
            <summary>
            Allows to you make special things happen when adding the given buff type to an NPC when the NPC already has that buff. Return true to block the vanilla re-apply code from being called; returns false by default. The vanilla re-apply code sets the buff time to the "time" argument if that argument is larger than the current buff time.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.ModifyBuffText(System.Int32,System.String@,System.String@,System.Int32@)">
            <summary>
            Allows you to modify the name and tooltip that displays when the mouse hovers over the buff icon, as well as the color the buff's name is drawn in.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.CustomBuffTipSize(System.String,System.Collections.Generic.List{Microsoft.Xna.Framework.Vector2})">
            <summary>
            If you are using the DrawCustomBuffTip hook, then you must use this hook as well. Calculate the location (relative to the origin) of the bottom-right corner of everything you will draw, and add that location to the sizes parameter.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.DrawCustomBuffTip(System.String,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.Int32)">
            <summary>
            Allows you to draw whatever you want when a buff tooltip is drawn. The originX and originY parameters are the top-left corner of everything that's drawn; you should add these to the position argument passed to SpriteBatch.Draw.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.PreDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.Int32,Terraria.DataStructures.BuffDrawParams@)">
            <summary>
            Allows you to draw things before the default draw code is ran. Return false to prevent drawing the buff. Returns true by default.
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="type">The buff type</param>
            <param name="buffIndex">The index in Main.LocalPlayer.buffType and .buffTime of the buff</param>
            <param name="drawParams">The draw parameters for the buff</param>
            <returns><see langword="true"/> for allowing drawing, <see langword="false"/> for preventing drawing</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.PostDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.Int32,Terraria.DataStructures.BuffDrawParams)">
            <summary>
            Allows you to draw things after the buff has been drawn. skipped is true if you or another mod has skipped drawing the buff (possibly hiding it or in favor of new visuals).
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="type">The buff type</param>
            <param name="buffIndex">The index in Main.LocalPlayer.buffType and .buffTime of the buff</param>
            <param name="drawParams">The draw parameters for the buff</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBuff.RightClick(System.Int32,System.Int32)">
            <summary>
            Allows you to make things happen when the buff icon is right-clicked. Return false to prevent the buff from being cancelled.
            </summary>
            <param name="type">The buff type</param>
            <param name="buffIndex">The index in Main.LocalPlayer.buffType and .buffTime of the buff</param>
            <returns><see langword="true"/> for allowing the buff to be cancelled, <see langword="false"/> to prevent the buff from being cancelled</returns>
        </member>
        <member name="T:Terraria.ModLoader.GlobalInfoDisplay">
            <summary>
            A class that is used to modify existing info displays (i.e. the things that the Cell Phone uses to communicate information).
            All vanilla displays can be accessed using InfoDisplay.(name of item).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalInfoDisplay.Active(Terraria.ModLoader.InfoDisplay)">
            <summary>
            Allows you to modify whether or not a given InfoDisplay is active. Returns null (no change from default behavior) by default for all InfoDisplays.
            </summary>
            <param name="currentDisplay">The display you're deciding the active state for.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalInfoDisplay.ModifyDisplayName(Terraria.ModLoader.InfoDisplay,System.String@)">
            <summary>
            Allows you to modify the display name of an InfoDisplay (shown when hovering over said display in-game).
            </summary>
            <param name="currentDisplay">The display you're modifying the display name for.</param>
            <param name="displayName">The display name of the current display.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalInfoDisplay.ModifyDisplayValue(Terraria.ModLoader.InfoDisplay,System.String@)">
            <summary>
            Allows you to modify the display value (the text displayed next to the icon) of an InfoDisplay.
            </summary>
            <param name="currentDisplay">The display you're modifying the display value for.</param>
            <param name="displayValue">The display value of the current display</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalInfoDisplay.ModifyDisplayColor(Terraria.ModLoader.InfoDisplay,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify the display color (the color of the text displayed next to the icon) of an InfoDisplay.
            </summary>
            <param name="currentDisplay">The display you're modifying the display color for.</param>
            <param name="displayColor">The display color of the current display</param>
        </member>
        <member name="T:Terraria.ModLoader.GlobalItem">
            <summary>
            This class allows you to modify and use hooks for all items, including vanilla items. Create an instance of an overriding class then call Mod.AddGlobalItem to use this.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnSpawn(Terraria.Item,Terraria.DataStructures.IEntitySource)">
            <summary>
            Gets called when any item spawns in world
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ChoosePrefix(Terraria.Item,Terraria.Utilities.UnifiedRandom)">
            <summary>
            Allows you to manually choose what prefix an item will get.
            </summary>
            <returns>The ID of the prefix to give the item, -1 to use default vanilla behavior</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PrefixChance(Terraria.Item,System.Int32,Terraria.Utilities.UnifiedRandom)">
             <summary>
             To prevent putting the item in the tinkerer slot, return false when pre is -3.
             To prevent rolling of a prefix on spawn, return false when pre is -1.
             To force rolling of a prefix on spawn, return true when pre is -1.
            
             To reduce the probability of a prefix on spawn (pre == -1) to X%, return false 100-4X % of the time.
             To increase the probability of a prefix on spawn (pre == -1) to X%, return true (4X-100)/3 % of the time.
            
             To delete a prefix from an item when the item is loaded, return false when pre is the prefix you want to delete.
             Use AllowPrefix to prevent rolling of a certain prefix.
             </summary>
             <param name="item"></param>
             <param name="pre">The prefix being applied to the item, or the roll mode. -1 is when the item is naturally generated in a chest, crafted, purchased from an NPC, looted from a grab bag (excluding presents), or dropped by a slain enemy (if it's spawned with prefixGiven: -1). -2 is when the item is rolled in the tinkerer. -3 determines if the item can be placed in the tinkerer slot.</param>
             <param name="rand"></param>
             <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.AllowPrefix(Terraria.Item,System.Int32)">
            <summary>
            Force a re-roll of a prefix by returning false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanUseItem(Terraria.Item,Terraria.Player)">
            <summary>
            Returns whether or not any item can be used. Returns true by default. The inability to use a specific item overrides this, so use this to stop an item from being used.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanAutoReuseItem(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to modify the autoswing (auto-reuse) behavior of any item without having to mess with Item.autoReuse.
            <br>Useful to create effects like the Feral Claws which makes melee weapons and whips auto-reusable.</br>
            <br>Return true to enable autoswing (if not already enabled through autoReuse), return false to prevent autoswing. Returns null by default, which applies vanilla behavior.</br>
            </summary>
            <param name="item"> The item. </param>
            <param name="player"> The player. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseStyle(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to modify the location and rotation of any item in its use animation.
            </summary>
            <param name="item"> The item. </param>
            <param name="player"> The player. </param>
            <param name="heldItemFrame"> The source rectangle for the held item's texture. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.HoldStyle(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to modify the location and rotation of the item the player is currently holding.
            </summary>
            <param name="item"> The item. </param>
            <param name="player"> The player. </param>
            <param name="heldItemFrame"> The source rectangle for the held item's texture. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.HoldItem(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when the player is holding an item (for example, torches make light and water candles increase spawn rate).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseTimeMultiplier(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to change the effective useTime of an item.
            <br/> Note that this hook may cause items' actions to run less or more times than they should per a single use.
            </summary>
            <returns> The multiplier on the usage time. 1f by default. Values greater than 1 increase the item use's length. </returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseAnimationMultiplier(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to change the effective useAnimation of an item.
            <br/> Note that this hook may cause items' actions to run less or more times than they should per a single use.
            </summary>
            <returns>The multiplier on the animation time. 1f by default. Values greater than 1 increase the item animation's length. </returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseSpeedMultiplier(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to safely change both useTime and useAnimation while keeping the values relative to each other.
            <br/> Useful for status effects.
            </summary>
            <returns> The multiplier on the use speed. 1f by default. Values greater than 1 increase the overall item speed. </returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.GetHealLife(Terraria.Item,Terraria.Player,System.Boolean,System.Int32@)">
            <summary>
            Allows you to temporarily modify the amount of life a life healing item will heal for, based on player buffs, accessories, etc. This is only called for items with a healLife value.
            </summary>
            <param name="item">The item being used.</param>
            <param name="player">The player using the item.</param>
            <param name="quickHeal">Whether the item is being used through quick heal or not.</param>
            <param name="healValue">The amount of life being healed.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.GetHealMana(Terraria.Item,Terraria.Player,System.Boolean,System.Int32@)">
            <summary>
            Allows you to temporarily modify the amount of mana a mana healing item will heal for, based on player buffs, accessories, etc. This is only called for items with a healMana value.
            </summary>
            <param name="item">The item being used.</param>
            <param name="player">The player using the item.</param>
            <param name="quickHeal">Whether the item is being used through quick heal or not.</param>
            <param name="healValue">The amount of mana being healed.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyManaCost(Terraria.Item,Terraria.Player,System.Single@,System.Single@)">
            <summary>
            Allows you to temporarily modify the amount of mana an item will consume on use, based on player buffs, accessories, etc. This is only called for items with a mana value.
            <br/><br/> <b>Do not</b> modify <see cref="F:Terraria.Item.mana"/>, modify the <paramref name="reduce"/> and <paramref name="mult"/> parameters.
            </summary>
            <param name="item">The item being used.</param>
            <param name="player">The player using the item.</param>
            <param name="reduce">Used for decreasingly stacking buffs (most common). Only ever use -= on this field.</param>
            <param name="mult">Use to directly multiply the item's effective mana cost. Good for debuffs, or things which should stack separately (eg meteor armor set bonus).</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnMissingMana(Terraria.Item,Terraria.Player,System.Int32)">
            <summary>
            Allows you to make stuff happen when a player doesn't have enough mana for an item they are trying to use.
            If the player has high enough mana after this hook runs, mana consumption will happen normally.
            Only runs once per item use.
            </summary>
            <param name="item">The item being used.</param>
            <param name="player">The player using the item.</param>
            <param name="neededMana">The mana needed to use the item.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnConsumeMana(Terraria.Item,Terraria.Player,System.Int32)">
            <summary>
            Allows you to make stuff happen when a player consumes mana on use of an item.
            </summary>
            <param name="item">The item being used.</param>
            <param name="player">The player using the item.</param>
            <param name="manaConsumed">The mana consumed from the player.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyWeaponDamage(Terraria.Item,Terraria.Player,Terraria.ModLoader.StatModifier@)">
            <summary>
            Allows you to dynamically modify a weapon's damage based on player and item conditions.
            Can be utilized to modify damage beyond the tools that DamageClass has to offer.
            <br/><br/> <b>Do not</b> modify <see cref="F:Terraria.Item.damage"/>, modify the <paramref name="damage"/> parameter.
            </summary>
            <param name="item">The item being used.</param>
            <param name="player">The player using the item.</param>
            <param name="damage">The StatModifier object representing the totality of the various modifiers to be applied to the item's base damage.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyResearchSorting(Terraria.Item,Terraria.ID.ContentSamples.CreativeHelper.ItemGroup@)">
            <summary>
            Allows you to set an item's sorting group in Journey Mode's duplication menu. This is useful for setting custom item types that group well together, or whenever the default vanilla sorting doesn't sort the way you want it.
            </summary>
            <param name="item">The item being used</param>
            <param name="itemGroup">The item group this item is being assigned to</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanConsumeBait(Terraria.Player,Terraria.Item)">
            <summary>
            Allows you to choose if a given bait will be consumed by a given player
            Not consuming will always take priority over forced consumption
            </summary>
            <param name="bait">The bait being used</param>
            <param name="player">The player using the item</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanResearch(Terraria.Item)">
            <summary>
            Allows you to prevent an item from being researched by returning false. True is the default behavior.
            </summary>
            <param name="item">The item being researched</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnResearched(Terraria.Item,System.Boolean)">
            <summary>
            Allows you to create custom behavior when an item is accepted by the Research function 
            </summary>
            <param name="item">The item being researched</param>
            <param name="fullyResearched">True if the item was completely researched, and is ready to be duplicated, false if only partially researched.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyWeaponKnockback(Terraria.Item,Terraria.Player,Terraria.ModLoader.StatModifier@)">
            <summary>
            Allows you to dynamically modify a weapon's knockback based on player and item conditions.
            Can be utilized to modify damage beyond the tools that DamageClass has to offer.
            <br/><br/> <b>Do not</b> modify <see cref="F:Terraria.Item.knockBack"/>, modify the <paramref name="knockback"/> parameter.
            </summary>
            <param name="item">The item being used.</param>
            <param name="player">The player using the item.</param>
            <param name="knockback">The StatModifier object representing the totality of the various modifiers to be applied to the item's base knockback.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyWeaponCrit(Terraria.Item,Terraria.Player,System.Single@)">
            <summary>
            Allows you to dynamically modify a weapon's crit chance based on player and item conditions.
            Can be utilized to modify damage beyond the tools that DamageClass has to offer.
            <br/><br/> <b>Do not</b> modify <see cref="F:Terraria.Item.crit"/>, modify the <paramref name="crit"/> parameter.
            </summary>
            <param name="item">The item being used.</param>
            <param name="player">The player using the item.</param>
            <param name="crit">The total crit chance of the item after all normal crit chance calculations.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.NeedsAmmo(Terraria.Item,Terraria.Player)">
            <summary>
            Whether or not having no ammo prevents an item that uses ammo from shooting.
            Return false to allow shooting with no ammo in the inventory, in which case the item will act as if the default ammo for it is being used.
            Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PickAmmo(Terraria.Item,Terraria.Item,Terraria.Player,System.Int32@,System.Single@,Terraria.ModLoader.StatModifier@,System.Single@)">
            <summary>
            Allows you to modify various properties of the projectile created by a weapon based on the ammo it is using.
            </summary>
            <param name="weapon">The item that is using the given ammo.</param>
            <param name="ammo">The ammo item being used by the given weapon.</param>
            <param name="player">The player using the item.</param>
            <param name="type">The ID of the fired projectile.</param>
            <param name="speed">The speed of the fired projectile.</param>
            <param name="damage">
            The damage modifier for the projectile.<br></br>
            Total weapon damage is included as Flat damage.<br></br>
            Be careful not to apply flat or base damage bonuses which are already applied to the weapon.
            </param>
            <param name="knockback">The knockback of the fired projectile.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanChooseAmmo(Terraria.Item,Terraria.Item,Terraria.Player)">
            <summary>
            Whether or not the given ammo item is valid for the given weapon; called on the weapon. If this, or <see cref="M:Terraria.ModLoader.GlobalItem.CanBeChosenAsAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/> on the ammo, returns false, then the ammo will not be valid for this weapon. <br></br>
            By default, returns null and allows <see cref="F:Terraria.Item.useAmmo"/> and <see cref="F:Terraria.Item.ammo"/> to decide. Return true to make the ammo valid regardless of these fields, and return false to make it invalid. <br></br>
            If false is returned, the <see cref="M:Terraria.ModLoader.GlobalItem.CanConsumeAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/>, <see cref="M:Terraria.ModLoader.GlobalItem.CanBeConsumedAsAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/>, <see cref="M:Terraria.ModLoader.GlobalItem.OnConsumeAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/>, and <see cref="M:Terraria.ModLoader.GlobalItem.OnConsumedAsAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/> hooks are never called.
            </summary>
            <param name="weapon">The weapon that this hook is being called for.</param>
            <param name="ammo">The ammo that the weapon is attempting to select.</param>
            <param name="player">The player which this weapon and the potential ammo belong to.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanBeChosenAsAmmo(Terraria.Item,Terraria.Item,Terraria.Player)">
            <summary>
            Whether or not the given ammo item is valid for the given weapon; called on the ammo. If this, or <see cref="M:Terraria.ModLoader.GlobalItem.CanChooseAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/> on the weapon, returns false, then the ammo will not be valid for this weapon. <br></br>
            By default, returns null and allows <see cref="F:Terraria.Item.useAmmo"/> and <see cref="F:Terraria.Item.ammo"/> to decide. Return true to make the ammo valid regardless of these fields, and return false to make it invalid. <br></br>
            If false is returned, the <see cref="M:Terraria.ModLoader.GlobalItem.CanConsumeAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/>, <see cref="M:Terraria.ModLoader.GlobalItem.CanBeConsumedAsAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/>, <see cref="M:Terraria.ModLoader.GlobalItem.OnConsumeAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/>, and <see cref="M:Terraria.ModLoader.GlobalItem.OnConsumedAsAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/> hooks are never called.
            </summary>
            <param name="ammo">The ammo that this hook is being called for.</param>
            <param name="weapon">The weapon attempting to select the ammo.</param>
            <param name="player">The player which the weapon and this potential ammo belong to.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanConsumeAmmo(Terraria.Item,Terraria.Item,Terraria.Player)">
            <summary>
            Whether or not the given ammo item will be consumed; called on the weapon.<br></br>
            By default, returns true; return false to prevent ammo consumption.<br></br>
            If false is returned, the <see cref="M:Terraria.ModLoader.GlobalItem.OnConsumeAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/> and <see cref="M:Terraria.ModLoader.GlobalItem.OnConsumedAsAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/> hooks are never called.
            </summary>
            <param name="weapon">The weapon that this hook is being called for.</param>
            <param name="ammo">The ammo that the weapon is attempting to consume.</param>
            <param name="player">The player which this weapon and the ammo belong to.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanBeConsumedAsAmmo(Terraria.Item,Terraria.Item,Terraria.Player)">
            <summary>
            Whether or not the given ammo item will be consumed; called on the ammo.<br></br>
            By default, returns true; return false to prevent ammo consumption.<br></br>
            If false is returned, the <see cref="M:Terraria.ModLoader.GlobalItem.OnConsumeAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/> and <see cref="M:Terraria.ModLoader.GlobalItem.OnConsumedAsAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/> hooks are never called.
            </summary>
            <param name="ammo">The ammo that this hook is being called for.</param>
            <param name="weapon">The weapon attempting to consume the ammo.</param>
            <param name="player">The player which the weapon and this ammo belong to.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnConsumeAmmo(Terraria.Item,Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when the given ammo is consumed by the given weapon. Called by the weapon.<br></br>
            Called before the ammo stack is reduced, and is never called if the ammo isn't consumed in the first place.
            </summary>
            <param name="weapon">The currently-active weapon.</param>
            <param name="ammo">The ammo that the given weapon is currently using.</param>
            <param name="player">The player which the given weapon and the given ammo belong to.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnConsumedAsAmmo(Terraria.Item,Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when the given ammo is consumed by the given weapon. Called by the ammo.<br></br>
            Called before the ammo stack is reduced, and is never called if the ammo isn't consumed in the first place.
            </summary>
            <param name="ammo">The currently-active ammo.</param>
            <param name="weapon">The weapon that is currently using the given ammo.</param>
            <param name="player">The player which the given weapon and the given ammo belong to.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanShoot(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to prevent an item from shooting a projectile on use. Returns true by default.
            </summary>
            <param name="item"> The item being used. </param>
            <param name="player"> The player using the item. </param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyShootStats(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Int32@,System.Int32@,System.Single@)">
            <summary>
            Allows you to modify the position, velocity, type, damage and/or knockback of a projectile being shot by an item.<br/>
            These parameters will be provided to <see cref="M:Terraria.ModLoader.GlobalItem.Shoot(Terraria.Item,Terraria.Player,Terraria.DataStructures.EntitySource_ItemUse_WithAmmo,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Single)"/> where the projectile will actually be spawned.
            </summary>
            <param name="item"> The item being used. </param>
            <param name="player"> The player using the item. </param>
            <param name="position"> The center position of the projectile. </param>
            <param name="velocity"> The velocity of the projectile. </param>
            <param name="type"> The ID of the projectile. </param>
            <param name="damage"> The damage of the projectile. </param>
            <param name="knockback"> The knockback of the projectile. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.Shoot(Terraria.Item,Terraria.Player,Terraria.DataStructures.EntitySource_ItemUse_WithAmmo,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Single)">
            <summary>
            Allows you to modify an item's shooting mechanism. Return false to prevent vanilla's shooting code from running. Returns true by default.<br/>
            This method is called after the <see cref="M:Terraria.ModLoader.GlobalItem.ModifyShootStats(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Int32@,System.Int32@,System.Single@)"/> hook has had a chance to adjust the spawn parameters. 
            </summary>
            <param name="item"> The item being used. </param>
            <param name="player"> The player using the item. </param>
            <param name="source"> The projectile source's information. </param>
            <param name="position"> The center position of the projectile. </param>
            <param name="velocity"> The velocity of the projectile. </param>
            <param name="type"> The ID of the projectile. </param>
            <param name="damage"> The damage of the projectile. </param>
            <param name="knockback"> The knockback of the projectile. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseItemHitbox(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle@,System.Boolean@)">
            <summary>
            Changes the hitbox of a melee weapon when it is used.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.MeleeEffects(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to give melee weapons special effects, such as creating light or dust.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanCatchNPC(Terraria.Item,Terraria.NPC,Terraria.Player)">
            <summary>
            Allows you to determine whether the given item can catch the given NPC.<br></br>
            Return true or false to say the given NPC can or cannot be caught, respectively, regardless of vanilla rules.<br></br>
            Returns null by default, which allows vanilla's NPC catching rules to decide the target's fate.<br></br>
            If this returns false, <see cref="M:Terraria.ModLoader.CombinedHooks.OnCatchNPC(Terraria.Player,Terraria.NPC,Terraria.Item,System.Boolean)"/> is never called.<br></br><br></br>
            NOTE: this does not classify the given item as an NPC-catching tool, which is necessary for catching NPCs in the first place.<br></br>
            To do that, you will need to use the "CatchingTool" set in ItemID.Sets.
            </summary>
            <param name="item">The item with which the player is trying to catch the target NPC.</param>
            <param name="target">The NPC the player is trying to catch.</param>
            <param name="player">The player attempting to catch the NPC.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnCatchNPC(Terraria.Item,Terraria.NPC,Terraria.Player,System.Boolean)">
            <summary>
            Allows you to make things happen when the given item attempts to catch the given NPC.
            </summary>
            <param name="item">The item used to catch the given NPC.</param>
            <param name="npc">The NPC which the player attempted to catch.</param>
            <param name="player">The player attempting to catch the given NPC.</param>
            <param name="failed">Whether or not the given NPC has been successfully caught.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyItemScale(Terraria.Item,Terraria.Player,System.Single@)">
            <summary>
            Allows you to dynamically modify the given item's size for the given player, similarly to the effect of the Titan Glove.
            <br/><br/> <b>Do not</b> modify <see cref="F:Terraria.Item.scale"/>, modify the <paramref name="scale"/> parameter.
            </summary>
            <param name="item">The item to modify the scale of.</param>
            <param name="player">The player wielding the given item.</param>
            <param name="scale">
            The scale multiplier to be applied to the given item.<br></br>
            Will be 1.1 if the Titan Glove is equipped, and 1 otherwise.
            </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanHitNPC(Terraria.Item,Terraria.Player,Terraria.NPC)">
            <summary>
            Allows you to determine whether a melee weapon can hit the given NPC when swung. Return true to allow hitting the target, return false to block the weapon from hitting the target, and return null to use the vanilla code for whether the target can be hit. Returns null by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanMeleeAttackCollideWithNPC(Terraria.Item,Microsoft.Xna.Framework.Rectangle,Terraria.Player,Terraria.NPC)">
            <summary>
            Allows you to determine whether a melee weapon can collide with the given NPC when swung. <br/>
            Use <see cref="M:Terraria.ModLoader.GlobalItem.CanHitNPC(Terraria.Item,Terraria.Player,Terraria.NPC)"/> instead for Flymeal-type effects.
            </summary>
            <param name="item">The weapon item the player is holding.</param>
            <param name="meleeAttackHitbox">Hitbox of melee attack.</param>
            <param name="player">The player wielding this item.</param>
            <param name="target">The target npc.</param>
            <returns>
            Return true to allow colliding with target, return false to block the weapon from colliding with target, and return null to use the vanilla code for whether the target can be colliding. Returns null by default.
            </returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyHitNPC(Terraria.Item,Terraria.Player,Terraria.NPC,Terraria.NPC.HitModifiers@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that a melee weapon does to an NPC. <br/>
            This method is only called on the on the client of the player holding the weapon. <br/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnHitNPC(Terraria.Item,Terraria.Player,Terraria.NPC,Terraria.NPC.HitInfo,System.Int32)">
            <summary>
            Allows you to create special effects when a melee weapon hits an NPC (for example how the Pumpkin Sword creates pumpkin heads).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanHitPvp(Terraria.Item,Terraria.Player,Terraria.Player)">
            <summary>
            Allows you to determine whether a melee weapon can hit the given opponent player when swung. Return false to block the weapon from hitting the target. Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyHitPvp(Terraria.Item,Terraria.Player,Terraria.Player,Terraria.Player.HurtModifiers@)">
            <summary>
            Allows you to modify the damage, etc., that a melee weapon does to a player.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnHitPvp(Terraria.Item,Terraria.Player,Terraria.Player,Terraria.Player.HurtInfo)">
            <summary>
            Allows you to create special effects when a melee weapon hits a player. <br/>
            Called on local, server and remote clients. <br/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseItem(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when an item is used. The return value controls whether or not ApplyItemTime will be called for the player.
            <br/> Return true if the item actually did something, to force itemTime.
            <br/> Return false to keep itemTime at 0.
            <br/> Return null for vanilla behavior.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseAnimation(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when an item's use animation starts.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ConsumeItem(Terraria.Item,Terraria.Player)">
            <summary>
            If the item is consumable and this returns true, then the item will be consumed upon usage. Returns true by default.
            If false is returned, the OnConsumeItem hook is never called.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnConsumeItem(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when this item is consumed.
            Called before the item stack is reduced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UseItemFrame(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to modify the player's animation when an item is being used.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.HoldItemFrame(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to modify the player's animation when the player is holding an item.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.AltFunctionUse(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make an item usable by right-clicking. Returns false by default. When the item is used by right-clicking, player.altFunctionUse will be set to 2.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UpdateInventory(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when an item is in the player's inventory. This should NOT be used for information accessories;
            use <seealso cref="M:Terraria.ModLoader.GlobalItem.UpdateInfoAccessory(Terraria.Item,Terraria.Player)"/> for those instead.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UpdateInfoAccessory(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to set information accessory fields with the passed in player argument. This hook should only be used for information
            accessory fields such as the Radar, Lifeform Analyzer, and others. Using it for other fields will likely cause weird side-effects.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UpdateEquip(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to give effects to armors and accessories, such as increased damage.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UpdateAccessory(Terraria.Item,Terraria.Player,System.Boolean)">
            <summary>
            Allows you to give effects to accessories. The hideVisual parameter is whether the player has marked the accessory slot to be hidden from being drawn on the player.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UpdateVanity(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to give effects to this accessory when equipped in a vanity slot. Vanilla uses this for boot effects, wings and merman/werewolf visual flags
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.IsArmorSet(Terraria.Item,Terraria.Item,Terraria.Item)">
             <summary>
             Allows you to determine whether the player is wearing an armor set, and return a name for this set.
             If there is no armor set, return the empty string.
             Returns the empty string by default.
            
             This method is not instanced.
             </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UpdateArmorSet(Terraria.Player,System.String)">
             <summary>
             Allows you to give set bonuses to your armor set with the given name.
             The set name will be the same as returned by IsArmorSet.
            
             This method is not instanced.
             </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.IsVanitySet(System.Int32,System.Int32,System.Int32)">
             <summary>
             Returns whether or not the head armor, body armor, and leg armor textures make up a set.
             This hook is used for the PreUpdateVanitySet, UpdateVanitySet, and ArmorSetShadows hooks, and will use items in the social slots if they exist.
             By default this will return the same value as the IsArmorSet hook, so you will not have to use this hook unless you want vanity effects to be entirely separate from armor sets.
            
             This method is not instanced.
             </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PreUpdateVanitySet(Terraria.Player,System.String)">
             <summary>
             Allows you to create special effects (such as the necro armor's hurt noise) when the player wears the vanity set with the given name returned by IsVanitySet.
             This hook is called regardless of whether the player is frozen in any way.
            
             This method is not instanced.
             </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.UpdateVanitySet(Terraria.Player,System.String)">
             <summary>
             Allows you to create special effects (such as dust) when the player wears the vanity set with the given name returned by IsVanitySet. This hook will only be called if the player is not frozen in any way.
            
             This method is not instanced.
             </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ArmorSetShadows(Terraria.Player,System.String)">
             <summary>
             Allows you to determine special visual effects a vanity has on the player without having to code them yourself.
            
             This method is not instanced.
             </summary>
             <example><code>player.armorEffectDrawShadow = true;</code></example>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.SetMatch(System.Int32,System.Int32,System.Boolean,System.Int32@,System.Boolean@)">
             <summary>
             Allows you to modify the equipment that the player appears to be wearing.
            
             Note that type and equipSlot are not the same as the item type of the armor the player will appear to be wearing. Worn equipment has a separate set of IDs.
             You can find the vanilla equipment IDs by looking at the headSlot, bodySlot, and legSlot fields for items, and modded equipment IDs by looking at EquipLoader.
            
             This method is not instanced.
             </summary>
             <param name="armorSlot">head armor (0), body armor (1) or leg armor (2).</param>
             <param name="type">The equipment texture ID of the item that the player is wearing.</param>
             <param name="male">True if the player is male.</param>
             <param name="equipSlot">The altered equipment texture ID for the legs (armorSlot 1 and 2) or head (armorSlot 0)</param>
             <param name="robes">Set to true if you modify equipSlot when armorSlot == 1 to set Player.wearsRobe, otherwise ignore it</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanRightClick(Terraria.Item)">
            <summary>
            Returns whether or not an item does something when right-clicked in the inventory. Returns false by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.RightClick(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when an item is right-clicked in the inventory. Useful for goodie bags.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyItemLoot(Terraria.Item,Terraria.ModLoader.ItemLoot)">
            <summary>
            Allows you to add and modify the loot items that spawn from bag items when opened.
            <br/> The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-NPC-Drops-and-Loot-1.4">Basic NPC Drops and Loot 1.4 Guide</see> explains how to use the <see cref="M:Terraria.ModLoader.ModNPC.ModifyNPCLoot(Terraria.ModLoader.NPCLoot)"/> hook to modify NPC loot as well as this hook. A common usage is to use this hook and <see cref="M:Terraria.ModLoader.ModNPC.ModifyNPCLoot(Terraria.ModLoader.NPCLoot)"/> to edit non-expert exclusive drops for bosses.
            <br/> This hook only runs once per item type during mod loading, any dynamic behavior must be contained in the rules themselves.
            <br/> This hook is not instanced.
            </summary>
            <param name="item">A default item of the type being opened, not the actual item instance</param>
            <param name="itemLoot">A reference to the item drop database for this item type</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanStack(Terraria.Item,Terraria.Item)">
            <summary>
            Allows you to prevent items from stacking.
            <br/>This is only called when two items of the same type attempt to stack.
            <br/>This is usually not called for coins and ammo in the inventory/UI.
            <br/>This covers all scenarios, if you just need to change in-world stacking behavior, use <see cref="M:Terraria.ModLoader.GlobalItem.CanStackInWorld(Terraria.Item,Terraria.Item)"/>.
            </summary>
            <param name="destination">The item instance that <paramref name="source"/> will attempt to stack onto</param>
            <param name="source">The item instance being stacked onto <paramref name="destination"/></param>
            <returns>Whether or not the items are allowed to stack</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanStackInWorld(Terraria.Item,Terraria.Item)">
            <summary>
            Allows you to prevent items from stacking in the world.
            <br/>This is only called when two items of the same type attempt to stack.
            </summary>
            <param name="destination">The item instance that <paramref name="source"/> will attempt to stack onto</param>
            <param name="source">The item instance being stacked onto <paramref name="destination"/></param>
            <returns>Whether or not the items are allowed to stack</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnStack(Terraria.Item,Terraria.Item,System.Int32)">
            <summary>
            Allows you to make things happen when items stack together.<br/>
            This hook is called before the items are transferred from <paramref name="source"/> to <paramref name="destination"/>
            </summary>
            <param name="destination">The item instance that <paramref name="source"/> will attempt to stack onto</param>
            <param name="source">The item instance being stacked onto <paramref name="destination"/></param>
            <param name="numToTransfer">The quantity of <paramref name="source"/> that will be transferred to <paramref name="destination"/></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.SplitStack(Terraria.Item,Terraria.Item,System.Int32)">
            <summary>
            Allows you to make things happen when an item stack is split.  This hook is called before the stack values are modified.
            </summary>
            <param name="destination">
            The item instance that <paramref name="source"/> will transfer items to, and is usually a clone of <paramref name="source"/>.<br/>
            This parameter's stack will always be zero.
            </param>
            <param name="source">The item instance being stacked onto <paramref name="destination"/></param>
            <param name="numToTransfer">The quantity of <paramref name="source"/> that will be transferred to to <paramref name="destination"/></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ReforgePrice(Terraria.Item,System.Int32@,System.Boolean@)">
            <summary>
            Returns if the normal reforge pricing is applied.
            If true or false is returned and the price is altered, the price will equal the altered price.
            The passed reforge price equals the item.value. Vanilla pricing will apply 20% discount if applicable and then price the reforge at a third of that value.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanReforge(Terraria.Item)">
            <summary>
            This hook gets called when the player clicks on the reforge button and can afford the reforge.
            Returns whether the reforge will take place. If false is returned by the ModItem or any GlobalItem, the item will not be reforged, the cost to reforge will not be paid, and PreRefoge and PostReforge hooks will not be called.
            Reforging preserves modded data on the item.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PreReforge(Terraria.Item)">
            <summary>
            This hook gets called immediately before an item gets reforged by the Goblin Tinkerer.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PostReforge(Terraria.Item)">
            <summary>
            This hook gets called immediately after an item gets reforged by the Goblin Tinkerer.
            Useful for modifying modded data based on the reforge result.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.DrawArmorColor(Terraria.ModLoader.EquipType,System.Int32,Terraria.Player,System.Single,Microsoft.Xna.Framework.Color@,System.Int32@,Microsoft.Xna.Framework.Color@)">
             <summary>
             Allows you to modify the colors in which the player's armor and their surrounding accessories are drawn, in addition to which glow mask and in what color is drawn.
            
             This method is not instanced.
             </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ArmorArmGlowMask(System.Int32,Terraria.Player,System.Single,System.Int32@,Microsoft.Xna.Framework.Color@)">
             <summary>
             Allows you to modify which glow mask and in what color is drawn on the player's arms. Note that this is only called for body armor.
            
             This method is not instanced.
             </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.VerticalWingSpeeds(Terraria.Item,Terraria.Player,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to modify the speeds at which you rise and fall when wings are equipped.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.HorizontalWingSpeeds(Terraria.Item,Terraria.Player,System.Single@,System.Single@)">
            <summary>
            Allows you to modify the horizontal flight speed and acceleration of wings.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.WingUpdate(System.Int32,Terraria.Player,System.Boolean)">
             <summary>
             Allows for Wings to do various things while in use. "inUse" is whether or not the jump button is currently pressed.
             Called when wings visually appear on the player.
             Use to animate wings, create dusts, invoke sounds, and create lights. False will keep everything the same.
             True, you need to handle all animations in your own code.
            
             This method is not instanced.
             </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.Update(Terraria.Item,System.Single@,System.Single@)">
            <summary>
            Allows you to customize an item's movement when lying in the world. Note that this will not be called if the item is currently being grabbed by a player.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PostUpdate(Terraria.Item)">
            <summary>
            Allows you to make things happen when an item is lying in the world. This will always be called, even when the item is being grabbed by a player. This hook should be used for adding light, or for increasing the age of less valuable items.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.GrabRange(Terraria.Item,Terraria.Player,System.Int32@)">
            <summary>
            Allows you to modify how close an item must be to the player in order to move towards the player.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.GrabStyle(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to modify the way an item moves towards the player. Return false to allow the vanilla grab style to take place. Returns false by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanPickup(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to determine whether or not the item can be picked up
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.OnPickup(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make special things happen when the player picks up an item. Return false to stop the item from being added to the player's inventory; returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ItemSpace(Terraria.Item,Terraria.Player)">
            <summary>
            Return true to specify that the item can be picked up despite not having enough room in inventory. Useful for something like hearts or experience items. Use in conjunction with OnPickup to actually consume the item and handle it.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.GetAlpha(Terraria.Item,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to determine the color and transparency in which an item is drawn. Return null to use the default color (normally light color). Returns null by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PreDrawInWorld(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single@,System.Single@,System.Int32)">
            <summary>
            Allows you to draw things behind an item, or to modify the way an item is drawn in the world. Return false to stop the game from drawing the item (useful if you're manually drawing the item). Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PostDrawInWorld(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single,System.Single,System.Int32)">
            <summary>
            Allows you to draw things in front of an item. This method is called even if PreDrawInWorld returns false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PreDrawInInventory(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Allows you to draw things behind an item in the inventory. Return false to stop the game from drawing the item (useful if you're manually drawing the item). Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PostDrawInInventory(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Allows you to draw things in front of an item in the inventory. This method is called even if PreDrawInInventory returns false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.HoldoutOffset(System.Int32)">
             <summary>
             Allows you to determine the offset of an item's sprite when used by the player.
             This is only used for items with a useStyle of 5 that aren't staves.
             Return null to use the item's default holdout offset; returns null by default.
            
             This method is not instanced.
             </summary>
             <example><code>return new Vector2(10, 0);</code></example>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.HoldoutOrigin(System.Int32)">
             <summary>
             Allows you to determine the point on an item's sprite that the player holds onto when using the item.
             The origin is from the bottom left corner of the sprite. This is only used for staves with a useStyle of 5.
             Return null to use the item's default holdout origin; returns null by default.
            
             This method is not instanced.
             </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanEquipAccessory(Terraria.Item,Terraria.Player,System.Int32,System.Boolean)">
            <summary>
            Allows you to disallow the player from equipping an accessory. Return false to disallow equipping the accessory. Returns true by default.
            </summary>
            <param name="item">The item that is attempting to equip.</param>
            <param name="player">The player.</param>
            <param name="slot">The inventory slot that the item is attempting to occupy.</param>
            <param name="modded">If the inventory slot index is for modded slots.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CanAccessoryBeEquippedWith(Terraria.Item,Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to prevent similar accessories from being equipped multiple times. For example, vanilla Wings.
            Return false to have the currently equipped item swapped with the incoming item - ie both can't be equipped at same time.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ExtractinatorUse(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Allows you to modify what item, and in what quantity, is obtained when an item of the given type is fed into the Extractinator.
            <br/> An extractType of 0 represents the default extraction (Silt and Slush). 0, <see cref="F:Terraria.ID.ItemID.DesertFossil"/>, <see cref="F:Terraria.ID.ItemID.OldShoe"/>, and <see cref="F:Terraria.ID.ItemID.LavaMoss"/> are vanilla extraction types. Modded types by convention will correspond to the iconic item of the extraction type. The <see href="https://terraria.wiki.gg/wiki/Extractinator">Extractinator wiki page</see> has more info.
            <br/> By default the parameters will be set to the output of feeding Silt/Slush into the Extractinator.
            <br/> Use <paramref name="extractinatorBlockType"/> to provide different behavior for <see cref="F:Terraria.ID.TileID.ChlorophyteExtractinator"/> if desired.
            <br/> If the Chlorophyte Extractinator item swapping behavior is desired, see the example in ExampleAdvancedFlail.cs.
            <br/> 
            <br/> This method is not instanced.
            </summary>
            <param name="extractType">The extractinator type corresponding to the items being processed</param>
            <param name="extractinatorBlockType">Which Extractinator tile is being used, <see cref="F:Terraria.ID.TileID.Extractinator"/> or <see cref="F:Terraria.ID.TileID.ChlorophyteExtractinator"/>.</param>
            <param name="resultType">Type of the result.</param>
            <param name="resultStack">The result stack.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.CaughtFishStack(System.Int32,System.Int32@)">
            <summary>
            Allows you to modify how many of an item a player obtains when the player fishes that item.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.IsAnglerQuestAvailable(System.Int32)">
             <summary>
             Whether or not specific conditions have been satisfied for the Angler to be able to request the given item. (For example, Hardmode.)
             Returns true by default.
            
             This method is not instanced.
             </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.AnglerChat(System.Int32,System.String@,System.String@)">
             <summary>
             Allows you to set what the Angler says when the Quest button is clicked in his chat.
             The chat parameter is his dialogue, and catchLocation should be set to "Caught at [location]" for the given type.
            
             This method is not instanced.
             </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.AddRecipes">
            <summary>
            Override this method to add <see cref="T:Terraria.Recipe"/>s to the game.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Recipes">Basic Recipes Guide</see> teaches how to add new recipes to the game and how to manipulate existing recipes.<br/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PreDrawTooltip(Terraria.Item,System.Collections.ObjectModel.ReadOnlyCollection{Terraria.ModLoader.TooltipLine},System.Int32@,System.Int32@)">
            <summary>
            Allows you to do things before this item's tooltip is drawn.
            </summary>
            <param name="item">The item</param>
            <param name="lines">The tooltip lines for this item</param>
            <param name="x">The top X position for this tooltip. It is where the first line starts drawing</param>
            <param name="y">The top Y position for this tooltip. It is where the first line starts drawing</param>
            <returns>Whether or not to draw this tooltip</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PostDrawTooltip(Terraria.Item,System.Collections.ObjectModel.ReadOnlyCollection{Terraria.ModLoader.DrawableTooltipLine})">
            <summary>
            Allows you to do things after this item's tooltip is drawn. The lines contain draw information as this is ran after drawing the tooltip.
            </summary>
            <param name="item">The item</param>
            <param name="lines">The tooltip lines for this item</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PreDrawTooltipLine(Terraria.Item,Terraria.ModLoader.DrawableTooltipLine,System.Int32@)">
            <summary>
            Allows you to do things before a tooltip line of this item is drawn. The line contains draw info.
            </summary>
            <param name="item">The item</param>
            <param name="line">The line that would be drawn</param>
            <param name="yOffset">The Y offset added for next tooltip lines</param>
            <returns>Whether or not to draw this tooltip line</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.PostDrawTooltipLine(Terraria.Item,Terraria.ModLoader.DrawableTooltipLine)">
            <summary>
            Allows you to do things after a tooltip line of this item is drawn. The line contains draw info.
            </summary>
            <param name="item">The item</param>
            <param name="line">The line that was drawn</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.ModifyTooltips(Terraria.Item,System.Collections.Generic.List{Terraria.ModLoader.TooltipLine})">
            <summary>
            Allows you to modify all the tooltips that display for the given item. See here for information about TooltipLine.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.SaveData(Terraria.Item,Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to save custom data for this item.
            <br/>
            <br/><b>NOTE:</b> The provided tag is always empty by default, and is provided as an argument only for the sake of convenience and optimization.
            <br/><b>NOTE:</b> Try to only save data that isn't default values.
            </summary>
            <param name="item"> The item. </param>
            <param name="tag"> The TagCompound to save data into. Note that this is always empty by default, and is provided as an argument only for the sake of convenience and optimization. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.LoadData(Terraria.Item,Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to load custom data that you have saved for this item.
            <br/><b>Try to write defensive loading code that won't crash if something's missing.</b>
            </summary>
            <param name="item"> The item. </param>
            <param name="tag"> The TagCompound to load data from. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.NetSend(Terraria.Item,System.IO.BinaryWriter)">
            <inheritdoc cref="M:Terraria.ModLoader.ModItem.NetSend(System.IO.BinaryWriter)"/>
        </member>
        <member name="M:Terraria.ModLoader.GlobalItem.NetReceive(Terraria.Item,System.IO.BinaryReader)">
            <inheritdoc cref="M:Terraria.ModLoader.ModItem.NetReceive(System.IO.BinaryReader)"/>
        </member>
        <member name="P:Terraria.ModLoader.GlobalList`1.Globals">
            <summary>
            All registered globals. Empty until all globals have loaded
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalList`1.FinishLoading(System.Int32)">
            <summary>
            Call during <see cref="M:Terraria.ModLoader.ILoader.ResizeArrays"/>. Which runs after all <see cref="M:Terraria.ModLoader.ILoadable.Load(Terraria.ModLoader.Mod)"/> calls, but before any <see cref="M:Terraria.ModLoader.ModType.SetupContent"/> calls
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalList`1.Reset">
            <summary>
            Call during unloading, to clear the globals list
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.GlobalLoot">
            <summary> This readonly struct is a simple shortcut for modifying global drop rules in an <see cref="T:Terraria.GameContent.ItemDropRules.ItemDropDatabase"/>. </summary>
        </member>
        <member name="T:Terraria.ModLoader.GlobalNPC">
            <summary>
            This class allows you to modify and use hooks for all NPCs, including vanilla mobs. Create an instance of an overriding class then call Mod.AddGlobalNPC to use this.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnSpawn(Terraria.NPC,Terraria.DataStructures.IEntitySource)">
            <summary>
            Gets called when any NPC spawns in world
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ApplyDifficultyAndPlayerScaling(Terraria.NPC,System.Int32,System.Single,System.Single)">
            <summary>
            Allows you to customize this NPC's stats when the difficulty is expert or higher.<br/>
            This runs after <see cref="F:Terraria.NPC.value"/>,  <see cref="F:Terraria.NPC.lifeMax"/>,  <see cref="F:Terraria.NPC.damage"/>,  <see cref="F:Terraria.NPC.knockBackResist"/> have been adjusted for the current difficulty, (expert/master/FTW)<br/>
            It is common to multiply lifeMax by the balance factor, and sometimes adjust knockbackResist.<br/>
            <br/>
            Eg:<br/>
            <code>lifeMax = (int)(lifeMax * balance * bossAdjustment)</code>
            </summary>
            <param name="npc">The newly spawned NPC</param>
            <param name="numPlayers">The number of active players</param>
            <param name="balance">Scaling factor that increases by a fraction for each player</param>
            <param name="bossAdjustment">An extra reduction factor to be applied to boss life in high difficulty modes</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.SetBestiary(Terraria.NPC,Terraria.GameContent.Bestiary.BestiaryDatabase,Terraria.GameContent.Bestiary.BestiaryEntry)">
            <summary>
            Allows you to set an NPC's information in the Bestiary.
            </summary>
            <param name="npc"></param>
            <param name="database"></param>
            <param name="bestiaryEntry"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyTypeName(Terraria.NPC,System.String@)">
            <summary>
            Allows you to modify the type name of this NPC dynamically.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyHoverBoundingBox(Terraria.NPC,Microsoft.Xna.Framework.Rectangle@)">
            <summary>
            Allows you to modify the bounding box for hovering over the given NPC (affects things like whether or not its name is displayed).
            </summary>
            <param name="npc">The NPC in question.</param>
            <param name="boundingBox">The bounding box used for determining whether or not the NPC counts as being hovered over.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyTownNPCProfile(Terraria.NPC)">
            <summary>
            Allows you to set the town NPC profile that a given NPC uses.
            </summary>
            <param name="npc">The NPC in question.</param>
            <returns>The profile that you want the given NPC to use.<br></br>
            This will only influence their choice of profile if you do not return null.<br></br>
            By default, returns null, which causes no change.</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyNPCNameList(Terraria.NPC,System.Collections.Generic.List{System.String})">
            <summary>
            Allows you to modify the list of names available to the given town NPC.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ResetEffects(Terraria.NPC)">
            <summary>
            This is where you reset any fields you add to your subclass to their default states. This is necessary in order to reset your fields if they are conditionally set by a tick update but the condition is no longer satisfied.
            </summary>
            <param name="npc"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.PreAI(Terraria.NPC)">
            <summary>
            Allows you to determine how any NPC behaves. Return false to stop the vanilla AI and the AI hook from being run. Returns true by default.
            </summary>
            <param name="npc"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.AI(Terraria.NPC)">
            <summary>
            Allows you to determine how any NPC behaves. This will only be called if PreAI returns true.
            </summary>
            <param name="npc"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.PostAI(Terraria.NPC)">
            <summary>
            Allows you to determine how any NPC behaves. This will be called regardless of what PreAI returns.
            </summary>
            <param name="npc"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.SendExtraAI(Terraria.NPC,Terraria.ModLoader.IO.BitWriter,System.IO.BinaryWriter)">
            <summary>
            Use this judiciously to avoid straining the network.
            <br/>Checks and methods such as <see cref="M:Terraria.ModLoader.GlobalType`2.AppliesToEntity(`0,System.Boolean)"/> can reduce how much data must be sent for how many projectiles.
            <br/>Called whenever <see cref="F:Terraria.ID.MessageID.SyncNPC"/> is successfully sent, for example on NPC creation, on player join, or whenever NPC.netUpdate is set to true in the update loop for that tick.
            <br/>Can be called on the server.
            </summary>
            <param name="npc">The NPC.</param>
            <param name="bitWriter">The compressible bit writer. Booleans written via this are compressed across all mods to improve multiplayer performance.</param>
            <param name="binaryWriter">The writer.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ReceiveExtraAI(Terraria.NPC,Terraria.ModLoader.IO.BitReader,System.IO.BinaryReader)">
            <summary>
            Use this to receive information that was sent in <see cref="M:Terraria.ModLoader.GlobalNPC.SendExtraAI(Terraria.NPC,Terraria.ModLoader.IO.BitWriter,System.IO.BinaryWriter)"/>.
            <br/>Called whenever <see cref="F:Terraria.ID.MessageID.SyncNPC"/> is successfully received.
            <br/>Can be called on multiplayer clients.
            </summary>
            <param name="npc">The NPC.</param>
            <param name="bitReader">The compressible bit reader.</param>
            <param name="binaryReader">The reader.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.FindFrame(Terraria.NPC,System.Int32)">
            <summary>
            Allows you to modify the frame from an NPC's texture that is drawn, which is necessary in order to animate NPCs.
            </summary>
            <param name="npc"></param>
            <param name="frameHeight"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.HitEffect(Terraria.NPC,Terraria.NPC.HitInfo)">
            <summary>
            Allows you to make things happen whenever an NPC is hit, such as creating dust or gores. <br/>
            Called on local, server and remote clients. <br/>
            Usually when something happens when an npc dies such as item spawning, you use NPCLoot, but you can use HitEffect paired with a check for <c>if (npc.life &lt;= 0)</c> to do client-side death effects, such as spawning dust, gore, or death sounds. <br/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.UpdateLifeRegen(Terraria.NPC,System.Int32@)">
            <summary>
            Allows you to make the NPC either regenerate health or take damage over time by setting npc.lifeRegen. Regeneration or damage will occur at a rate of half of npc.lifeRegen per second. The damage parameter is the number that appears above the NPC's head if it takes damage over time.
            </summary>
            <param name="npc"></param>
            <param name="damage"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CheckActive(Terraria.NPC)">
            <summary>
            Whether or not to run the code for checking whether an NPC will remain active. Return false to stop the NPC from being despawned and to stop the NPC from counting towards the limit for how many NPCs can exist near a player. Returns true by default.
            </summary>
            <param name="npc"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CheckDead(Terraria.NPC)">
            <summary>
            Whether or not an NPC should be killed when it reaches 0 health. You may program extra effects in this hook (for example, how Golem's head lifts up for the second phase of its fight). Return false to stop the NPC from being killed. Returns true by default.
            </summary>
            <param name="npc"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.SpecialOnKill(Terraria.NPC)">
            <summary>
            Allows you to call OnKill on your own when the NPC dies, rather then letting vanilla call it on its own. Returns false by default.
            </summary>
            <returns>Return true to stop vanilla from calling OnKill on its own. Do this if you call OnKill yourself.</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.PreKill(Terraria.NPC)">
            <summary>
            Allows you to determine whether or not NPC from doing anything on death (besides die). Return false to stop the NPC from doing anything special. Returns true by default.
            </summary>
            <param name="npc"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnKill(Terraria.NPC)">
            <summary>
            Allows you to make things happen when an NPC dies (for example, setting ModSystem fields). This hook runs on the server/single player. For client-side effects, such as dust, gore, and sounds, see HitEffect
            </summary>
            <param name="npc"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanFallThroughPlatforms(Terraria.NPC)">
            <summary>
            Allows you to determine how and when an NPC can fall through platforms and similar tiles.
            <br/>Return true to allow an NPC to fall through platforms, false to prevent it. Returns null by default, applying vanilla behaviors (based on aiStyle and type).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanBeCaughtBy(Terraria.NPC,Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to determine whether the given item can catch the given NPC.<br></br>
            Return true or false to say the given NPC can or cannot be caught, respectively, regardless of vanilla rules.<br></br>
            Returns null by default, which allows vanilla's NPC catching rules to decide the target's fate.<br></br>
            If this returns false, <see cref="M:Terraria.ModLoader.CombinedHooks.OnCatchNPC(Terraria.Player,Terraria.NPC,Terraria.Item,System.Boolean)"/> is never called.<br></br><br></br>
            NOTE: this does not classify the given item as an NPC-catching tool, which is necessary for catching NPCs in the first place.<br></br>
            To do that, you will need to use the "CatchingTool" set in ItemID.Sets.
            </summary>
            <param name="npc">The NPC that can potentially be caught.</param>
            <param name="item">The item with which the player is trying to catch the given NPC.</param>
            <param name="player">The player attempting to catch the given NPC.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnCaughtBy(Terraria.NPC,Terraria.Player,Terraria.Item,System.Boolean)">
            <summary>
            Allows you to make things happen when the given item attempts to catch the given NPC.
            </summary>
            <param name="npc">The NPC which the player attempted to catch.</param>
            <param name="player">The player attempting to catch the given NPC.</param>
            <param name="item">The item used to catch the given NPC.</param>
            <param name="failed">Whether or not the given NPC has been successfully caught.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyNPCLoot(Terraria.NPC,Terraria.ModLoader.NPCLoot)">
            <summary>
            Allows you to add and modify NPC loot tables to drop on death and to appear in the Bestiary.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-NPC-Drops-and-Loot-1.4">Basic NPC Drops and Loot 1.4 Guide</see> explains how to use this hook to modify npc loot.
            <br/> This hook only runs once per npc type during mod loading, any dynamic behavior must be contained in the rules themselves.
            </summary>
            <param name="npc">A default npc of the type being opened, not the actual npc instance.</param>
            <param name="npcLoot">A reference to the item drop database for this npc type.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyGlobalLoot(Terraria.ModLoader.GlobalLoot)">
            <summary>
            Allows you to add and modify global loot rules that are conditional, i.e. vanilla's biome keys and souls.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-NPC-Drops-and-Loot-1.4">Basic NPC Drops and Loot 1.4 Guide</see> explains how to use this hook to modify npc loot.
            </summary>
            <param name="globalLoot"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanHitPlayer(Terraria.NPC,Terraria.Player,System.Int32@)">
            <summary>
            Allows you to determine whether an NPC can hit the given player. Return false to block the NPC from hitting the target. Returns true by default. CooldownSlot determines which of the player's cooldown counters to use (-1, 0, or 1), and defaults to -1.
            </summary>
            <param name="npc"></param>
            <param name="target"></param>
            <param name="cooldownSlot"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyHitPlayer(Terraria.NPC,Terraria.Player,Terraria.Player.HurtModifiers@)">
            <summary>
            Allows you to modify the damage, etc., that an NPC does to a player.
            </summary>
            <param name="npc"></param>
            <param name="target"></param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnHitPlayer(Terraria.NPC,Terraria.Player,Terraria.Player.HurtInfo)">
            <summary>
            Allows you to create special effects when an NPC hits a player (for example, inflicting debuffs). <br/>
            Only runs on the local client in multiplayer.
            </summary>
            <param name="npc"></param>
            <param name="target"></param>
            <param name="hurtInfo"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanHitNPC(Terraria.NPC,Terraria.NPC)">
            <summary>
            Allows you to determine whether an NPC can hit the given friendly NPC. Return false to block the NPC from hitting the target, and return true to use the vanilla code for whether the target can be hit. Returns true by default.
            </summary>
            <param name="npc"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanBeHitByNPC(Terraria.NPC,Terraria.NPC)">
            <summary>
            Allows you to determine whether a friendly NPC can be hit by an NPC. Return false to block the attacker from hitting the NPC, and return true to use the vanilla code for whether the target can be hit. Returns true by default.
            </summary>
            <param name="npc"></param>
            <param name="attacker"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyHitNPC(Terraria.NPC,Terraria.NPC,Terraria.NPC.HitModifiers@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that an NPC does to a friendly NPC.
            </summary>
            <param name="npc"></param>
            <param name="target"></param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnHitNPC(Terraria.NPC,Terraria.NPC,Terraria.NPC.HitInfo)">
            <summary>
            Allows you to create special effects when an NPC hits a friendly NPC.
            </summary>
            <param name="npc"></param>
            <param name="target"></param>
            <param name="hit"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanBeHitByItem(Terraria.NPC,Terraria.Player,Terraria.Item)">
            <summary>
            Allows you to determine whether an NPC can be hit by the given melee weapon when swung. Return true to allow hitting the NPC, return false to block hitting the NPC, and return null to use the vanilla code for whether the NPC can be hit. Returns null by default.
            </summary>
            <param name="npc"></param>
            <param name="player"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanCollideWithPlayerMeleeAttack(Terraria.NPC,Terraria.Player,Terraria.Item,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to determine whether an NPC can be collided with the player melee weapon when swung. <br/>
            Use <see cref="M:Terraria.ModLoader.GlobalNPC.CanBeHitByItem(Terraria.NPC,Terraria.Player,Terraria.Item)"/> instead for Guide Voodoo Doll-type effects.
            </summary>
            <param name="player">The player wielding this item.</param>
            <param name="item">The weapon item the player is holding.</param>
            <param name="meleeAttackHitbox">Hitbox of melee attack.</param>
            <returns>
            Return true to allow colliding with the melee attack, return false to block the weapon from colliding with the NPC, and return null to use the vanilla code for whether the attack can be colliding. Returns null by default.
            </returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyHitByItem(Terraria.NPC,Terraria.Player,Terraria.Item,Terraria.NPC.HitModifiers@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that an NPC takes from a melee weapon. <br/>
            Runs on the local client. <br/>
            </summary>
            <param name="npc"></param>
            <param name="player"></param>
            <param name="item"></param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnHitByItem(Terraria.NPC,Terraria.Player,Terraria.Item,Terraria.NPC.HitInfo,System.Int32)">
            <summary>
            Allows you to create special effects when an NPC is hit by a melee weapon.
            </summary>
            <param name="npc"></param>
            <param name="player"></param>
            <param name="item"></param>
            <param name="hit"></param>
            <param name="damageDone"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanBeHitByProjectile(Terraria.NPC,Terraria.Projectile)">
            <summary>
            Allows you to determine whether an NPC can be hit by the given projectile. Return true to allow hitting the NPC, return false to block hitting the NPC, and return null to use the vanilla code for whether the NPC can be hit. Returns null by default.
            </summary>
            <param name="npc"></param>
            <param name="projectile"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyHitByProjectile(Terraria.NPC,Terraria.Projectile,Terraria.NPC.HitModifiers@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that an NPC takes from a projectile.
            </summary>
            <param name="npc"></param>
            <param name="projectile"></param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnHitByProjectile(Terraria.NPC,Terraria.Projectile,Terraria.NPC.HitInfo,System.Int32)">
            <summary>
            Allows you to create special effects when an NPC is hit by a projectile.
            </summary>
            <param name="npc"></param>
            <param name="projectile"></param>
            <param name="hit"></param>
            <param name="damageDone"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyIncomingHit(Terraria.NPC,Terraria.NPC.HitModifiers@)">
            <summary>
            Allows you to use a custom damage formula for when an NPC takes damage from any source. For example, you can change the way defense works or use a different crit multiplier.
            </summary>
            <param name="npc"></param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.BossHeadSlot(Terraria.NPC,System.Int32@)">
            <summary>
            Allows you to customize the boss head texture used by an NPC based on its state. Set index to -1 to stop the texture from being displayed.
            </summary>
            <param name="npc"></param>
            <param name="index">The index for NPCID.Sets.BossHeadTextures</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.BossHeadRotation(Terraria.NPC,System.Single@)">
            <summary>
            Allows you to customize the rotation of an NPC's boss head icon on the map.
            </summary>
            <param name="npc"></param>
            <param name="rotation"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.BossHeadSpriteEffects(Terraria.NPC,Microsoft.Xna.Framework.Graphics.SpriteEffects@)">
            <summary>
            Allows you to flip an NPC's boss head icon on the map.
            </summary>
            <param name="npc"></param>
            <param name="spriteEffects"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.GetAlpha(Terraria.NPC,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to determine the color and transparency in which an NPC is drawn. Return null to use the default color (normally light and buff color). Returns null by default.
            </summary>
            <param name="npc"></param>
            <param name="drawColor"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.DrawEffects(Terraria.NPC,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to add special visual effects to an NPC (such as creating dust), and modify the color in which the NPC is drawn.
            </summary>
            <param name="npc"></param>
            <param name="drawColor"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.PreDraw(Terraria.NPC,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to draw things behind an NPC, or to modify the way the NPC is drawn. Substract screenPos from the draw position before drawing. Return false to stop the game from drawing the NPC (useful if you're manually drawing the NPC). Returns true by default.
            </summary>
            <param name="npc">The NPC that is being drawn</param>
            <param name="spriteBatch">The spritebatch to draw on</param>
            <param name="screenPos">The screen position used to translate world position into screen position</param>
            <param name="drawColor">The color the NPC is drawn in</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.PostDraw(Terraria.NPC,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to draw things in front of this NPC. Substract screenPos from the draw position before drawing. This method is called even if PreDraw returns false.
            </summary>
            <param name="npc">The NPC that is being drawn</param>
            <param name="spriteBatch">The spritebatch to draw on</param>
            <param name="screenPos">The screen position used to translate world position into screen position</param>
            <param name="drawColor">The color the NPC is drawn in</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.DrawBehind(Terraria.NPC,System.Int32)">
            <summary>
            When used in conjunction with "npc.hide = true", allows you to specify that this npc should be drawn behind certain elements. Add the index to one of Main.DrawCacheNPCsMoonMoon, DrawCacheNPCsOverPlayers, DrawCacheNPCProjectiles, or DrawCacheNPCsBehindNonSolidTiles.
            </summary>
            <param name="npc"></param>
            <param name="index"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.DrawHealthBar(Terraria.NPC,System.Byte,System.Single@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Allows you to control how the health bar for the given NPC is drawn. The hbPosition parameter is the same as Main.hbPosition; it determines whether the health bar gets drawn above or below the NPC by default. The scale parameter is the health bar's size. By default, it will be the normal 1f; most bosses set this to 1.5f. Return null to let the normal vanilla health-bar-drawing code to run. Return false to stop the health bar from being drawn. Return true to draw the health bar in the position specified by the position parameter (note that this is the world position, not screen position).
            </summary>
            <param name="npc"></param>
            <param name="hbPosition"></param>
            <param name="scale"></param>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.EditSpawnRate(Terraria.Player,System.Int32@,System.Int32@)">
            <summary>
            Allows you to modify the chance of NPCs spawning around the given player and the maximum number of NPCs that can spawn around the player. Lower spawnRates mean a higher chance for NPCs to spawn.
            </summary>
            <param name="player"></param>
            <param name="spawnRate"></param>
            <param name="maxSpawns"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.EditSpawnRange(Terraria.Player,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Allows you to modify the range at which NPCs can spawn around the given player. The spawnRanges determine that maximum distance NPCs can spawn from the player, and the safeRanges determine the minimum distance.
            </summary>
            <param name="player"></param>
            <param name="spawnRangeX"></param>
            <param name="spawnRangeY"></param>
            <param name="safeRangeX"></param>
            <param name="safeRangeY"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.EditSpawnPool(System.Collections.Generic.IDictionary{System.Int32,System.Single},Terraria.ModLoader.NPCSpawnInfo)">
            <summary>
            Allows you to control which NPCs can spawn and how likely each one is to spawn. The pool parameter maps NPC types to their spawning weights (likelihood to spawn compared to other NPCs). A type of 0 in the pool represents the default vanilla NPC spawning.
            </summary>
            <param name="pool"></param>
            <param name="spawnInfo"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.SpawnNPC(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to customize an NPC (for example, its position or ai array) after it naturally spawns and before it is synced between servers and clients. As of right now, this only works for modded NPCs.
            </summary>
            <param name="npc"></param>
            <param name="tileX"></param>
            <param name="tileY"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanChat(Terraria.NPC)">
            <summary>
            Allows you to determine whether this NPC can talk with the player. Return true to allow talking with the player, return false to block this NPC from talking with the player, and return null to use the vanilla code for whether the NPC can talk. Returns null by default.
            </summary>
            <param name="npc"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.GetChat(Terraria.NPC,System.String@)">
            <summary>
            Allows you to modify the chat message of any NPC that the player can talk to.
            </summary>
            <param name="npc"></param>
            <param name="chat"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.PreChatButtonClicked(Terraria.NPC,System.Boolean)">
            <summary>
            Allows you to determine if something can happen whenever a button is clicked on this NPC's chat window. The firstButton parameter tells whether the first button or second button (button and button2 from SetChatButtons) was clicked. Return false to prevent the normal code for this button from running. Returns true by default.
            </summary>
            <param name="npc"></param>
            <param name="firstButton"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnChatButtonClicked(Terraria.NPC,System.Boolean)">
            <summary>
            Allows you to make something happen whenever a button is clicked on this NPC's chat window. The firstButton parameter tells whether the first button or second button (button and button2 from SetChatButtons) was clicked.
            </summary>
            <param name="npc"></param>
            <param name="firstButton"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyShop(Terraria.ModLoader.NPCShop)">
            <summary>
            Allows you to modify existing shop. Be aware that this hook is called just one time during loading.
            </summary>
            <param name="shop">A <seealso cref="T:Terraria.ModLoader.NPCShop"/> instance.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyActiveShop(Terraria.NPC,System.String,Terraria.Item[])">
            <summary>
            Allows you to modify the contents of a shop whenever player opens it. <br/>
            If possible, use <see cref="M:Terraria.ModLoader.GlobalNPC.ModifyShop(Terraria.ModLoader.NPCShop)"/> instead, to reduce mod conflicts and improve compatibility.
            Note that for special shops like travelling merchant, the <paramref name="shopName"/> may not correspond to a <see cref="T:Terraria.ModLoader.NPCShop"/> in the <see cref="T:Terraria.ModLoader.NPCShopDatabase"/>
            </summary>
            <param name="npc">An instance of <seealso cref="T:Terraria.NPC"/> that currently player talks to.</param>
            <param name="shopName">The full name of the shop being opened. See <see cref="M:Terraria.ModLoader.NPCShopDatabase.GetShopName(System.Int32,System.String)"/> for the format. </param>
            <param name="items">Items in the shop including 'air' items in empty slots.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.SetupTravelShop(System.Int32[],System.Int32@)">
            <summary>
            Allows you to add items to the traveling merchant's shop. Add an item by setting shop[nextSlot] to the ID of the item you are adding then incrementing nextSlot. In the end, nextSlot must have a value of 1 greater than the highest index in shop that represents an item ID. If you want to remove an item, you will have to be familiar with programming.
            </summary>
            <param name="shop"></param>
            <param name="nextSlot"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.CanGoToStatue(Terraria.NPC,System.Boolean)">
            <summary>
            Whether this NPC can be teleported to a King or Queen statue. Return true to allow the NPC to teleport to the statue, return false to block this NPC from teleporting to the statue, and return null to use the vanilla code for whether the NPC can teleport to the statue. Returns null by default.
            </summary>
            <param name="npc">The NPC</param>
            <param name="toKingStatue">Whether the NPC is being teleported to a King or Queen statue.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.OnGoToStatue(Terraria.NPC,System.Boolean)">
            <summary>
            Allows you to make things happen when this NPC teleports to a King or Queen statue.
            This method is only called server side.
            </summary>
            <param name="npc">The NPC</param>
            <param name="toKingStatue">Whether the NPC was teleported to a King or Queen statue.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.BuffTownNPC(System.Single@,System.Int32@)">
            <summary>
            Allows you to modify the stats of town NPCs. Useful for buffing town NPCs when certain bosses are defeated, etc.
            </summary>
            <param name="damageMult"></param>
            <param name="defense"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.TownNPCAttackStrength(Terraria.NPC,System.Int32@,System.Single@)">
            <summary>
            Allows you to determine the damage and knockback of a town NPC's attack before the damage is scaled. (More information on scaling in GlobalNPC.BuffTownNPCs.)
            </summary>
            <param name="npc"></param>
            <param name="damage"></param>
            <param name="knockback"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.TownNPCAttackCooldown(Terraria.NPC,System.Int32@,System.Int32@)">
            <summary>
            Allows you to determine the cooldown between each of a town NPC's attack. The cooldown will be a number greater than or equal to the first parameter, and less then the sum of the two parameters.
            </summary>
            <param name="npc"></param>
            <param name="cooldown"></param>
            <param name="randExtraCooldown"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.TownNPCAttackProj(Terraria.NPC,System.Int32@,System.Int32@)">
            <summary>
            Allows you to determine the projectile type of a town NPC's attack, and how long it takes for the projectile to actually appear. This hook is only used when the town NPC has an attack type of 0 (throwing), 1 (shooting), or 2 (magic).
            </summary>
            <param name="npc"></param>
            <param name="projType"></param>
            <param name="attackDelay"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.TownNPCAttackProjSpeed(Terraria.NPC,System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to determine the speed at which a town NPC throws a projectile when it attacks. Multiplier is the speed of the projectile, gravityCorrection is how much extra the projectile gets thrown upwards, and randomOffset allows you to randomize the projectile's velocity in a square centered around the original velocity. This hook is only used when the town NPC has an attack type of 0 (throwing), 1 (shooting), or 2 (magic).
            </summary>
            <param name="npc"></param>
            <param name="multiplier"></param>
            <param name="gravityCorrection"></param>
            <param name="randomOffset"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.TownNPCAttackShoot(Terraria.NPC,System.Boolean@)">
            <summary>
            Allows you to tell the game that a town NPC has already created a projectile and will still create more projectiles as part of a single attack so that the game can animate the NPC's attack properly. Only used when the town NPC has an attack type of 1 (shooting).
            </summary>
            <param name="npc"></param>
            <param name="inBetweenShots"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.TownNPCAttackMagic(Terraria.NPC,System.Single@)">
            <summary>
            Allows you to control the brightness of the light emitted by a town NPC's aura when it performs a magic attack. Only used when the town NPC has an attack type of 2 (magic)
            </summary>
            <param name="npc"></param>
            <param name="auraLightMultiplier"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.TownNPCAttackSwing(Terraria.NPC,System.Int32@,System.Int32@)">
            <summary>
            Allows you to determine the width and height of the item a town NPC swings when it attacks, which controls the range of the NPC's swung weapon. Only used when the town NPC has an attack type of 3 (swinging).
            </summary>
            <param name="npc"></param>
            <param name="itemWidth"></param>
            <param name="itemHeight"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.DrawTownAttackGun(Terraria.NPC,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Rectangle@,System.Single@,System.Int32@)">
            <summary>
            Allows you to customize how a town NPC's weapon is drawn when the NPC is shooting (the NPC must have an attack type of 1). <paramref name="scale"/> is a multiplier for the item's drawing size, <paramref name="item"/> is the Texture2D instance of the item to be drawn, <paramref name="itemFrame"/> is the section of the texture to draw, and <paramref name="horizontalHoldoutOffset"/> is how far away the item should be drawn from the NPC.
            </summary>
            <param name="npc"></param>
            <param name="item"></param>
            <param name="itemFrame"></param>
            <param name="scale"></param>
            <param name="horizontalHoldoutOffset"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.DrawTownAttackSwing(Terraria.NPC,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Rectangle@,System.Int32@,System.Single@,Microsoft.Xna.Framework.Vector2@)">
            <inheritdoc cref="M:Terraria.ModLoader.ModNPC.DrawTownAttackSwing(Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Rectangle@,System.Int32@,System.Single@,Microsoft.Xna.Framework.Vector2@)" />
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.ModifyCollisionData(Terraria.NPC,Microsoft.Xna.Framework.Rectangle,System.Int32@,Terraria.ModLoader.MultipliableFloat@,Microsoft.Xna.Framework.Rectangle@)">
            <summary>
            Allows you to modify the NPC's <seealso cref="T:Terraria.ID.ImmunityCooldownID"/>, damage multiplier, and hitbox. Useful for implementing dynamic damage hitboxes that change in dimensions or deal extra damage. Returns false to prevent vanilla code from running. Returns true by default.
            </summary>
            <param name="npc"></param>
            <param name="victimHitbox"></param>
            <param name="immunityCooldownSlot"></param>
            <param name="damageMultiplier"></param>
            <param name="npcHitbox"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.NeedSaving(Terraria.NPC)">
            <summary>
            Allows you to make a npc be saved even if it's not a townNPC and NPCID.Sets.SavesAndLoads[npc.type] is false.
            <br/><b>NOTE:</b> A town NPC will always be saved (except the Travelling Merchant that never will).
            <br/><b>NOTE:</b> A NPC that needs saving will not despawn naturally.
            </summary>
            <param name="npc"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.SaveData(Terraria.NPC,Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to save custom data for the given npc.
            <br/>
            <br/><b>NOTE:</b> The provided tag is always empty by default, and is provided as an argument only for the sake of convenience and optimization.
            <br/><b>NOTE:</b> Try to only save data that isn't default values.
            <br/><b>NOTE:</b> The npc may be saved even if NeedSaving returns false and npc is not a townNPC, if another mod returns true on NeedSaving.
            </summary>
            <param name="npc"></param>
            <param name="tag">The TagCompound to save data into. Note that this is always empty by default, and is provided as an argument</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalNPC.LoadData(Terraria.NPC,Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to load custom data that you have saved for the given npc.
            </summary>
            <param name="npc"></param>
            <param name="tag"></param>
        </member>
        <member name="T:Terraria.ModLoader.GlobalProjectile">
            <summary>
            This class allows you to modify and use hooks for all projectiles, including vanilla projectiles. Create an instance of an overriding class then call Mod.AddGlobalProjectile to use this.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.OnSpawn(Terraria.Projectile,Terraria.DataStructures.IEntitySource)">
            <summary>
            Gets called when any projectiles spawns in world
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.PreAI(Terraria.Projectile)">
            <summary>
            Allows you to determine how any projectile behaves. Return false to stop the vanilla AI and the AI hook from being run. Returns true by default.
            </summary>
            <param name="projectile"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.AI(Terraria.Projectile)">
            <summary>
            Allows you to determine how any projectile behaves. This will only be called if PreAI returns true.
            </summary>
            <param name="projectile"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.PostAI(Terraria.Projectile)">
            <summary>
            Allows you to determine how any projectile behaves. This will be called regardless of what PreAI returns.
            </summary>
            <param name="projectile"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.SendExtraAI(Terraria.Projectile,Terraria.ModLoader.IO.BitWriter,System.IO.BinaryWriter)">
            <summary>
            Use this judiciously to avoid straining the network.
            <br/>Checks and methods such as <see cref="M:Terraria.ModLoader.GlobalType`2.AppliesToEntity(`0,System.Boolean)"/> can reduce how much data must be sent for how many projectiles.
            <br/>Called whenever <see cref="F:Terraria.ID.MessageID.SyncProjectile"/> is successfully sent, for example on projectile creation, or whenever Projectile.netUpdate is set to true in the update loop for that tick.
            <br/>Can be called on both server and client, depending on who owns the projectile.
            </summary>
            <param name="projectile">The projectile.</param>
            <param name="bitWriter">The compressible bit writer. Booleans written via this are compressed across all mods to improve multiplayer performance.</param>
            <param name="binaryWriter">The writer.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.ReceiveExtraAI(Terraria.Projectile,Terraria.ModLoader.IO.BitReader,System.IO.BinaryReader)">
            <summary>
            Use this to receive information that was sent in <see cref="M:Terraria.ModLoader.GlobalProjectile.SendExtraAI(Terraria.Projectile,Terraria.ModLoader.IO.BitWriter,System.IO.BinaryWriter)"/>.
            <br/>Called whenever <see cref="F:Terraria.ID.MessageID.SyncProjectile"/> is successfully received.
            <br/>Can be called on both server and client, depending on who owns the projectile.
            </summary>
            <param name="projectile">The projectile.</param>
            <param name="bitReader">The compressible bit reader.</param>
            <param name="binaryReader">The reader.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.ShouldUpdatePosition(Terraria.Projectile)">
            <summary>
            Whether or not the given projectile should update its position based on factors such as its velocity, whether it is in liquid, etc. Return false to make its velocity have no effect on its position. Returns true by default.
            </summary>
            <param name="projectile"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.TileCollideStyle(Terraria.Projectile,System.Int32@,System.Int32@,System.Boolean@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Allows you to determine how a projectile interacts with tiles. Return false if you completely override or cancel a projectile's tile collision behavior. Returns true by default.
            </summary>
            <param name="projectile"> The projectile. </param>
            <param name="width"> The width of the hitbox the projectile will use for tile collision. If vanilla or a mod don't modify it, defaults to projectile.width. </param>
            <param name="height"> The height of the hitbox the projectile will use for tile collision. If vanilla or a mod don't modify it, defaults to projectile.height. </param>
            <param name="fallThrough"> Whether or not the projectile falls through platforms and similar tiles. </param>
            <param name="hitboxCenterFrac"> Determines by how much the tile collision hitbox's position (top left corner) will be offset from the projectile's real center. If vanilla or a mod don't modify it, defaults to half the hitbox size (new Vector2(0.5f, 0.5f)). </param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.OnTileCollide(Terraria.Projectile,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Allows you to determine what happens when a projectile collides with a tile. OldVelocity is the velocity before tile collision. The velocity that takes tile collision into account can be found with projectile.velocity. Return true to allow the vanilla tile collision code to take place (which normally kills the projectile). Returns true by default.
            </summary>
            <param name="projectile"></param>
            <param name="oldVelocity"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.PreKill(Terraria.Projectile,System.Int32)">
            <summary>
            Allows you to determine whether the vanilla code for Kill and the Kill hook will be called. Return false to stop them from being called. Returns true by default. Note that this does not stop the projectile from dying.
            </summary>
            <param name="projectile"></param>
            <param name="timeLeft"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.Kill(Terraria.Projectile,System.Int32)">
            <summary>
            Allows you to control what happens when a projectile is killed (for example, creating dust or making sounds).
            </summary>
            <param name="projectile"></param>
            <param name="timeLeft"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.CanCutTiles(Terraria.Projectile)">
            <summary>
            Return true or false to specify if the projectile can cut tiles like vines, pots, and Queen Bee larva. Return null for vanilla decision.
            </summary>
            <param name="projectile"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.CutTiles(Terraria.Projectile)">
            <summary>
            Code ran when the projectile cuts tiles. Only runs if CanCutTiles() returns true. Useful when programming lasers and such.
            </summary>
            <param name="projectile"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.CanDamage(Terraria.Projectile)">
            <summary>
            Whether or not the given projectile is capable of killing tiles (such as grass) and damaging NPCs/players.
            Return false to prevent it from doing any sort of damage.
            Return true if you want the projectile to do damage regardless of the default blacklist.
            Return null to let the projectile follow vanilla can-damage-anything rules. This is what happens by default.
            </summary>
            <param name="projectile"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.MinionContactDamage(Terraria.Projectile)">
            <summary>
            Whether or not a minion can damage NPCs by touching them. Returns false by default. Note that this will only be used if the projectile is considered a pet.
            </summary>
            <param name="projectile"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.ModifyDamageHitbox(Terraria.Projectile,Microsoft.Xna.Framework.Rectangle@)">
            <summary>
            Allows you to change the hitbox used by a projectile for damaging players and NPCs.
            </summary>
            <param name="projectile"></param>
            <param name="hitbox"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.CanHitNPC(Terraria.Projectile,Terraria.NPC)">
            <summary>
            Allows you to determine whether a projectile can hit the given NPC. Return true to allow hitting the target, return false to block the projectile from hitting the target, and return null to use the vanilla code for whether the target can be hit. Returns null by default.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.ModifyHitNPC(Terraria.Projectile,Terraria.NPC,Terraria.NPC.HitModifiers@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that a projectile does to an NPC. This method is only called for the owner of the projectile, meaning that in multi-player, projectiles owned by a player call this method on that client, and projectiles owned by the server such as enemy projectiles call this method on the server.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.OnHitNPC(Terraria.Projectile,Terraria.NPC,Terraria.NPC.HitInfo,System.Int32)">
            <summary>
            Allows you to create special effects when a projectile hits an NPC (for example, inflicting debuffs). This method is only called for the owner of the projectile, meaning that in multi-player, projectiles owned by a player call this method on that client, and projectiles owned by the server such as enemy projectiles call this method on the server.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <param name="hit"></param>
            <param name="damageDone"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.CanHitPvp(Terraria.Projectile,Terraria.Player)">
            <summary>
            Allows you to determine whether a projectile can hit the given opponent player. Return false to block the projectile from hitting the target. Returns true by default.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.CanHitPlayer(Terraria.Projectile,Terraria.Player)">
            <summary>
            Allows you to determine whether a hostile projectile can hit the given player. Return false to block the projectile from hitting the target. Returns true by default.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.ModifyHitPlayer(Terraria.Projectile,Terraria.Player,Terraria.Player.HurtModifiers@)">
            <summary>
            Allows you to modify the damage, etc., that a hostile projectile does to a player.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.OnHitPlayer(Terraria.Projectile,Terraria.Player,Terraria.Player.HurtInfo)">
            <summary>
            Allows you to create special effects when a hostile projectile hits a player. <br/>
            Only runs on the local client in multiplayer.
            </summary>
            <param name="projectile"></param>
            <param name="target"></param>
            <param name="info"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.Colliding(Terraria.Projectile,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to use custom collision detection between a projectile and a player or NPC that the projectile can damage. Useful for things like diagonal lasers, projectiles that leave a trail behind them, etc.
            </summary>
            <param name="projectile"></param>
            <param name="projHitbox"></param>
            <param name="targetHitbox"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.GetAlpha(Terraria.Projectile,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to determine the color and transparency in which a projectile is drawn. Return null to use the default color (normally light and buff color). Returns null by default.
            </summary>
            <param name="projectile"></param>
            <param name="lightColor"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.PreDrawExtras(Terraria.Projectile)">
            <summary>
            Allows you to draw things behind a projectile. Use the Main.EntitySpriteDraw method for drawing. Returns false to stop the game from drawing extras textures related to the projectile (for example, the chains for grappling hooks), useful if you're manually drawing the extras. Returns true by default.
            </summary>
            <param name="projectile"> The projectile. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.PreDraw(Terraria.Projectile,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to draw things behind a projectile, or to modify the way the projectile is drawn. Use the Main.EntitySpriteDraw method for drawing. Return false to stop the vanilla projectile drawing code (useful if you're manually drawing the projectile). Returns true by default.
            </summary>
            <param name="projectile"> The projectile. </param>
            <param name="lightColor"> The color of the light at the projectile's center. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.PostDraw(Terraria.Projectile,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to draw things in front of a projectile. Use the Main.EntitySpriteDraw method for drawing. This method is called even if PreDraw returns false.
            </summary>
            <param name="projectile"> The projectile. </param>
            <param name="lightColor"> The color of the light at the projectile's center, after being modified by vanilla and other mods. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.DrawBehind(Terraria.Projectile,System.Int32,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            When used in conjunction with "projectile.hide = true", allows you to specify that this projectile should be drawn behind certain elements. Add the index to one and only one of the lists. For example, the Nebula Arcanum projectile draws behind NPCs and tiles.
            </summary>
            <param name="projectile"></param>
            <param name="index"></param>
            <param name="behindNPCsAndTiles"></param>
            <param name="behindNPCs"></param>
            <param name="behindProjectiles"></param>
            <param name="overPlayers"></param>
            <param name="overWiresUI"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.CanUseGrapple(System.Int32,Terraria.Player)">
            <summary>
            Whether or not a grappling hook that shoots this type of projectile can be used by the given player. Return null to use the default code (whether or not the player is in the middle of firing the grappling hook). Returns null by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.UseGrapple(Terraria.Player,System.Int32@)">
            <summary>
            This code is called whenever the player uses a grappling hook that shoots this type of projectile. Use it to change what kind of hook is fired (for example, the Dual Hook does this), to kill old hook projectiles, etc.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.NumGrappleHooks(Terraria.Projectile,Terraria.Player,System.Int32@)">
            <summary>
            How many of this type of grappling hook the given player can latch onto blocks before the hooks start disappearing. Change the numHooks parameter to determine this; by default it will be 3.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.GrappleRetreatSpeed(Terraria.Projectile,Terraria.Player,System.Single@)">
            <summary>
            The speed at which the grapple retreats back to the player after not hitting anything. Defaults to 11, but vanilla hooks go up to 24.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.GrapplePullSpeed(Terraria.Projectile,Terraria.Player,System.Single@)">
            <summary>
            The speed at which the grapple pulls the player after hitting something. Defaults to 11, but the Bat Hook uses 16.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.GrappleTargetPoint(Terraria.Projectile,Terraria.Player,System.Single@,System.Single@)">
            <summary>
            The location that the grappling hook pulls the player to. Defaults to the center of the hook projectile.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalProjectile.GrappleCanLatchOnTo(Terraria.Projectile,Terraria.Player,System.Int32,System.Int32)">
            <summary>
            Whether or not the grappling hook can latch onto the given position in tile coordinates.
            <br/>This position may be air or an actuated tile!
            <br/>Return true to make it latch, false to prevent it, or null to apply vanilla conditions. Returns null by default.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.GlobalPylon">
            <summary>
            Global Type that exists for pylons that allows for modification of teleportation steps, map drawing, and
            other functionality for any pylon that exists, whether it be vanilla or modded.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalPylon.PreDrawMapIcon(Terraria.Map.MapOverlayDrawContext@,System.String@,Terraria.GameContent.TeleportPylonInfo@,System.Boolean@,Microsoft.Xna.Framework.Color@,System.Single@,System.Single@)">
            <summary>
            Called right before both modded and vanilla pylons draw their icons on the map. Returning false will prevent the passed in icon from being drawn on the map. Returns
            true by default.
            </summary>
            <remarks>
            Note that if you change the value of the isNearPylon parameter, the change will cascade and all pylons following this will be affected by the change.
            </remarks>
            <param name="context"> The current map context on which you can draw. </param>
            <param name="mouseOverText"> The text that will overlay on the mouse when the icon is being hovered over. </param>
            <param name="pylonInfo"> The pylon that is currently needing its icon to be drawn. </param>
            <param name="isNearPylon"> Whether or not the player is currently near a pylon. </param>
            <param name="drawColor"> The draw color of the icon. This is bright white when the player is near a Pylon, but gray and translucent otherwise. </param>
            <param name="deselectedScale"> The scale of the icon if it is NOT currently being hovered over. In vanilla, this is 1f, or 100%. </param>
            <param name="selectedScale"> The scale of the icon if it IS currently being over. In vanilla, this is 2f, or 200%. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalPylon.PreCanPlacePylon(System.Int32,System.Int32,System.Int32,Terraria.GameContent.TeleportPylonType)">
            <summary>
            Called right before both modded and vanilla pylons determine whether or not they can be placed. Returning false will prevent vanilla checks from taking place,
            forcefully preventing the pylon from being placed. Returning null will enact vanilla behavior, and returning true will make the check forcefully succeed,
            regardless of vanilla behavior. Returns null by default.
            </summary>
            <param name="x"> The current X position of where the tile in question is asking it can be placed. </param>
            <param name="y"> The current Y position of where the tile in question is asking it can be placed. </param>
            <param name="tileType"> The actual type of tile currently asking if it can be placed. </param>
            <param name="pylonType"> The type of pylon belonging to this tile. </param>
            <remarks>
            Note that in Multiplayer environments, this is called first on the client, and then is subsequently called &amp; double checked on the server.
            <br>If the server disagrees with the client that the given pylon CANNOT be placed for any given reason, the server will reject the placement
            and subsequently break the associated tile.</br>
            </remarks>
        </member>
        <member name="M:Terraria.ModLoader.GlobalPylon.ValidTeleportCheck_PreNPCCount(Terraria.GameContent.TeleportPylonInfo,System.Int32@)">
            <summary>
            Called before Step 1 of the ValidTeleportCheck process. This is the first vanilla check that is called when
            the player attempts to teleport FROM or TO a Pylon. This method is called before both vanilla
            and modded pylons check their NPC requirements, and returning false will prevent those checks from taking place,
            forcefully failing the NPCCount step. Returning null will enact vanilla behavior, and returning true will make the
            step succeed regardless. Returns null by default.
            </summary>
            <remarks>
            Note that you may also change the the default npc count value if for some reason you wish to change the default
            amount of NPCs required to satisfy ALL pylons (if they adhere to what value it is).
            </remarks>
            <param name="pylonInfo"> The internal information pertaining to the current pylon being teleported to or from. </param>
            <param name="defaultNecessaryNPCCount"> The default amount of NPCs nearby required to satisfy a VANILLA pylon. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalPylon.ValidTeleportCheck_PreAnyDanger(Terraria.GameContent.TeleportPylonInfo)">
            <summary>
            Called before Step 2 of the ValidTeleportCheck process. This is the second vanilla check that is called when
            the player attempts to teleport TO a Pylon. This method is called before both vanilla and
            modded pylons check their Danger requirements, and returning false will prevent those checks from taking place,
            forcefully failing the AnyDanger step. Returning null will enact vanilla behavior, and returning true will make the
            step succeed regardless. Returns null by default.
            </summary>
            <remarks>
            Note that it's important you put the right checks in the right ValidTeleportCheck step,
            as whatever one returns false (if any) will determine the error message sent to the player.
            </remarks>
            <param name="pylonInfo"> The internal information pertaining to the current pylon being teleported TO. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalPylon.ValidTeleportCheck_PreBiomeRequirements(Terraria.GameContent.TeleportPylonInfo,Terraria.SceneMetrics)">
            <summary>
            Called before Step 3 of the ValidTeleportCheck process. This is the fourth vanilla check that is called when
            the player attempts to teleport FROM or TO a Pylon. This method is called before both vanilla and
            modded pylons check their Biome requirements, and returning false will prevent those checks from taking place,
            forcefully failing the BiomeRequirements step. Returning null will enact vanilla behavior, and returning true will make the
            step succeed regardless. Returns null by default.
            </summary>
            <remarks>
            Note that it's important you put the right checks in the right ValidTeleportCheck step,
            as whatever one returns false (if any) will determine the error message sent to the player.
            </remarks>
            <param name="pylonInfo"> The internal information pertaining to the current pylon being teleported to or from. </param>
            <param name="sceneData"> The scene metrics data AT THE LOCATION of the destination pylon, NOT the player. </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalPylon.PostValidTeleportCheck(Terraria.GameContent.TeleportPylonInfo,Terraria.GameContent.TeleportPylonInfo,System.Boolean@,System.Boolean@,System.String@)">
            <summary>
            Called after all checks have taken place for all vanilla and modded pylons when a teleportation request is sent (AKA when the player clicks
            on a pylon on the map). You can (for example) use this to allow teleportation to go through even if one the normal requirements haven't been
            met, or vice versa; to do this, change destinationPylonValid to true or false respectively (for the given example).
            </summary>
            <param name="destinationPylonInfo"> The pylon information for the DESTINATION pylon. </param>
            <param name="nearbyPylonInfo">
            The pylon information of the pylon the player in question is standing NEAR. This value is at its defaults if
            validNearbyPylonFound is false, but otherwise, will give information on the nearby pylon.
            </param>
            <param name="destinationPylonValid">
            Whether or not the normal requirements were satisfied for the DESTINATION pylon.
            Set this to true if you want the teleportation request to succeed, false if not.
            </param>
            <param name="validNearbyPylonFound"> Whether or not a valid pylon near the player satisfied its normal requirements. </param>
            <param name="errorKey">
            The localization key that will be used to sent text to the player when destinationPylonValid is false.
            Note that this parameter will already have a value if the method is called with destinationPylonValid being false.
            </param>
        </member>
        <member name="T:Terraria.ModLoader.GlobalTile">
            <summary>
            This class allows you to modify the behavior of any tile in the game. Create an instance of an overriding class then call Mod.AddGlobalTile to use this.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.AddToArray(System.Int32[]@,System.Int32)">
            <summary>
            A convenient method for adding an integer to the end of an array. This can be used with the arrays in TileID.Sets.RoomNeeds.
            </summary>
            <param name="array"></param>
            <param name="type"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.DropCritterChance(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Allows you to modify the chance the tile at the given coordinates has of spawning a certain critter when the tile is killed.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type">The tile type</param>
            <param name="wormChance">Chance for a worm to spawn. Value corresponds to a chance of 1 in X. Vanilla values include: Grass-400, Plants-200, Various Piles-6</param>
            <param name="grassHopperChance">Chance for a grass hopper to spawn. Value corresponds to a chance of 1 in X. Vanilla values include: Grass-100, Plants-50</param>
            <param name="jungleGrubChance">Chance for a jungle grub to spawn. Value corresponds to a chance of 1 in X. Vanilla values include: JungleVines-250, JunglePlants2-40, PlantDetritus-10</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.CanDrop(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows prevention of item drops from the tile dropping at the given coordinates. Return false to stop the game from dropping the tile's item(s). Returns true by default. Use <see cref="M:Terraria.ModLoader.GlobalTile.Drop(System.Int32,System.Int32,System.Int32)"/> to spawn additional items.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.Drop(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to spawn additional items when the tile at the given coordinates drops.
            <br/> This hook is called once for multi-tiles. Trees or Cactus call this method for every individual tile.
            <br/> For multi-tiles, the coordinates correspond to the tile that triggered this multi-tile to drop, so if checking <see cref="P:Terraria.Tile.TileFrameX"/> and <see cref="P:Terraria.Tile.TileFrameY"/>, be aware that the coordinates won't necessarily be the top left corner or origin of the multi-tile. Also be aware that some parts of the multi-tile might already be mined out when this method is called, so any math to determine tile style should be done on the tile at the coordinates passed in.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.CanKillTile(System.Int32,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Allows you to determine whether or not the tile at the given coordinates can be hit by anything. Returns true by default. blockDamaged currently has no use.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type">The tile type</param>
            <param name="blockDamaged"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.KillTile(System.Int32,System.Int32,System.Int32,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Allows you to determine what happens when the tile at the given coordinates is killed or hit with a pickaxe. If <paramref name="fail"/> is true, the tile will not be mined; <paramref name="effectOnly"/> makes it so that only dust is created; <paramref name="noItem"/> stops items from dropping.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type">The tile type</param>
            <param name="fail">If true, the tile won't be mined</param>
            <param name="effectOnly">If true, only the dust visuals will happen</param>
            <param name="noItem">If true, the corresponding item won't drop</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.NearbyEffects(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Allows you to make things happen when the tile is within a certain range of the player (around the same range water fountains and music boxes work). The closer parameter is whether or not the tile is within the range at which things like campfires and banners work.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type">The tile type</param>
            <param name="closer"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.IsTileDangerous(System.Int32,System.Int32,System.Int32,Terraria.Player)">
            <summary>
            Allows you to determine whether this tile glows red when the given player has the Dangersense buff.
            <br/>Return true to force this behavior, or false to prevent it, overriding vanilla conditions. Returns null by default.
            <br/>This is only called on the local client.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type">The tile type</param>
            <param name="player">Main.LocalPlayer</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.IsTileSpelunkable(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to customize whether this tile can glow yellow while having the Spelunker buff, and is also detected by various pets.
            <br/>Return true to force this behavior, or false to prevent it, overriding vanilla conditions. Returns null by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type">The tile type</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.SetSpriteEffects(System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteEffects@)">
            <summary>
            Allows you to determine whether or not a tile will draw itself flipped in the world.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type">The tile type</param>
            <param name="spriteEffects"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.AnimateTile">
            <summary>
            Allows animating tiles that were previously static. Loading a new texture for the tile is required first. Use Main.tileFrameCounter to count game frames and Main.tileFrame to change animation frames.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.DrawEffects(System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.DataStructures.TileDrawInfo@)">
            <summary>
            Allows you to make stuff happen whenever the tile at the given coordinates is drawn. For example, creating dust or changing the color the tile is drawn in.
            SpecialDraw will only be called if coordinates are added using Main.instance.TilesRenderer.AddSpecialLegacyPoint here.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type">The Tile type of the tile being drawn</param>
            <param name="spriteBatch">The SpriteBatch that should be used for all draw calls</param>
            <param name="drawData">Various information about the tile that is being drawn, such as color, framing, glow textures, etc.</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.SpecialDraw(System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Special Draw. Only called if coordinates are added using Main.instance.TilesRenderer.AddSpecialLegacyPoint during DrawEffects. Useful for drawing things that would otherwise be impossible to draw due to draw order, such as items in item frames.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type">The Tile type of the tile being drawn</param>
            <param name="spriteBatch">The SpriteBatch that should be used for all draw calls</param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.TileFrame(System.Int32,System.Int32,System.Int32,System.Boolean@,System.Boolean@)">
            <summary>
            Called for every tile that updates due to being placed or being next to a tile that is changed. Return false to stop the game from carrying out its default TileFrame operations. Returns true by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type"></param>
            <param name="resetFrame"></param>
            <param name="noBreak"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.AdjTiles(System.Int32)">
            <summary>
            Allows you to determine which tiles the given tile type can be considered as when looking for crafting stations.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.RightClick(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when any tile is right-clicked by the player.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.MouseOver(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when the mouse hovers over any tile. Useful for showing item icons or text on the mouse.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.MouseOverFar(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when the mouse hovers over any tile, even when the player is far away. Useful for showing what's written on signs, etc.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.AutoSelect(System.Int32,System.Int32,System.Int32,Terraria.Item)">
            <summary>
            Allows you to determine whether the given item can become selected when the cursor is hovering over a tile and the auto selection keybind is pressed.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.PreHitWire(System.Int32,System.Int32,System.Int32)">
            <summary>
            Whether or not the vanilla HitWire code and the HitWire hook is allowed to run. Useful for overriding vanilla behavior by returning false. Returns true by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.HitWire(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when a wire current passes through any tile. Both <see cref="M:Terraria.Wiring.SkipWire(System.Int32,System.Int32)"/> and <see cref="M:Terraria.NetMessage.SendTileSquare(System.Int32,System.Int32,System.Int32,System.Int32,Terraria.ID.TileChangeType)"/> are usually required in the logic used in this method to correctly work.
            <br/>Only called on the server and single player. All wiring happens on the world, not multiplayer clients. 
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.Slope(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to control how hammers slope any tile. Return true to allow the tile to slope normally. Returns true by default. Called on the local Client and Single Player.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.FloorVisuals(System.Int32,Terraria.Player)">
            <summary>
            Allows you to make something happen when a player stands on the given type of tile. For example, you can make the player slide as if on ice.
            </summary>
            <param name="type"></param>
            <param name="player"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.ChangeWaterfallStyle(System.Int32,System.Int32@)">
            <summary>
            Allows you to change the style of waterfall that passes through or over any tile.
            </summary>
            <param name="type"></param>
            <param name="style"></param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.CanReplace(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to stop a tile at the given coordinates from being replaced via the block swap feature. The tileTypeBeingPlaced parameter is the tile type that will replace the current tile. The type parameter is the tile type currently at the coordinates.
            <br/> This method is called on the local client. This method is only called if the local player has sufficient pickaxe power to mine the existing tile.
            <br/> Return false to block the tile from being replaced. Returns true by default.
            <br/> Use this for dynamic logic. <see cref="F:Terraria.ID.TileID.Sets.DoesntGetReplacedWithTileReplacement"/>, <see cref="F:Terraria.ID.TileID.Sets.DoesntPlaceWithTileReplacement"/>, and <see cref="F:Terraria.ID.TileID.Sets.PreventsTileReplaceIfOnTopOfIt"/> cover the most common use cases and should be used instead if possible.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="type"></param>
            <param name="tileTypeBeingPlaced"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalTile.PostSetupTileMerge">
            <summary>
            Can be used to adjust tile merge related things that are not possible to do in <see cref="M:Terraria.ModLoader.ModBlockType.SetStaticDefaults"/> due to timing.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.GlobalType`1.StaticIndex">
            <summary>
            Index of this global in the list of all globals of the same type, in registration order
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.GlobalType`1.PerEntityIndex">
            <summary>
            Index of this global in a <see cref="P:Terraria.ModLoader.IEntityWithGlobals`1.EntityGlobals"/> array <br/>
            -1 if this global does not have a <see cref="P:Terraria.ModLoader.GlobalType`1.SlotPerEntity"/>
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.GlobalType`1.SlotPerEntity">
            <summary>
            Whether this global has <see cref="P:Terraria.ModLoader.GlobalType`1.InstancePerEntity"/> or can be conditionally applied (overrides <see cref="M:Terraria.ModLoader.GlobalType`2.AppliesToEntity(`0,System.Boolean)"/>) <br/>
            If true, the global will be assigned a <see cref="P:Terraria.ModLoader.GlobalType`1.PerEntityIndex"/> at load time, which can be used to access the instance in the <see cref="P:Terraria.ModLoader.IEntityWithGlobals`1.EntityGlobals"/> array. <br/>
            If false, the global will be a singleton applying to all entities
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.GlobalType`1.InstancePerEntity">
            <summary>
            Whether to create a new instance of this Global for every entity that exists.
            Useful for storing information on an entity. Defaults to false.
            Return true if you need to store information (have non-static fields).
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.GlobalType`1.ConditionallyAppliesToEntities">
            <summary>
            Whether this global applies to some entities but not others
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.GlobalType`2.IsCloneable">
            <summary>
            Whether or not this type is cloneable. Cloning is supported if<br/>
            all reference typed fields in each sub-class which doesn't override Clone are marked with [CloneByReference]
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.GlobalType`2.CloneNewInstances">
            <summary>
            Whether to create new instances of this mod type via <see cref="M:Terraria.ModLoader.GlobalType`2.Clone(`0,`0)"/> or via the default constructor
            Defaults to false (default constructor).
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.GlobalType`2.ConditionallyAppliesToEntities">
            <summary>
            Whether this global applies to some entities but not others. <br/>
            True if the type overrides <see cref="M:Terraria.ModLoader.GlobalType`2.AppliesToEntity(`0,System.Boolean)"/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalType`2.AppliesToEntity(`0,System.Boolean)">
            <summary>
            Use this to control whether or not this global should be run on the provided entity instance. <br/>
            </summary>
            <param name="entity"> The entity for which the global instantion is being checked. </param>
            <param name="lateInstantiation">
            Whether this check occurs before or after the ModX.SetDefaults call.
            <br/> If you're relying on entity values that can be changed by that call, you should likely prefix your return value with the following:
            <code> lateInstantiation &amp;&amp; ... </code>
            </param>
        </member>
        <member name="M:Terraria.ModLoader.GlobalType`2.SetDefaults(`0)">
            <summary>
            Allows you to set the properties of any and every instance that gets created.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalType`2.Clone(`0,`0)">
            <summary>
            Create a copy of this instanced global. Called when an entity is cloned.
            </summary>
            <param name="from">The entity being cloned</param>
            <param name="to">The new clone of the entity</param>
            <returns>A clone of this global</returns>
        </member>
        <member name="M:Terraria.ModLoader.GlobalType`2.NewInstance(`0)">
            <summary>
            Only called if <see cref="P:Terraria.ModLoader.GlobalType`1.InstancePerEntity"/> and <see cref="M:Terraria.ModLoader.GlobalType`2.AppliesToEntity(`0,System.Boolean)"/>(<paramref name="target"/>, ...) are both true
            </summary>
            <param name="target">The entity instance the global is being instantiated for</param>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.GlobalWall">
            <summary>
            This class allows you to modify the behavior of any wall in the game (although admittedly walls don't have much behavior). Create an instance of an overriding class then call Mod.AddGlobalWall to use this.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalWall.Drop(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Allows you to customize which items the wall at the given coordinates drops. Return false to stop the game from dropping the wall's default item (the dropType parameter). Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalWall.KillWall(System.Int32,System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Allows you to determine what happens when the wall at the given coordinates is killed or hit with a hammer. Fail determines whether the wall is mined (whether it is killed).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalWall.WallFrame(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Called for every wall that updates due to being placed or being next to a wall that is changed. Return false to stop the game from carrying out its default WallFrame operations. If you return false, make sure to set <see cref="P:Terraria.Tile.WallFrameNumber"/>, <see cref="P:Terraria.Tile.WallFrameX"/>, and <see cref="P:Terraria.Tile.WallFrameY"/> according to the your desired custom framing design. Returns true by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type">Type of the wall being framed</param>
            <param name="randomizeFrame">True if the calling code intends that the frameNumber be randomly changed, such as when placing the wall initially or loading the world, but not when updating due to nearby tile or wall placements</param>
            <param name="style">The style or orientation that will be applied</param>
            <param name="frameNumber">The random style that will be applied</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.GoreLoader.AddGoreFromTexture``1(Terraria.ModLoader.Mod,System.String)">
            <summary> Registers a new gore with the provided texture. </summary>
        </member>
        <member name="T:Terraria.ModLoader.ILoadable">
            <summary>
            Allows for implementing types to be loaded and unloaded.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ILoadable.Load(Terraria.ModLoader.Mod)">
            <summary>
            Called when loading the type.
            </summary>
            <param name="mod">The mod instance associated with this type.</param>
        </member>
        <member name="M:Terraria.ModLoader.ILoadable.IsLoadingEnabled(Terraria.ModLoader.Mod)">
            <summary>
            Whether or not this type should be loaded when it's told to. Returning false disables <see cref="M:Terraria.ModLoader.Mod.AddContent(Terraria.ModLoader.ILoadable)"/> from actually loading this type.
            </summary>
            <param name="mod">The mod instance trying to add this content</param>
        </member>
        <member name="M:Terraria.ModLoader.ILoadable.Unload">
            <summary>
            Called during unloading when needed.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ILocalizedModType.LocalizationCategory">
            <summary>
            The category used by this modded content for use in localization keys. Localization keys follow the pattern of "Mods.{ModName}.{Category}.{ContentName}.{DataName}". The <see href="https://github.com/tModLoader/tModLoader/wiki/Localization#modtype-and-ilocalizedmodtype">Localization wiki page</see> explains how custom <see cref="T:Terraria.ModLoader.ModType"/> classes can utilize this.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ILocalizedModTypeExtensions.GetLocalizationKey(Terraria.ModLoader.ILocalizedModType,System.String)">
            <summary>
            Gets a suitable localization key belonging to this piece of content. <br/><br/>Localization keys follow the pattern of "Mods.{ModName}.{Category}.{ContentName}.{DataName}", in this case the <paramref name="suffix"/> corresponds to the DataName.
            </summary>
            <param name="self"></param>
            <param name="suffix"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ILocalizedModTypeExtensions.GetLocalization(Terraria.ModLoader.ILocalizedModType,System.String,System.Func{System.String})">
            <summary>
            Returns a <see cref="T:Terraria.Localization.LocalizedText"/> for this piece of content with the provided <paramref name="suffix"/>.
            <br/>If no existing localization exists for the key, it will be defined so it can be exported to a matching mod localization file.
            </summary>
            <param name="self"></param>
            <param name="suffix"></param>
            <param name="makeDefaultValue">A factory method for creating the default value, used to update localization files with missing entries</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ILocalizedModTypeExtensions.GetLocalizedValue(Terraria.ModLoader.ILocalizedModType,System.String)">
            <summary>
            Retrieves the text value for a localization key belonging to this piece of content with the given <paramref name="suffix"/>. The text returned will be for the currently selected language.
            </summary>
            <param name="self"></param>
            <param name="suffix"></param>
            <returns></returns>
        </member>
        <member name="P:Terraria.ModLoader.IModType.Mod">
            <summary>
             The mod this belongs to.
             </summary>
        </member>
        <member name="P:Terraria.ModLoader.IModType.Name">
            <summary>
            The internal name of this instance.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.IModType.FullName">
            <summary>
            => $"{Mod.Name}/{Name}"
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.InfoDisplay.InactiveInfoTextColor">
            <summary>
            The color when no valuable information is displayed
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.InfoDisplay.Type">
            <summary>
            This is the internal ID of this InfoDisplay.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.InfoDisplay.DisplayName">
            <summary>
            This is the name that will show up when hovering over this info display.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.InfoDisplay.Active">
            <summary>
            This dictates whether or not this info display should be active.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.InfoDisplay.DisplayValue(Microsoft.Xna.Framework.Color@)">
            <summary>
            This is the value that will show up when viewing this display in normal play, right next to the icon.
            <br/>Set <paramref name="displayColor"/> to <see cref="P:Terraria.ModLoader.InfoDisplay.InactiveInfoTextColor"/> if your display value is "zero"/shows no valuable information.
            </summary>
            <param name="displayColor">The color the text is displayed as.</param>
        </member>
        <member name="M:Terraria.ModLoader.BackupIO.RunArchiving(System.Action{Ionic.Zip.ZipFile,System.Boolean,System.String},System.Boolean,System.String,System.String,System.String)">
            <summary>
            Run a given archiving task, which will archive to a backup .zip file
            Zip entries added will be compressed
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackupIO.AddZipEntry(Ionic.Zip.ZipFile,System.String,System.Boolean)">
            <summary>
            Adds a new entry to the archive .zip file
            Will use the best compression level using Deflate
            Some files are already compressed and will not be compressed further
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackupIO.DeleteOldArchives(System.String,System.Boolean,System.String)">
            <summary>
            Will delete old archive files
            Algorithm details:
            - One backup per day for the last week
            - One backup per week for the last month
            - One backup per month for all time
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.BackupIO.World">
            <summary>
            Responsible for archiving world backups
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.BackupIO.Player">
            <summary>
            Responsible for archiving player backups
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackupIO.Player.WriteArchive(Ionic.Zip.ZipFile,System.Boolean,System.String)">
            <summary>
            Write the archive. Writes the .plr and .tplr files, then writes the player directory
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackupIO.Player.WriteCloudFiles(Ionic.Zip.ZipFile,System.String)">
            <summary>
            Write cloud files, which will get the relevant part of the path and write map &amp; tmap files
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.BackupIO.Player.WriteLocalFiles(Ionic.Zip.ZipFile,System.String)">
            <summary>
            Write local files, which simply writes the entire player dir
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.IO.TagCompound">
            <summary>
            Tag compounds contained named values, serialisable as per the NBT spec: <see href="https://minecraft.fandom.com/wiki/NBT_format">NBT spec wiki page</see> <br/>
            All primitive data types are supported as well as byte[], int[] and Lists of other supported data types <br/>
            Lists of Lists are internally stored as IList&lt;IList&gt; <br/>
            Modification of lists stored in a TagCompound will only work if there were no type conversions involved and is not advised <br/>
            bool is supported using TagConverter, serialised as a byte. IList&lt;bool&gt; will serialise as IList&lt;byte&gt; (quite inefficient) <br/>
            Additional conversions can be added using TagConverter <br/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.IO.TileIO.NextLocation(System.Int32@,System.Int32@)">
            <summary>
            Increases the provided x and y coordinates to the next location in accordance with order-sensitive position IDs.
            Typically used in clustering duplicate data across multiple consecutive locations, such as in ModLoader.TileIO
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns> False if x and y cannot be increased further (end of the world)  </returns>
        </member>
        <member name="T:Terraria.ModLoader.IPylonTileEntity">
            <summary>
            Allows Tile Entities that you want to be included in vanilla's pylon list to actually be added to the list
            when said TE is extended by this interface. What this means, in short,
            is that whenever all of the pylons are refreshed by vanilla, Tile Entities that extend this interface will get their own
            <seealso cref="T:Terraria.GameContent.TeleportPylonInfo"/> instance and it will be included along-side all of vanilla's pylons and any
            other modded pylons.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ItemLoader">
            <summary>
            This serves as the central class from which item-related functions are carried out. It also stores a list of mod items by ID.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.GetItem(System.Int32)">
            <summary>
            Gets the ModItem template instance corresponding to the specified type (not the clone/new instance which gets added to Items as the game is played). Returns null if no modded item has the given type.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PrefixChance(Terraria.Item,System.Int32,Terraria.Utilities.UnifiedRandom)">
            <summary>
            Allows for blocking, forcing and altering chance of prefix rolling.
            False (block) takes precedence over True (force).
            Null gives vanilla behavior
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UseStyle(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Calls ModItem.UseStyle and all GlobalItem.UseStyle hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.HoldStyle(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            If the player is not holding onto a rope and is not in the middle of using an item, calls ModItem.HoldStyle and all GlobalItem.HoldStyle hooks.
            <br/> Returns whether or not the vanilla logic should be skipped.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.HoldItem(Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.HoldItem and all GlobalItem.HoldItem hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.GetHealLife(Terraria.Item,Terraria.Player,System.Boolean,System.Int32@)">
            <summary>
            Calls ModItem.GetHealLife, then all GlobalItem.GetHealLife hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.GetHealMana(Terraria.Item,Terraria.Player,System.Boolean,System.Int32@)">
            <summary>
            Calls ModItem.GetHealMana, then all GlobalItem.GetHealMana hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyManaCost(Terraria.Item,Terraria.Player,System.Single@,System.Single@)">
            <summary>
            Calls ModItem.ModifyManaCost, then all GlobalItem.ModifyManaCost hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OnMissingMana(Terraria.Item,Terraria.Player,System.Int32)">
            <summary>
            Calls ModItem.OnMissingMana, then all GlobalItem.OnMissingMana hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OnConsumeMana(Terraria.Item,Terraria.Player,System.Int32)">
            <summary>
            Calls ModItem.OnConsumeMana, then all GlobalItem.OnConsumeMana hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanResearch(Terraria.Item)">
            <summary>
            Hook that determines if an item will be prevented from being consumed by the research function. 
            </summary>
            <param name="item">The item to be consumed or not</param>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyWeaponDamage(Terraria.Item,Terraria.Player,Terraria.ModLoader.StatModifier@)">
            <summary>
            Calls ModItem.HookModifyWeaponDamage, then all GlobalItem.HookModifyWeaponDamage hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyWeaponKnockback(Terraria.Item,Terraria.Player,Terraria.ModLoader.StatModifier@)">
            <summary>
            Calls ModItem.ModifyWeaponKnockback, then all GlobalItem.ModifyWeaponKnockback hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyWeaponCrit(Terraria.Item,Terraria.Player,System.Single@)">
            <summary>
            Calls ModItem.ModifyWeaponCrit, then all GlobalItem.ModifyWeaponCrit hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.NeedsAmmo(Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.NeedsAmmo, then all GlobalItem.NeedsAmmo hooks, until any of them returns false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PickAmmo(Terraria.Item,Terraria.Item,Terraria.Player,System.Int32@,System.Single@,Terraria.ModLoader.StatModifier@,System.Single@)">
            <summary>
            Calls ModItem.PickAmmo, then all GlobalItem.PickAmmo hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanChooseAmmo(Terraria.Item,Terraria.Item,Terraria.Player)">
            <summary>
            Calls each <see cref="M:Terraria.ModLoader.GlobalItem.CanChooseAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/> hook for the weapon, and each <see cref="M:Terraria.ModLoader.GlobalItem.CanBeChosenAsAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/> hook for the ammo,<br></br>
            then each corresponding hook in <see cref="T:Terraria.ModLoader.ModItem"/> if applicable for the weapon and/or ammo, until one of them returns a concrete false value.<br></br>
            If all of them fail to do this, returns either true (if one returned true prior) or <c>ammo.ammo == weapon.useAmmo</c>.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanConsumeAmmo(Terraria.Item,Terraria.Item,Terraria.Player)">
            <summary>
            Calls each <see cref="M:Terraria.ModLoader.GlobalItem.CanConsumeAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/> hook for the weapon, and each <see cref="M:Terraria.ModLoader.GlobalItem.CanBeConsumedAsAmmo(Terraria.Item,Terraria.Item,Terraria.Player)"/> hook for the ammo,<br></br>
            then each corresponding hook in <see cref="T:Terraria.ModLoader.ModItem"/> if applicable for the weapon and/or ammo, until one of them returns a concrete false value.<br></br>
            If all of them fail to do this, returns true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OnConsumeAmmo(Terraria.Item,Terraria.Item,Terraria.Player)">
            <summary>
            Calls <see cref="M:Terraria.ModLoader.ModItem.OnConsumeAmmo(Terraria.Item,Terraria.Player)"/> for the weapon, <see cref="M:Terraria.ModLoader.ModItem.OnConsumedAsAmmo(Terraria.Item,Terraria.Player)"/> for the ammo,
            then each corresponding hook for the weapon and ammo.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanShoot(Terraria.Item,Terraria.Player)">
            <summary>
            Calls each GlobalItem.CanShoot hook, then ModItem.CanShoot, until one of them returns false. If all of them return true, returns true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyShootStats(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Int32@,System.Int32@,System.Single@)">
            <summary>
            Calls ModItem.ModifyShootStats, then each GlobalItem.ModifyShootStats hook.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.Shoot(Terraria.Item,Terraria.Player,Terraria.DataStructures.EntitySource_ItemUse_WithAmmo,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Single,System.Boolean)">
            <summary>
            Calls each GlobalItem.Shoot hook then, if none of them returns false, calls the ModItem.Shoot hook and returns its value.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UseItemHitbox(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle@,System.Boolean@)">
            <summary>
            Calls ModItem.UseItemHitbox, then all GlobalItem.UseItemHitbox hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.MeleeEffects(Terraria.Item,Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Calls ModItem.MeleeEffects and all GlobalItem.MeleeEffects hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanCatchNPC(Terraria.Item,Terraria.NPC,Terraria.Player)">
            <summary>
            Gathers the results of all <see cref="M:Terraria.ModLoader.GlobalItem.CanCatchNPC(Terraria.Item,Terraria.NPC,Terraria.Player)"/> hooks, then the <see cref="M:Terraria.ModLoader.ModItem.CanCatchNPC(Terraria.NPC,Terraria.Player)"/> hook if applicable.<br></br>
            If any of them returns false, this returns false.<br></br>
            Otherwise, if any of them returns true, then this returns true.<br></br>
            If all of them return null, this returns null.<br></br>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyItemScale(Terraria.Item,Terraria.Player,System.Single@)">
            <summary>
            Calls <see cref="M:Terraria.ModLoader.ModItem.ModifyItemScale(Terraria.Player,System.Single@)"/> if applicable, then all applicable <see cref="M:Terraria.ModLoader.GlobalItem.ModifyItemScale(Terraria.Item,Terraria.Player,System.Single@)"/> instances.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanHitNPC(Terraria.Item,Terraria.Player,Terraria.NPC)">
            <summary>
            Gathers the results of ModItem.CanHitNPC and all GlobalItem.CanHitNPC hooks.
            If any of them returns false, this returns false.
            Otherwise, if any of them returns true then this returns true.
            If all of them return null, this returns null.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyHitNPC(Terraria.Item,Terraria.Player,Terraria.NPC,Terraria.NPC.HitModifiers@)">
            <summary>
            Calls ModItem.ModifyHitNPC, then all GlobalItem.ModifyHitNPC hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OnHitNPC(Terraria.Item,Terraria.Player,Terraria.NPC,Terraria.NPC.HitInfo@,System.Int32)">
            <summary>
            Calls ModItem.OnHitNPC and all GlobalItem.OnHitNPC hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanHitPvp(Terraria.Item,Terraria.Player,Terraria.Player)">
            <summary>
            Calls all GlobalItem.CanHitPvp hooks, then ModItem.CanHitPvp, until one of them returns false.
            If all of them return true, this returns true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyHitPvp(Terraria.Item,Terraria.Player,Terraria.Player,Terraria.Player.HurtModifiers@)">
            <summary>
            Calls ModItem.ModifyHitPvp, then all GlobalItem.ModifyHitPvp hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OnHitPvp(Terraria.Item,Terraria.Player,Terraria.Player,Terraria.Player.HurtInfo)">
            <summary>
            Calls ModItem.OnHitPvp and all GlobalItem.OnHitPvp hooks. <br/>
            Called on local, server and remote clients. <br/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UseItem(Terraria.Item,Terraria.Player)">
            <summary>
            Returns false if any of ModItem.UseItem or GlobalItem.UseItem return false.
            Returns true if anything returns true without returning false.
            Returns null by default.
            Does not fail fast (calls every hook)
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ConsumeItem(Terraria.Item,Terraria.Player)">
            <summary>
            If ModItem.ConsumeItem or any of the GlobalItem.ConsumeItem hooks returns false, sets consume to false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OnConsumeItem(Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.OnConsumeItem and all GlobalItem.OnConsumeItem hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UseItemFrame(Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.UseItemFrame, then all GlobalItem.UseItemFrame hooks, until one of them returns true. Returns whether any of the hooks returned true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.HoldItemFrame(Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.HoldItemFrame, then all GlobalItem.HoldItemFrame hooks, until one of them returns true. Returns whether any of the hooks returned true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.AltFunctionUse(Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.AltFunctionUse, then all GlobalItem.AltFunctionUse hooks, until one of them returns true. Returns whether any of the hooks returned true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UpdateInventory(Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.UpdateInventory and all GlobalItem.UpdateInventory hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UpdateInfoAccessory(Terraria.Item,Terraria.Player)">
            <summary>
            Calls ModItem.UpdateInfoAccessory and all GlobalItem.UpdateInfoAccessory hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UpdateEquip(Terraria.Item,Terraria.Player)">
            <summary>
            Hook at the end of Player.VanillaUpdateEquip can be called to apply additional code related to accessory slots for a particular item
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UpdateAccessory(Terraria.Item,Terraria.Player,System.Boolean)">
            <summary>
            Hook at the end of Player.ApplyEquipFunctional can be called to apply additional code related to accessory slots for a particular item.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UpdateVanity(Terraria.Item,Terraria.Player)">
            <summary>
            Hook at the end of Player.ApplyEquipVanity can be called to apply additional code related to accessory slots for a particular item
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UpdateArmorSet(Terraria.Player,Terraria.Item,Terraria.Item,Terraria.Item)">
            <summary>
            If the head's ModItem.IsArmorSet returns true, calls the head's ModItem.UpdateArmorSet. This is then repeated for the body, then the legs. Then for each GlobalItem, if GlobalItem.IsArmorSet returns a non-empty string, calls GlobalItem.UpdateArmorSet with that string.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PreUpdateVanitySet(Terraria.Player)">
            <summary>
            If the player's head texture's IsVanitySet returns true, calls the equipment texture's PreUpdateVanitySet. This is then repeated for the player's body, then the legs. Then for each GlobalItem, if GlobalItem.IsVanitySet returns a non-empty string, calls GlobalItem.PreUpdateVanitySet, using player.head, player.body, and player.legs.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.UpdateVanitySet(Terraria.Player)">
            <summary>
            If the player's head texture's IsVanitySet returns true, calls the equipment texture's UpdateVanitySet. This is then repeated for the player's body, then the legs. Then for each GlobalItem, if GlobalItem.IsVanitySet returns a non-empty string, calls GlobalItem.UpdateVanitySet, using player.head, player.body, and player.legs.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ArmorSetShadows(Terraria.Player)">
            <summary>
            If the player's head texture's IsVanitySet returns true, calls the equipment texture's ArmorSetShadows. This is then repeated for the player's body, then the legs. Then for each GlobalItem, if GlobalItem.IsVanitySet returns a non-empty string, calls GlobalItem.ArmorSetShadows, using player.head, player.body, and player.legs.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.SetMatch(System.Int32,System.Int32,System.Boolean,System.Int32@,System.Boolean@)">
            <summary>
            Calls EquipTexture.SetMatch, then all GlobalItem.SetMatch hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanRightClick(Terraria.Item)">
            <summary>
            Calls ModItem.CanRightClick, then all GlobalItem.CanRightClick hooks, until one of the returns true.
            Also returns true if ItemID.Sets.OpenableBag
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.RightClick(Terraria.Item,Terraria.Player)">
            <summary>
            1. Call ModItem.RightClick
            2. Calls all GlobalItem.RightClick hooks
            3. Call ItemLoader.ConsumeItem, and if it returns true, decrements the item's stack
            4. Sets the item's type to 0 if the item's stack is 0
            5. Plays the item-grabbing sound
            6. Sets Main.stackSplit to 30
            7. Sets Main.mouseRightRelease to false
            8. Calls Recipe.FindRecipes.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ModifyItemLoot(Terraria.Item,Terraria.ModLoader.ItemLoot)">
            <summary>
            Calls each GlobalItem.ModifyItemLoot hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanStack(Terraria.Item,Terraria.Item)">
            <summary>
            Returns false if item prefixes don't match. Then calls all GlobalItem.CanStack hooks until one returns false then ModItem.CanStack. Returns whether any of the hooks returned false.
            </summary>
            <param name="destination">The item instance that <paramref name="source"/> will attempt to stack onto</param>
            <param name="source">The item instance being stacked onto <paramref name="destination"/></param>
            <returns>Whether or not the items are allowed to stack</returns>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanStackInWorld(Terraria.Item,Terraria.Item)">
            <summary>
            Calls all GlobalItem.CanStackInWorld hooks until one returns false then ModItem.CanStackInWorld. Returns whether any of the hooks returned false.
            </summary>
            <param name="destination">The item instance that <paramref name="source"/> will attempt to stack onto</param>
            <param name="source">The item instance being stacked onto <paramref name="destination"/></param>
            <returns>Whether or not the items are allowed to stack</returns>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.TryStackItems(Terraria.Item,Terraria.Item,System.Int32@,System.Boolean)">
            <summary>
            Stacks <paramref name="source"/> onto <paramref name="destination"/> if CanStack permits the transfer
            </summary>
            <param name="destination">The item instance that <paramref name="source"/> will attempt to stack onto</param>
            <param name="source">The item instance being stacked onto <paramref name="destination"/></param>
            <param name="numTransferred">The quantity of <paramref name="source"/> that was transferred to <paramref name="destination"/></param>
            <param name="infiniteSource">If true, <paramref name="source"/>.stack will not be decreased</param>
            <returns>Whether or not the items were allowed to stack</returns>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.StackItems(Terraria.Item,Terraria.Item,System.Int32@,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Stacks <paramref name="destination"/> onto <paramref name="source"/><br/>
            This method should not be called unless <see cref="M:Terraria.ModLoader.ItemLoader.CanStack(Terraria.Item,Terraria.Item)"/> returns true.  See: <see cref="M:Terraria.ModLoader.ItemLoader.TryStackItems(Terraria.Item,Terraria.Item,System.Int32@,System.Boolean)"/>
            </summary>
            <param name="destination">The item instance that <paramref name="source"/> will attempt to stack onto</param>
            <param name="source">The item instance being stacked onto <paramref name="destination"/></param>
            <param name="numTransferred">The quantity of <paramref name="source"/> that was transferred to <paramref name="destination"/></param>
            <param name="infiniteSource">If true, <paramref name="source"/>.stack will not be decreased</param>
            <param name="numToTransfer">
            An optional argument used to specify the quantity of items to transfer from <paramref name="source"/> to <paramref name="destination"/>.<br/>
            By default, as many items as possible will be transferred.  That is, either source will be empty, or destination will be full (maxStack)
            </param>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OnStack(Terraria.Item,Terraria.Item,System.Int32)">
            <summary>
            Calls the GlobalItem.OnStack hooks in <paramref name="destination"/>, then the ModItem.OnStack hook in <paramref name="destination"/><br/>
            OnStack is called before the items are transferred from <paramref name="source"/> to <paramref name="destination"/>
            </summary>
            <param name="destination">The item instance that <paramref name="source"/> will attempt to stack onto</param>
            <param name="source">The item instance being stacked onto <paramref name="destination"/></param>
            <param name="numToTransfer">The quantity of <paramref name="source"/> that will be transferred to <paramref name="destination"/></param>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.TransferWithLimit(Terraria.Item,System.Int32)">
            <summary>
            Extract up to <paramref name="limit"/> items from <paramref name="source"/>. If some items remain, <see cref="M:Terraria.ModLoader.ItemLoader.SplitStack(Terraria.Item,Terraria.Item,System.Int32)"/> will be used.
            </summary>
            <param name="source">The original item instance</param>
            <param name="limit">How many items should be transferred</param>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.SplitStack(Terraria.Item,Terraria.Item,System.Int32)">
            <summary>
            Called when splitting a stack of items.
            </summary>
            <param name="destination">
            The item instance that <paramref name="source"/> will transfer items to, and is usually a clone of <paramref name="source"/>.<br/>
            This parameter's stack will be set to zero before any transfer occurs.
            </param>
            <param name="source">The item instance being stacked onto <paramref name="destination"/></param>
            <param name="numToTransfer">The quantity of <paramref name="source"/> that will be transferred to <paramref name="destination"/></param>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ReforgePrice(Terraria.Item,System.Int32@,System.Boolean@)">
            <summary>
            Call all ModItem.ReforgePrice, then GlobalItem.ReforgePrice hooks.
            </summary>
            <param name="item"></param>
            <param name="reforgePrice"></param>
            <param name="canApplyDiscount"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.CanReforge(Terraria.Item)">
            <summary>
            Calls ModItem.CanReforge, then all GlobalItem.CanReforge hooks. If any return false then false is returned.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PreReforge(Terraria.Item)">
            <summary>
            Calls ModItem.PreReforge, then all GlobalItem.PreReforge hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PostReforge(Terraria.Item)">
            <summary>
            Calls ModItem.PostReforge, then all GlobalItem.PostReforge hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.DrawArmorColor(Terraria.ModLoader.EquipType,System.Int32,Terraria.Player,System.Single,Microsoft.Xna.Framework.Color@,System.Int32@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Calls the item's equipment texture's DrawArmorColor hook, then all GlobalItem.DrawArmorColor hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.ArmorArmGlowMask(System.Int32,Terraria.Player,System.Single,System.Int32@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Calls the item's body equipment texture's ArmorArmGlowMask hook, then all GlobalItem.ArmorArmGlowMask hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.VerticalWingSpeeds(Terraria.Player,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            If the player is using wings, this uses the result of GetWing, and calls ModItem.VerticalWingSpeeds then all GlobalItem.VerticalWingSpeeds hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.HorizontalWingSpeeds(Terraria.Player)">
            <summary>
            If the player is using wings, this uses the result of GetWing, and calls ModItem.HorizontalWingSpeeds then all GlobalItem.HorizontalWingSpeeds hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.WingUpdate(Terraria.Player,System.Boolean)">
            <summary>
            If wings can be seen on the player, calls the player's wing's equipment texture's WingUpdate and all GlobalItem.WingUpdate hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.Update(Terraria.Item,System.Single@,System.Single@)">
            <summary>
            Calls ModItem.Update, then all GlobalItem.Update hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PostUpdate(Terraria.Item)">
            <summary>
            Calls ModItem.PostUpdate and all GlobalItem.PostUpdate hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.GrabRange(Terraria.Item,Terraria.Player,System.Int32@)">
            <summary>
            Calls ModItem.GrabRange, then all GlobalItem.GrabRange hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.GrabStyle(Terraria.Item,Terraria.Player)">
            <summary>
            Calls all GlobalItem.GrabStyle hooks then ModItem.GrabStyle, until one of them returns true. Returns whether any of the hooks returned true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.OnPickup(Terraria.Item,Terraria.Player)">
            <summary>
            Calls all GlobalItem.OnPickup hooks then ModItem.OnPickup, until one of the returns false. Returns true if all of the hooks return true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.GetAlpha(Terraria.Item,Microsoft.Xna.Framework.Color)">
            <summary>
            Calls all GlobalItem.GetAlpha hooks then ModItem.GetAlpha, until one of them returns a color, and returns that color. Returns null if all of the hooks return null.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PreDrawInWorld(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single@,System.Single@,System.Int32)">
            <summary>
            Returns the "and" operator on the results of ModItem.PreDrawInWorld and all GlobalItem.PreDrawInWorld hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PostDrawInWorld(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single,System.Single,System.Int32)">
            <summary>
            Calls ModItem.PostDrawInWorld, then all GlobalItem.PostDrawInWorld hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PreDrawInInventory(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Returns the "and" operator on the results of all GlobalItem.PreDrawInInventory hooks and ModItem.PreDrawInInventory.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ItemLoader.PostDrawInInventory(Terraria.Item,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Calls ModItem.PostDrawInInventory, then all GlobalItem.PostDrawInInventory hooks.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ItemLoot">
            <summary> This readonly struct is a simple shortcut to <see cref="T:Terraria.GameContent.ItemDropRules.ItemDropDatabase"/>'s methods. </summary>
        </member>
        <member name="M:Terraria.ModLoader.KeybindLoader.RegisterKeybind(Terraria.ModLoader.Mod,System.String,Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Registers a keybind with a <paramref name="name"/> and <paramref name="defaultBinding"/>. Use the returned <see cref="T:Terraria.ModLoader.ModKeybind"/> to detect when buttons are pressed.
            </summary>
            <param name="mod"> The mod that this keybind will belong to. Usually, this would be your mod instance. </param>
            <param name="name"> The internal name of the keybind. The localization key "Mods.{ModName}.Keybinds.{KeybindName}.DisplayName" will be used for the display name. <br/>It is recommended that this not have any spaces. </param>
            <param name="defaultBinding"> The default binding. </param>
        </member>
        <member name="M:Terraria.ModLoader.KeybindLoader.RegisterKeybind(Terraria.ModLoader.Mod,System.String,System.String)">
            <summary>
            Registers a keybind with a <paramref name="name"/> and <paramref name="defaultBinding"/>. Use the returned <see cref="T:Terraria.ModLoader.ModKeybind"/> to detect when buttons are pressed.
            </summary>
            <param name="mod"> The mod that this keybind will belong to. Usually, this would be your mod instance. </param>
            <param name="name"> The internal name of the keybind. The localization key "Mods.{ModName}.Keybinds.{KeybindName}.DisplayName" will be used for the display name. <br/>It is recommended that this not have any spaces. </param>
            <param name="defaultBinding"> The default binding. </param>
        </member>
        <member name="T:Terraria.ModLoader.LegacyNameAttribute">
            <summary>
            Allows for types to be registered with legacy/alias names for lookup via <see cref="M:Terraria.ModLoader.ModContent.Find``1(System.String)"/> and similar methods.
            <br/>When manually loading content, use <see cref="M:Terraria.ModLoader.ModTypeLookup`1.RegisterLegacyNames(`0,System.String[])"/> instead.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Loader">
            <summary> Serves as a highest-level base for loaders. </summary>
        </member>
        <member name="M:Terraria.ModLoader.Loader.Initialize(System.Int32)">
            <summary>
            Initializes the loader based on the vanilla count of the ModType.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.Loader`1">
            <summary> Serves as a highest-level base for loaders of mod types. </summary>
        </member>
        <member name="M:Terraria.ModLoader.LocalizationLoader.GetCultureAndPrefixFromPath(System.String)">
            <summary>
            Derives a culture and shared prefix from a localization file path. Prefix will be found after culture, either separated by an underscore or nested in the folder.
            <br/> Some examples:<code>
            Localization/en-US_Mods.ExampleMod.hjson
            Localization/en-US/Mods.ExampleMod.hjson
            en-US_Mods.ExampleMod.hjson
            en-US/Mods.ExampleMod.hjson
            </code>
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="P:Terraria.ModLoader.Logging.PublicLogger">
            <summary> Available for logging when Mod.Logging is not available, such as field initialization </summary>
        </member>
        <member name="T:Terraria.ModLoader.Mod">
            <summary>
            Mod is an abstract class that you will override. It serves as a central place from which the mod's contents are stored. It provides methods for you to use or override.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.File">
            <summary>
            The TmodFile object created when tModLoader reads this mod.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.Code">
            <summary>
            The assembly code this is loaded when tModLoader loads this mod. <br/>
            Do NOT call <see cref="M:System.Reflection.Assembly.GetTypes"/> on this as it will error out if the mod uses the <see cref="T:Terraria.ModLoader.ExtendsFromModAttribute"/> attribute to inherit from weakly referenced mods. Use <see cref="M:Terraria.ModLoader.Core.AssemblyManager.GetLoadableTypes(System.Reflection.Assembly)"/> instead.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.Logger">
            <summary>
            A logger with this mod's name for easy logging.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.Name">
            <summary>
            Stores the name of the mod. This name serves as the mod's identification, and also helps with saving everything your mod adds. By default this returns the name of the folder that contains all your code and stuff.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.TModLoaderVersion">
            <summary>
            The version of tModLoader that was being used when this mod was built.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.Version">
            <summary>
            This version number of this mod.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.ContentAutoloadingEnabled">
            <summary>
            Whether or not this mod will autoload content by default. Autoloading content means you do not need to manually add content through methods.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.GoreAutoloadingEnabled">
            <summary>
            Whether or not this mod will automatically add images in the Gores folder as gores to the game, along with any ModGore classes that share names with the images. This means you do not need to manually call Mod.AddGore.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.MusicAutoloadingEnabled">
            <summary>
            Whether or not this mod will automatically add music to the game. All supported audio files in a folder or subfolder of a folder named "Music" will be autoloaded as music.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.BackgroundAutoloadingEnabled">
            <summary>
            Whether or not this mod will automatically add images in the Backgrounds folder as background textures to the game. This means you do not need to manually call Mod.AddBackgroundTexture.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.Side">
            <summary>
            The ModSide that controls how this mod is synced between client and server.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.DisplayName">
            <summary>
            The display name of this mod in the Mods menu.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.AddContent``1">
            <summary> Call this to manually add a content instance of the specified type (with a parameterless constructor) to the game. </summary>
            <returns> true if the instance was successfully added </returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.AddContent(Terraria.ModLoader.ILoadable)">
            <summary> Call this to manually add the given content instance to the game. </summary>
            <param name="instance"> The content instance to add </param>
            <returns> true if the instance was successfully added </returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetContent">
            <summary>
            Returns all registered content instances that are added by this mod.
            <br/>This only includes the 'template' instance for each piece of content, not all the clones/new instances which get added to Items/Players/NPCs etc. as the game is played
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetContent``1">
            <summary>
            Returns all registered content instances that derive from the provided type that are added by this mod.
            <br/>This only includes the 'template' instance for each piece of content, not all the clones/new instances which get added to Items/Players/NPCs etc. as the game is played
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.Find``1(System.String)">
            <summary> Attempts to find the template instance from this mod with the specified name (not the clone/new instance which gets added to Items/Players/NPCs etc. as the game is played). Caching the result is recommended.<para/>This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
        </member>
        <member name="M:Terraria.ModLoader.Mod.TryFind``1(System.String,``0@)">
            <summary> Safely attempts to find the template instance from this mod with the specified name (not the clone/new instance which gets added to Items/Players/NPCs etc. as the game is played). Caching the result is recommended. </summary>
            <returns> Whether or not the requested instance has been found. </returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetLocalizationKey(System.String)">
            <summary>
            Creates a localization key following the pattern of "Mods.{ModName}.{suffix}". Use this with <see cref="M:Terraria.Localization.Language.GetOrRegister(System.String,System.Func{System.String})"/> to retrieve a <see cref="T:Terraria.Localization.LocalizedText"/> for custom localization keys. Custom localization keys need to be registered during the mod loading process to appear automtaically in the localization files.
            </summary>
            <param name="suffix"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.AddNPCHeadTexture(System.Int32,System.String)">
            <summary>
            Assigns a head texture to the given town NPC type.
            </summary>
            <param name="npcType">Type of the NPC.</param>
            <param name="texture">The texture.</param>
            <returns>The boss head texture slot</returns>
            <exception cref="T:Terraria.ModLoader.Exceptions.MissingResourceException"></exception>
        </member>
        <member name="M:Terraria.ModLoader.Mod.AddBossHeadTexture(System.String,System.Int32)">
            <summary>
            Assigns a head texture that can be used by NPCs on the map.
            </summary>
            <param name="texture">The texture.</param>
            <param name="npcType">An optional npc id for NPCID.Sets.BossHeadTextures</param>
            <returns>The boss head texture slot</returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetFileNames">
            <summary>
            Retrieves the names of every file packaged into this mod.
            Note that this includes extensions, and for images the extension will always be <c>.rawimg</c>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetFileBytes(System.String)">
            <summary>
            Retrieve contents of files within the tmod file
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetFileStream(System.String,System.Boolean)">
            <summary>
            Retrieve contents of files within the tmod file
            </summary>
            <param name="name">The name.</param>
            <param name="newFileStream"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.Mod.Call(System.Object[])">
            <summary>
            Used for weak inter-mod communication. This allows you to interact with other mods without having to reference their types or namespaces, provided that they have implemented this method.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Expert-Cross-Mod-Content">Expert Cross Mod Content Guide</see> explains how to use this hook to implement and utilize cross-mod capabilities.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.GetPacket(System.Int32)">
            <summary>
            Creates a ModPacket object that you can write to and then send between servers and clients.
            </summary>
            <param name="capacity">The capacity.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Cannot get packet for " + Name + " because it does not exist on the other side</exception>
        </member>
        <member name="M:Terraria.ModLoader.Mod.Load">
            <summary>
            Override this method to run code after all content has been autoloaded. Here additional content can be manually loaded and Mod-wide tasks and setup can be done. For organization, it may be more suitable to split some things into various <see cref="M:Terraria.ModLoader.ModType.Load"/> methods, such as in <see cref="T:Terraria.ModLoader.ModSystem"/> classes, instead of doing everything here. <br/>
            Beware that mod content has not finished loading here, things like ModContent lookup tables or ID Sets are not fully populated. Use <see cref="M:Terraria.ModLoader.Mod.PostSetupContent"/> for any logic that needs to act on all content being fully loaded.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.PostSetupContent">
            <summary>
            Allows you to load things in your mod after its content has been setup (arrays have been resized to fit the content, etc).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.Unload">
            <summary>
            This is called whenever this mod is unloaded from the game. Use it to undo changes that you've made in Load that aren't automatically handled (for example, modifying the texture of a vanilla item). Mods are guaranteed to be unloaded in the reverse order they were loaded in.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.Mod.ExtraPlayerBuffSlots">
            <summary>
            The amount of extra buff slots this mod desires for Players. This value is checked after Mod.Load but before Mod.PostSetupContent. The actual number of buffs the player can use will be 22 plus the max value of all enabled mods. In-game use Player.MaxBuffs to check the maximum number of buffs.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.AddRecipeGroups">
            <summary>
            Override this method to add recipe groups to this mod. You must add recipe groups by calling the RecipeGroup.RegisterGroup method here. A recipe group is a set of items that can be used interchangeably in the same recipe.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.AddRecipes">
            <summary>
            Override this method to add recipes to the game. It is recommended that you do so through instances of Recipe, since it provides methods that simplify recipe creation.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.PostAddRecipes">
            <summary>
            This provides a hook into the mod-loading process immediately after recipes have been added. You can use this to edit recipes added by other mods.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.Close">
            <summary>
            Close is called before Unload, and may be called at any time when mod unloading is imminent (such as when downloading an update, or recompiling)
            Use this to release any additional file handles, or stop streaming music.
            Make sure to call `base.Close()` at the end
            May be called multiple times before Unload
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.Mod.HandlePacket(System.IO.BinaryReader,System.Int32)">
            <summary>
            Called whenever a net message / packet is received from a client (if this is a server) or the server (if this is a client). whoAmI is the ID of whomever sent the packet (equivalent to the Main.myPlayer of the sender), and reader is used to read the binary data of the packet. <br/>
            Note that many packets are sent from a client to the server and then relayed to the remaining clients. The whoAmI when the packet arrives at the remaining clients will be the servers <see cref="F:Terraria.Main.myPlayer"/>, not the original clients <see cref="F:Terraria.Main.myPlayer"/>. For packets only sent from a client to the server, relying on <paramref name="whoAmI"/> to identify the clients player is fine, but for packets that are relayed, the clients player index will need to be part of the packet itself to correctly identify the client that sent the original packet. Use <c>packet.Write((byte) Main.myPlayer);</c> to write and <c>int player = reader.ReadByte();</c> to read.
            </summary>
            <param name="reader">The reader.</param>
            <param name="whoAmI">The player the message is from. Only relevant for server code. For clients it will always be 255, the server. For the server it will be the whoAmI of the client.</param>
        </member>
        <member name="T:Terraria.ModLoader.ModAccessorySlot">
            <summary>
            A ModAccessorySlot instance represents a net new accessory slot instance. You can store fields in the ModAccessorySlot class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModAccessorySlot.PreDraw(Terraria.ModLoader.AccessorySlotType,Terraria.Item,Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            Allows drawing prior to vanilla ItemSlot.Draw code. Return false to NOT call ItemSlot.Draw
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModAccessorySlot.ApplyEquipEffects">
            <summary>
            Override to replace the vanilla effect behavior of the slot with your own.
            By default calls:
            Player.VanillaUpdateEquips(FunctionalItem), Player.ApplyEquipFunctional(FunctionalItem, ShowVisuals), Player.ApplyEquipVanity(VanityItem)
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModAccessorySlot.CanAcceptItem(Terraria.Item,Terraria.ModLoader.AccessorySlotType)">
            <summary>
            Override to set conditions on what can be placed in the slot. Default is to return false only when item property FitsAccessoryVanity says can't go in to a vanity slot.
            Return false to prevent the item going in slot. Return true for dyes, if you want dyes. Example: only wings can go in slot.
            Receives data:
            <para><paramref name="checkItem"/> :: the item that is attempting to enter the slot </para>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModAccessorySlot.ModifyDefaultSwapSlot(Terraria.Item,System.Int32)">
            <summary>
            After checking for empty slots in ItemSlot.AccessorySwap, this allows for changing what the default target slot (accSlotToSwapTo) will be.
            DOES NOT affect vanilla behavior of swapping items like for like where existing in a slot
            Return true to set this slot as the default targeted slot.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModAccessorySlot.IsHidden">
            <summary>
            Override to control whether or not drawing will be skipped during the given frame.
            NOTE: Nothing will be drawn, nor will subsequent drawing hooks be called on this slot for the frame while true
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModAccessorySlot.IsEnabled">
            <summary>
            Override to set conditions on when the slot is valid for stat/vanity calculations and player usage.
            Example: the demonHeart is consumed and in Expert mode in Vanilla.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModAccessorySlot.IsVisibleWhenNotEnabled">
            <summary>
            Override to change the condition on when the slot is visible, but otherwise non-functional for stat/vanity calculations.
            Defaults to check 'property' IsEmpty
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModAccessorySlot.OnMouseHover(Terraria.ModLoader.AccessorySlotType)">
            <summary>
            Allows you to do stuff while the player is hovering over this slot.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBackgroundStyle.Slot">
            <summary>
            The ID of this underground background style.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModUndergroundBackgroundStyle">
            <summary>
            Each background style determines in its own way how exactly the background is drawn. This class serves as a collection of functions for underground backgrounds.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModUndergroundBackgroundStyle.FillTextureArray(System.Int32[])">
            <summary>
            Allows you to determine which textures make up the background by assigning their background slots/IDs to the given array. BackgroundTextureLoader.GetBackgroundSlot may be useful here. Index 0 is the texture on the border of the ground and sky layers. Index 1 is the texture drawn between rock and ground layers. Index 2 is the texture on the border of ground and rock layers. Index 3 is the texture drawn in the rock layer. The border images are 160x16 pixels, and the others are 160x96, but it seems like the right 32 pixels of each is a duplicate of the far left 32 pixels.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModSurfaceBackgroundStyle">
            <summary>
            Each background style determines in its own way how exactly the background is drawn. This class serves as a collection of functions for above-ground backgrounds.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSurfaceBackgroundStyle.ModifyFarFades(System.Single[],System.Single)">
            <summary>
            Allows you to modify the transparency of all background styles that exist. In general, you should move the index equal to this style's slot closer to 1, and all other indexes closer to 0. The transitionSpeed parameter is what you should add/subtract to each element of the fades parameter. See the ExampleMod for an example.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSurfaceBackgroundStyle.ChooseFarTexture">
            <summary>
            Allows you to determine which texture is drawn in the very back of the background. BackgroundTextureLoader.GetBackgroundSlot may be useful here, as well as for the other texture-choosing hooks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSurfaceBackgroundStyle.ChooseMiddleTexture">
            <summary>
            Allows you to determine which texture is drawn in the middle of the background.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSurfaceBackgroundStyle.PreDrawCloseBackground(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Gives you complete freedom over how the closest part of the background is drawn. Return true for ChooseCloseTexture to have an effect; return false to disable tModLoader's own code for drawing the close background.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSurfaceBackgroundStyle.ChooseCloseTexture(System.Single@,System.Double@,System.Single@,System.Single@)">
            <summary>
            Allows you to determine which texture is drawn in the closest part of the background. This also lets you modify the scale and parallax (as well as two unfortunately-unknown parameters).
            </summary>
            <param name="scale">The scale.</param>
            <param name="parallax">The parallax value.</param>
            <param name="a">a?</param>
            <param name="b">b?</param>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.GlobalBackgroundStyle">
            <summary>
            This class serves to collect functions that operate on any kind of background style, without being specific to one single background style.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBackgroundStyle.ChooseUndergroundBackgroundStyle(System.Int32@)">
            <summary>
            Allows you to change which underground background style is being used.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBackgroundStyle.ChooseSurfaceBackgroundStyle(System.Int32@)">
            <summary>
            Allows you to change which surface background style is being used.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBackgroundStyle.FillUndergroundTextureArray(System.Int32,System.Int32[])">
            <summary>
            Allows you to change which textures make up the underground background by assigning their background slots/IDs to the given array. Index 0 is the texture on the border of the ground and sky layers. Index 1 is the texture drawn between rock and ground layers. Index 2 is the texture on the border of ground and rock layers. Index 3 is the texture drawn in the rock layer. The border images are 160x16 pixels, and the others are 160x96, but it seems like the right 32 pixels of each is a duplicate of the far left 32 pixels.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.GlobalBackgroundStyle.ModifyFarSurfaceFades(System.Int32,System.Single[],System.Single)">
            <summary>
            Allows you to modify the transparency of all background styles that exist. The style parameter is the current style that is being used.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModBiome">
            <summary>
            This class represents a biome added by a mod. It exists to centralize various biome related hooks, handling a lot of biome boilerplate, such as netcode.
            <br/>To check if a player is in the biome, use <see cref="M:Terraria.Player.InModBiome``1"/>.
            <br/>Unlike <see cref="T:Terraria.ModLoader.ModSceneEffect"/>, this defaults <see cref="P:Terraria.ModLoader.ModBiome.Music"/> to 0 and <see cref="P:Terraria.ModLoader.ModBiome.Priority"/> to <see cref="F:Terraria.ModLoader.SceneEffectPriority.BiomeLow"/>.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBiome.BiomeTorchItemType">
            <summary>
            The torch item type that will be placed when under the effect of biome torches
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBiome.BiomeCampfireItemType">
            <summary>
            The campfire item type that will be placed when under the effect of biome torches
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBiome.DisplayName">
            <summary>
            The display name for this biome in the bestiary.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBiome.BestiaryIcon">
            <summary>
            The path to the 30x30 texture that will appear for this biome in the bestiary. Defaults to adding "_Icon" onto the usual namespace+classname derived texture path.
            <br/> Vanilla icons use a drop shadow at 40 percent opacity and the texture will be offset 1 pixel left and up from centered in the bestiary filter grid.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBiome.BackgroundPath">
            <summary>
            The path to the background texture that will appear for this biome behind NPC's in the bestiary. Defaults to adding "_Background" onto the usual namespace+classname derived texture path.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBiome.BackgroundColor">
            <summary>
            The color of the bestiary background.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBiome.IsSceneEffectActive(Terraria.Player)">
            <summary>
            IsSceneEffectActive is auto-forwarded to read the result of IsBiomeActive.
            Do not need to implement when creating your ModBiome.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBiome.SetStaticDefaults">
            <summary>
            This is where you can set values for DisplayName.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBiome.IsBiomeActive(Terraria.Player)">
            <summary>
            Return true if the player is in the biome.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModBiome.OnEnter(Terraria.Player)">
            <summary>
            Override this hook to make things happen when the player enters the biome.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBiome.OnInBiome(Terraria.Player)">
            <summary>
            Override this hook to make things happen when the player is in the biome.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBiome.OnLeave(Terraria.Player)">
            <summary>
            Override this hook to make things happen when the player leaves the biome.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModBlockType">
            <summary>
            This is the superclass for ModTile and ModWall, combining common code
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBlockType.Type">
            <summary> The internal ID of this type of tile/wall. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBlockType.HitSound">
            <summary>
            The default style of sound made when this tile/wall is hit.<br/>
            Defaults to SoundID.Dig, which is the sound used for tiles such as dirt and sand.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBlockType.DustType">
            <summary> The default type of dust made when this tile/wall is hit. Defaults to 0. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBlockType.VanillaFallbackOnModDeletion">
            <summary> The vanilla ID of what should replace the instance when a user unloads and subsequently deletes data from your mod in their save file. Defaults to 0. </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.CreateMapEntryName">
            <summary>
            Legacy helper method for creating a localization sub-key MapEntry
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.SetStaticDefaults">
            <summary>
            Allows you to modify the properties after initial loading has completed.
            <br/> This is where you would set the properties of this tile/wall. Many properties are stored as arrays throughout Terraria's code.
            <br/> For example:
            <list type="bullet">
            <item> Main.tileSolid[Type] = true; </item>
            <item> Main.tileSolidTop[Type] = true; </item>
            <item> Main.tileBrick[Type] = true; </item>
            <item> Main.tileBlockLight[Type] = true; </item>
            </list>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.GetMapOption(System.Int32,System.Int32)">
            <summary>
            Allows you to choose which minimap entry the tile/wall at the given coordinates will use. 0 is the first entry added by AddMapEntry, 1 is the second entry, etc. Returns 0 by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.KillSound(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Allows you to customize which sound you want to play when the tile/wall at the given coordinates is hit. Return false to stop the game from playing its default sound for the tile/wall. Returns true by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="fail">If true, the tile/wall is only partially damaged. If false, the tile/wall is fully destroyed.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.NumDust(System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Allows you to change how many dust particles are created when the tile/wall at the given coordinates is hit.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="fail">If true, the tile is spawning dust for reasons other than the tile actually being destroyed. Worms, projectiles, and other effects cause dust to spawn aside from the usual case of the tile breaking.</param>
            <param name="num">The number of dust that will be spawned by the calling code</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.CreateDust(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Allows you to modify the default type of dust created when the tile/wall at the given coordinates is hit. Return false to stop the default dust (the type parameter) from being created. Returns true by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="type">The dust type that will be spawned by the calling code</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.CanPlace(System.Int32,System.Int32)">
            <summary>
            Allows you to stop this tile/wall from being placed at the given coordinates. Return false to stop the tile/wall from being placed. Returns true by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.CanExplode(System.Int32,System.Int32)">
            <summary>
            Whether or not the tile/wall at the given coordinates can be killed by an explosion (ie. bombs). Returns true by default; return false to stop an explosion from destroying it.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.PreDraw(System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Allows you to draw things behind the tile/wall at the given coordinates. Return false to stop the game from drawing the tile normally. Returns true by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="spriteBatch"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.PostDraw(System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Allows you to draw things in front of the tile/wall at the given coordinates. This can also be used to do things such as creating dust.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="spriteBatch"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.RandomUpdate(System.Int32,System.Int32)">
            <summary>
            Called whenever the world randomly decides to update this tile/wall in a given tick. Useful for things such as growing or spreading.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.PlaceInWorld(System.Int32,System.Int32,Terraria.Item)">
            <summary>
            Allows you to do something when this tile/wall is placed. Called on the local Client and Single Player.
            </summary>
            <param name="i">The x position in tile coordinates. Equal to Player.tileTargetX</param>
            <param name="j">The y position in tile coordinates. Equal to Player.tileTargetY</param>
            <param name="item">The item used to place this tile/wall.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBlockType.ModifyLight(System.Int32,System.Int32,System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to determine how much light this tile/wall emits.<br/>
            If it is a tile, make sure you set Main.tileLighted[Type] to true in SetDefaults for this to work.<br/>
            If it is a wall, it can also let you light up the block in front of this wall.<br/>
            See <see cref="M:Terraria.Graphics.Light.TileLightScanner.ApplyTileLight(Terraria.Tile,System.Int32,System.Int32,Terraria.Utilities.FastRandom@,Microsoft.Xna.Framework.Vector3@)"/> for vanilla tile light values to use as a reference.<br/>
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="r">The red component of light, usually a value between 0 and 1</param>
            <param name="g">The green component of light, usually a value between 0 and 1</param>
            <param name="b">The blue component of light, usually a value between 0 and 1</param>
        </member>
        <member name="T:Terraria.ModLoader.ModBossBar">
            <summary>
            A class that is used to create custom boss health bars for modded and vanilla NPCs.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBar.GetIconTexture(System.Nullable{Microsoft.Xna.Framework.Rectangle}@)">
            <summary>
            Allows you to specify the icon texture, and optionally the frame it should be displayed on. The frame defaults to the entire texture otherwise.
            </summary>
            <param name="iconFrame">The frame the texture should be displayed on</param>
            <returns>The icon texture</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBar.ModifyInfo(Terraria.GameContent.UI.BigProgressBar.BigProgressBarInfo@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to handle the logic for when and how this ModBossBar should work. You want to override this if you have a multi-segment NPC. Returns null by default. Failing to return false otherwise will lead to your bar being displayed at wrong times.
            <para>Return null to let the basic logic run after this hook is called (index validity check and assigning lifePercent to match the health of the NPC) and then allowing it to be drawn.</para>
            <para>Return true to allow this ModBossBar to be drawn.</para>
            <para>Return false to prevent this ModBossBar from being drawn so that the game will try to pick a different one.</para>
            </summary>
            <param name="info">Contains the index of the NPC the game decided to focus on</param>
            <param name="life">The current life of the boss</param>
            <param name="lifeMax">The max (initial) life of the boss</param>
            <param name="shield">The current shield of the boss</param>
            <param name="shieldMax">The max shield for the boss (may be 0 if the boss has no shield)</param>
            <returns><see langword="null"/> for "single-segment" NPC logic, <see langword="true"/> for allowing drawing, <see langword="false"/> for preventing drawing</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBar.PreDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.NPC,Terraria.DataStructures.BossBarDrawParams@)">
            <summary>
            Allows you to draw things before the default draw code is ran. Return false to prevent drawing the ModBossBar. Returns true by default.
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="npc">The NPC this ModBossBar is focused on</param>
            <param name="drawParams">The draw parameters for the boss bar</param>
            <returns><see langword="true"/> for allowing drawing, <see langword="false"/> for preventing drawing</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBar.PostDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.NPC,Terraria.DataStructures.BossBarDrawParams)">
            <summary>
            Allows you to draw things after the bar has been drawn. skipped is true if you or another mod has skipped drawing the bar in PreDraw (possibly hiding it or in favor of new visuals).
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="npc">The NPC this ModBossBar is focused on</param>
            <param name="drawParams">The draw parameters for the boss bar</param>
        </member>
        <member name="T:Terraria.ModLoader.ModBossBarStyle">
            <summary>
            A class that is used to swap out the entire boss bar display system with your own implementation
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBossBarStyle.IsSelected">
            <summary>
            Checks if the selected style matches this ModBossBarStyle.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBossBarStyle.DisplayName">
            <summary>
            Controls the name that shows up in the menu selection. If not overridden, it will use this mod's display name.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBossBarStyle.PreventUpdate">
            <summary>
            Return true to skip update code for boss bars. Useful if you want to use your own code for finding out which NPCs to track. Returns false by default.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBossBarStyle.PreventDraw">
            <summary>
            Return true to skip draw code for boss bars. Useful if you want to use your own code for drawing boss bars. Returns false by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBarStyle.Update(Terraria.GameContent.UI.BigProgressBar.IBigProgressBar,Terraria.GameContent.UI.BigProgressBar.BigProgressBarInfo@)">
            <summary>
            Runs after update code for boss bars (skipped if PreventUpdate returns true), can be used to identify which NPCs to draw.
            </summary>
            <param name="currentBar">The boss bar that vanilla update code decided to draw. Can be null if skipped or if no suitable NPCs found. Can be casted to ModBossBar</param>
            <param name="info">Contains the index of the NPC the game decided to focus on</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBarStyle.OnSelected">
            <summary>
            Called when this ModBossBarStyle is selected
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBarStyle.OnDeselected">
            <summary>
            Called when this ModBossBarStyle is deselected
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBossBarStyle.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.GameContent.UI.BigProgressBar.IBigProgressBar,Terraria.GameContent.UI.BigProgressBar.BigProgressBarInfo)">
            <summary>
            Runs after draw code for boss bars (skipped if PreventDraw returns true), can be used to draw your own bars, or reinvoke draw for currently selected-to-draw bar
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="currentBar">The boss bar that vanilla update code decided to draw. Can be null if skipped or if no suitable NPCs found. Can be casted to ModBossBar</param>
            <param name="info">Contains the index of the NPC the game decided to focus on</param>
        </member>
        <member name="T:Terraria.ModLoader.ModBuff">
            <summary>
            This class serves as a place for you to define a new buff and how that buff behaves.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBuff.Type">
            <summary> The buff id of this buff. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBuff.DisplayName">
            <summary> The translations of this buff's display name. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModBuff.Description">
            <summary> The translations of this buff's description. </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBuff.SetStaticDefaults">
            <summary>
            Allows you to modify the properties after initial loading has completed.
            <br/> This is where all buff related assignments go.
            <br/> For example:
            <list type="bullet">
            <item> Main.debuff[Type] = true; </item>
            <item> Main.buffNoTimeDisplay[Type] = true; </item>
            <item> Main.pvpBuff[Type] = true; </item>
            <item> Main.vanityPet[Type] = true; </item>
            <item> Main.lightPet[Type] = true; </item>
            </list>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBuff.Update(Terraria.Player,System.Int32@)">
            <summary>
            Allows you to make this buff give certain effects to the given player. If you remove the buff from the player, make sure the decrement the buffIndex parameter by 1.
            </summary>
            <param name="player">The player to update this buff on.</param>
            <param name="buffIndex">The index in <see cref="F:Terraria.Player.buffType"/> and <see cref="F:Terraria.Player.buffType"/> of this buff. For use with <see cref="M:Terraria.Player.DelBuff(System.Int32)"/>.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBuff.Update(Terraria.NPC,System.Int32@)">
            <summary>
            Allows you to make this buff give certain effects to the given NPC. If you remove the buff from the NPC, make sure to decrement the buffIndex parameter by 1.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBuff.ReApply(Terraria.Player,System.Int32,System.Int32)">
            <summary>
            Allows to you make special things happen when adding this buff to a player when the player already has this buff. Return true to block the vanilla re-apply code from being called; returns false by default. The vanilla re-apply code sets the buff time to the "time" argument if that argument is larger than the current buff time.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBuff.ReApply(Terraria.NPC,System.Int32,System.Int32)">
            <summary>
            Allows to you make special things happen when adding this buff to an NPC when the NPC already has this buff. Return true to block the vanilla re-apply code from being called; returns false by default. The vanilla re-apply code sets the buff time to the "time" argument if that argument is larger than the current buff time.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBuff.ModifyBuffText(System.String@,System.String@,System.Int32@)">
            <summary>
            Allows you to modify the name and tooltip that displays when the mouse hovers over the buff icon, as well as the color the buff's name is drawn in.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModBuff.PreDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,Terraria.DataStructures.BuffDrawParams@)">
            <summary>
            Allows you to draw things before the default draw code is ran. Return false to prevent drawing the buff. Returns true by default.
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="buffIndex">The index in Main.LocalPlayer.buffType and .buffTime of the buff</param>
            <param name="drawParams">The draw parameters for the buff</param>
            <returns><see langword="true"/> for allowing drawing, <see langword="false"/> for preventing drawing</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModBuff.PostDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,Terraria.DataStructures.BuffDrawParams)">
            <summary>
            Allows you to draw things after the buff has been drawn. skipped is true if you or another mod has skipped drawing the buff (possibly hiding it or in favor of new visuals).
            </summary>
            <param name="spriteBatch">The spriteBatch that is drawn on</param>
            <param name="buffIndex">The index in Main.LocalPlayer.buffType and .buffTime of the buff</param>
            <param name="drawParams">The draw parameters for the buff</param>
        </member>
        <member name="M:Terraria.ModLoader.ModBuff.RightClick(System.Int32)">
            <summary>
            Allows you to make things happen when the buff icon is right-clicked. Return false to prevent the buff from being cancelled.
            </summary>
            <param name="buffIndex">The index in Main.LocalPlayer.buffType and .buffTime of the buff</param>
            <returns><see langword="true"/> for allowing the buff to be cancelled, <see langword="false"/> to prevent the buff from being cancelled</returns>
        </member>
        <member name="T:Terraria.ModLoader.CommandType">
            <summary>A flag enum representing context where this command operates.</summary>
        </member>
        <member name="F:Terraria.ModLoader.CommandType.Chat">
            <summary>Command can be used in Chat in SP and MP.</summary>
        </member>
        <member name="F:Terraria.ModLoader.CommandType.Server">
            <summary>Command is executed by server in MP.</summary>
        </member>
        <member name="F:Terraria.ModLoader.CommandType.Console">
            <summary>Command can be used in server console during MP.</summary>
        </member>
        <member name="F:Terraria.ModLoader.CommandType.World">
            <summary>Command can be used in Chat in SP and MP, but executes on the Server in MP. (SinglePlayer ? Chat : Server)</summary>
        </member>
        <member name="P:Terraria.ModLoader.CommandCaller.Player">
            <summary>
            The Player object corresponding to the Player that invoked this command. Use this when the Player is needed. Don't use Main.LocalPlayer because that would be incorrect for various CommandTypes.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.CommandCaller.Reply(System.String,Microsoft.Xna.Framework.Color)">
            <summary>
            Use this to respond to the Player that invoked this command. This method handles writing to the console, writing to chat, or sending messages over the network for you depending on the CommandType used. Avoid using Main.NewText, Console.WriteLine, or NetMessage.SendChatMessageToClient directly because the logic would change depending on CommandType.
            </summary>
            <param name="text"></param>
            <param name="color"></param>
        </member>
        <member name="T:Terraria.ModLoader.ModCommand">
            <summary>
            This class represents a chat or console command. Use the CommandType to specify the scope of the command.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModCommand.Command">
            <summary>The desired text to trigger this command.</summary>
        </member>
        <member name="P:Terraria.ModLoader.ModCommand.Type">
            <summary>A flag enum representing context where this command operates.</summary>
        </member>
        <member name="P:Terraria.ModLoader.ModCommand.Usage">
            <summary>A short usage explanation for this command.</summary>
        </member>
        <member name="P:Terraria.ModLoader.ModCommand.Description">
            <summary>A short description of this command.</summary>
        </member>
        <member name="M:Terraria.ModLoader.ModCommand.Action(Terraria.ModLoader.CommandCaller,System.String,System.String[])">
            <summary>The code that is executed when the command is triggered.</summary>
        </member>
        <member name="T:Terraria.ModLoader.ModContent">
            <summary>
            Manages content added by mods.
            Liasons between mod content and Terraria's arrays and oversees the Loader classes.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetInstance``1">
            <summary> Returns the template instance of the provided content type (not the clone/new instance which gets added to Items/Players/NPCs etc. as the game is played). </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetContent``1">
            <summary>
            Returns all registered content instances that derive from the provided type and that are added by all currently loaded mods.
            <br/>This only includes the 'template' instance for each piece of content, not all the clones/new instances which get added to Items/Players/NPCs etc. as the game is played
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.Find``1(System.String)">
            <summary> Attempts to find the template instance with the specified full name (not the clone/new instance which gets added to Items/Players/NPCs etc. as the game is played). Caching the result is recommended.<para/>This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.Find``1(System.String,System.String)">
            <summary> Attempts to find the template instance with the specified name and mod name (not the clone/new instance which gets added to Items/Players/NPCs etc. as the game is played). Caching the result is recommended.<para/>This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.TryFind``1(System.String,``0@)">
            <summary> Safely attempts to find the template instance with the specified full name (not the clone/new instance which gets added to Items/Players/NPCs etc. as the game is played). Caching the result is recommended. </summary>
            <returns> Whether or not the requested instance has been found. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.TryFind``1(System.String,System.String,``0@)">
            <summary> Safely attempts to find the template instance with the specified name and mod name (not the clone/new instance which gets added to Items/Players/NPCs etc. as the game is played). Caching the result is recommended. </summary>
            <returns> Whether or not the requested instance has been found. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetFileBytes(System.String)">
            <summary>
            Gets the byte representation of the file with the specified name. The name is in the format of "ModFolder/OtherFolders/FileNameWithExtension". Throws an ArgumentException if the file does not exist.
            </summary>
            <exception cref="T:Terraria.ModLoader.Exceptions.MissingResourceException"></exception>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.FileExists(System.String)">
            <summary>
            Returns whether or not a file with the specified name exists.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.Request``1(System.String,ReLogic.Content.AssetRequestMode)">
            <summary>
            Gets the asset with the specified name. Throws an Exception if the asset does not exist.
            </summary>
            <param name="name">The path to the asset without extension, including the mod name (or Terraria) for vanilla assets. Eg "ModName/Folder/FileNameWithoutExtension"</param>
            <param name="mode">The desired timing for when the asset actually loads. Use ImmediateLoad if you need correct dimensions immediately, such as with UI initialization</param>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.HasAsset(System.String)">
            <summary>
            Returns whether or not a asset with the specified name exists.
            Includes the mod name prefix like Request
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModNPC(System.Int32)">
            <inheritdoc cref="M:Terraria.ModLoader.NPCLoader.GetNPC(System.Int32)"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModBossHeadSlot(System.String)">
            <inheritdoc cref="M:Terraria.ModLoader.NPCHeadLoader.GetBossHeadSlot(System.String)"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModHeadSlot(System.String)">
            <inheritdoc cref="M:Terraria.ModLoader.NPCHeadLoader.GetHeadSlot(System.String)"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModItem(System.Int32)">
            <inheritdoc cref="M:Terraria.ModLoader.ItemLoader.GetItem(System.Int32)"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModDust(System.Int32)">
            <inheritdoc cref="M:Terraria.ModLoader.DustLoader.GetDust(System.Int32)"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModProjectile(System.Int32)">
            <inheritdoc cref="M:Terraria.ModLoader.ProjectileLoader.GetProjectile(System.Int32)"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModBuff(System.Int32)">
            <inheritdoc cref="M:Terraria.ModLoader.BuffLoader.GetBuff(System.Int32)"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetEquipTexture(Terraria.ModLoader.EquipType,System.Int32)">
            <inheritdoc cref="M:Terraria.ModLoader.EquipLoader.GetEquipTexture(Terraria.ModLoader.EquipType,System.Int32)"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModMount(System.Int32)">
            <inheritdoc cref="M:Terraria.ModLoader.MountLoader.GetMount(System.Int32)"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModTile(System.Int32)">
            <inheritdoc cref="M:Terraria.ModLoader.TileLoader.GetTile(System.Int32)"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModWall(System.Int32)">
            <inheritdoc cref="M:Terraria.ModLoader.WallLoader.GetWall(System.Int32)"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModWaterStyle(System.Int32)">
            <summary>
            Returns the ModWaterStyle with the given ID.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModWaterfallStyle(System.Int32)">
            <summary>
            Returns the ModWaterfallStyle with the given ID.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModBackgroundSlot(System.String)">
            <inheritdoc cref="M:Terraria.ModLoader.BackgroundTextureLoader.GetBackgroundSlot(System.String)"/>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModSurfaceBackgroundStyle(System.Int32)">
            <summary>
            Returns the ModSurfaceBackgroundStyle object with the given ID.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GetModUndergroundBackgroundStyle(System.Int32)">
            <summary>
            Returns the ModUndergroundBackgroundStyle object with the given ID.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.GoreType``1">
            <summary>
            Get the id (type) of a ModGore by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.ItemType``1">
            <summary>
            Get the id (type) of a ModItem by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.PrefixType``1">
            <summary>
            Get the id (type) of a ModPrefix by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.RarityType``1">
            <summary>
            Get the id (type) of a ModRarity by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.DustType``1">
            <summary>
            Get the id (type) of a ModDust by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.TileType``1">
            <summary>
            Get the id (type) of a ModTile by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.PylonType``1">
            <summary>
            Get the id (type) of a ModPylon by class. Assumes one instance per class.
            If nothing is found, returns 0, or the "Forest Pylon" type.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.TileEntityType``1">
            <summary>
            Get the id (type) of a ModTileEntity by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.WallType``1">
            <summary>
            Get the id (type) of a ModWall by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.ProjectileType``1">
            <summary>
            Get the id (type) of a ModProjectile by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.NPCType``1">
            <summary>
            Get the id (type) of a ModNPC by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.BuffType``1">
            <summary>
            Get the id (type) of a ModBuff by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.MountType``1">
            <summary>
            Get the id (type) of a ModMount by class. Assumes one instance per class.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModContent.CleanupModReferences">
            <summary>
            Several arrays and other fields hold references to various classes from mods, we need to clean them up to give properly coded mods a chance to be completely free of references
            so that they can be collected by the garbage collection. For most things eventually they will be replaced during gameplay, but we want the old instance completely gone quickly.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModDust">
            <summary>
            This class represents a type of dust that is added by a mod. Only one instance of this class will ever exist for each type of dust you add.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Dust">Basic Dust Guide</see> teaches the basics of making modded dust.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModDust.UpdateType">
            <summary> Allows you to choose a type of dust for this type of dust to copy the behavior of. Defaults to -1, which means that no behavior is copied. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModDust.Texture2D">
            <summary> The sprite sheet that this type of dust uses. Normally a sprite sheet will consist of a vertical alignment of three 10 x 10 pixel squares, each one containing a possible look for the dust. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModDust.Type">
            <summary> The ID of this type of dust. </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModDust.PreDraw(Terraria.Dust)">
            <summary>
            Allows drawing behind this dust, such as a trail, or modifying the way it is drawn. Return false to stop the normal dust drawing code (useful if you're manually drawing the dust itself). Returns true by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModDust.SetStaticDefaults">
            <summary>
            Allows you to modify the properties after initial loading has completed.
            This is where you would update ModDust's UpdateType property and modify the Terraria.GameContent.ChildSafety.SafeDust array.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModDust.OnSpawn(Terraria.Dust)">
            <summary>
            Allows you to modify a dust's fields when it is created.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModDust.Update(Terraria.Dust)">
            <summary>
            Allows you to customize how you want this type of dust to behave. Return true to allow for vanilla dust updating to also take place; will return true by default. Normally you will want this to return false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModDust.MidUpdate(Terraria.Dust)">
            <summary>
            Allows you to add behavior to this dust on top of the default dust behavior. Return true if you're applying your own behavior; return false to make the dust slow down by itself. Normally you will want this to return true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModDust.GetAlpha(Terraria.Dust,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to override the color this dust will draw in. Return null to draw it in the normal light color; returns null by default. Note that the dust.noLight field makes the dust ignore lighting and draw in full brightness, and can be set in OnSpawn instead of having to return Color.White here.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModGore">
            <summary>
            This class allows you to customize the behavior of a custom gore.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModGore.UpdateType">
            <summary> Allows you to copy the Update behavior of a different type of gore. This defaults to 0, which means no behavior is copied. </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModGore.OnSpawn(Terraria.Gore,Terraria.DataStructures.IEntitySource)">
            <summary>
            Allows you to modify a gore's fields when it is created.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModGore.Update(Terraria.Gore)">
            <summary>
            Allows you to customize how you want this type of gore to behave. Return true to allow for vanilla gore updating to also take place; returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModGore.GetAlpha(Terraria.Gore,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to override the color this gore will draw in. Return null to draw it in the normal light color; returns null by default.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.ModHair">
            <summary>
            This class allows you to define custom hair styles for a player, controlling the associated gender and unlock conditions.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModHair.AltTexture">
            <summary>
            The path to the alternative texture used for when the hair is covered by a hat.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModHair.RandomizedCharacterCreationGender">
            <summary>
            Used to set the character gender based on hairstyle when randomizing a new character. <br />
            If <see cref="F:Terraria.ModLoader.Gender.Unspecified" />, the gender will be randomly rolled. <br />
            Note that all hairstyles can be selected with either gender. This is just a default for quick randomization.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModHair.AvailableDuringCharacterCreation">
            <summary>
            Determines whether this hairstyle is available during character creation. <br />
            This is distinctly different from <see cref="M:Terraria.ModLoader.ModHair.GetUnlockConditions" />, which determines whether the hairstyle
            is available in-game in the Stylist UI.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModHair.AutoStaticDefaults">
            <summary>
            Automatically sets certain static defaults. Override this if you do not want the properties to be set for you.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModHair.GetUnlockConditions">
            <summary>
            Gets the unlock conditions for this hairstyle. No conditions by default. <br />
            These conditions are used exclusively for the Stylist UI in-game; see <see cref="P:Terraria.ModLoader.ModHair.AvailableDuringCharacterCreation" /> for character creation.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModItem">
            <summary>
            This class serves as a place for you to place all your properties and hooks for each item. Create instances of ModItem (preferably overriding this class) to pass as parameters to Mod.AddItem.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Item">Basic Item Guide</see> teaches the basics of making a modded item.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModItem.Item">
            <summary>
            The item object that this ModItem controls.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModItem.Type">
            <summary>
            Shorthand for <c>Item.type</c>.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModItem.DisplayName">
            <summary>
            The translations for the display name of this item.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModItem.Tooltip">
            <summary>
            The translations for the tooltip of this item.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModItem.Texture">
            <summary>
            The file name of this type's texture file in the mod loader's file space. <br/>
            The resulting  Asset&lt;Texture2D&gt; can be retrieved using <see cref="F:Terraria.GameContent.TextureAssets.Item"/> indexed by <see cref="P:Terraria.ModLoader.ModItem.Type"/> if needed. <br/>
            You can use a vanilla texture by returning <c>$"Terraria/Images/Item_{ItemID.ItemNameHere}"</c> <br/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.SetDefaults">
            <summary>
            This is where you set all your item's properties, such as width, damage, shootSpeed, defense, etc.
            For those that are familiar with tAPI, this has the same function as .json files.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnSpawn(Terraria.DataStructures.IEntitySource)">
            <summary>
            Gets called when your item spawns in world
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.AutoDefaults">
            <summary>
            Automatically sets certain defaults. Override this if you do not want the properties to be set for you.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.AutoStaticDefaults">
            <summary>
            Automatically sets certain static defaults. Override this if you do not want the properties to be set for you.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ChoosePrefix(Terraria.Utilities.UnifiedRandom)">
            <summary>
            Allows you to manually choose what prefix an item will get.
            </summary>
            <returns>The ID of the prefix to give the item, -1 to use default vanilla behavior</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.MeleePrefix">
            <summary>
            Allows you to change whether or not a weapon receives melee prefixes. Return true if the item should receive melee prefixes and false if it should not.
            Takes priority over WeaponPrefix, RangedPrefix, and MagicPrefix
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.WeaponPrefix">
            <summary>
            Allows you to change whether or not a weapon only receives generic prefixes. Return true if the item should only receive generic prefixes and false if it should not.
            Takes priority over RangedPrefix and MagicPrefix
            Ignored if MeleePrefix returns true
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.RangedPrefix">
            <summary>
            Allows you to change whether or not a weapon receives ranged prefixes. Return true if the item should receive ranged prefixes and false if it should not.
            Takes priority over MagicPrefix
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.MagicPrefix">
            <summary>
            Allows you to change whether or not a weapon receives magic prefixes. Return true if the item should receive magic prefixes and false if it should not.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PrefixChance(System.Int32,Terraria.Utilities.UnifiedRandom)">
             <summary>
             To prevent putting the item in the tinkerer slot, return false when pre is -3.
             To prevent rolling of a prefix on spawn, return false when pre is -1.
             To force rolling of a prefix on spawn, return true when pre is -1.
            
             To reduce the probability of a prefix on spawn (pre == -1) to X%, return false 100-4X % of the time.
             To increase the probability of a prefix on spawn (pre == -1) to X%, return true (4X-100)/3 % of the time.
            
             To delete a prefix from an item when the item is loaded, return false when pre is the prefix you want to delete.
             Use AllowPrefix to prevent rolling of a certain prefix.
             </summary>
             <param name="pre">The prefix being applied to the item, or the roll mode. -1 is when the item is naturally generated in a chest, crafted, purchased from an NPC, looted from a grab bag (excluding presents), or dropped by a slain enemy (if it's spawned with prefixGiven: -1). -2 is when the item is rolled in the tinkerer. -3 determines if the item can be placed in the tinkerer slot.</param>
             <param name="rand">The random number generator class to be used in random choices</param>
             <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.AllowPrefix(System.Int32)">
            <summary>
            Force a re-roll of a prefix by returning false.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanUseItem(Terraria.Player)">
            <summary>
            Returns whether or not this item can be used. By default returns true.
            </summary>
            <param name="player">The player using the item.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanAutoReuseItem(Terraria.Player)">
            <summary>
            Allows you to modify the autoswing (auto-reuse) behavior of this item without having to mess with Item.autoReuse.
            <br>Useful to create effects like the Feral Claws which makes melee weapons and whips auto-reusable.</br>
            <br>Return true to enable autoswing (if not already enabled through autoReuse), return false to prevent autoswing. Returns null by default, which applies vanilla behavior.</br>
            </summary>
            <param name="player"> The player. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseStyle(Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to modify the location and rotation of this item in its use animation.
            </summary>
            <param name="player"> The player. </param>
            <param name="heldItemFrame"> The source rectangle for the held item's texture. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.HoldStyle(Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to modify the location and rotation of this item when the player is holding it.
            </summary>
            <param name="player"> The player. </param>
            <param name="heldItemFrame"> The source rectangle for the held item's texture. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.HoldItem(Terraria.Player)">
            <summary>
            Allows you to make things happen when the player is holding this item (for example, torches make light and water candles increase spawn rate).
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseTimeMultiplier(Terraria.Player)">
            <summary>
            Allows you to change the effective useTime of an item.
            <br/> Note that this hook may cause items' actions to run less or more times than they should per a single use.
            </summary>
            <returns> The multiplier on the usage time. 1f by default. Values greater than 1 increase the item use's length. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseAnimationMultiplier(Terraria.Player)">
            <summary>
            Allows you to change the effective useAnimation of an item.
            <br/> Note that this hook may cause items' actions to run less or more times than they should per a single use.
            </summary>
            <returns>The multiplier on the animation time. 1f by default. Values greater than 1 increase the item animation's length. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseSpeedMultiplier(Terraria.Player)">
            <summary>
            Allows you to safely change both useTime and useAnimation while keeping the values relative to each other.
            <br/> Useful for status effects.
            </summary>
            <returns> The multiplier on the use speed. 1f by default. Values greater than 1 increase the overall item speed. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.GetHealLife(Terraria.Player,System.Boolean,System.Int32@)">
            <summary>
            Allows you to temporarily modify the amount of life a life healing item will heal for, based on player buffs, accessories, etc. This is only called for items with a healLife value.
            </summary>
            <param name="player">The player using the item.</param>
            <param name="quickHeal">Whether the item is being used through quick heal or not.</param>
            <param name="healValue">The amount of life being healed.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.GetHealMana(Terraria.Player,System.Boolean,System.Int32@)">
            <summary>
            Allows you to temporarily modify the amount of mana a mana healing item will heal for, based on player buffs, accessories, etc. This is only called for items with a healMana value.
            </summary>
            <param name="player">The player using the item.</param>
            <param name="quickHeal">Whether the item is being used through quick heal or not.</param>
            <param name="healValue">The amount of mana being healed.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyManaCost(Terraria.Player,System.Single@,System.Single@)">
            <summary>
            Allows you to temporarily modify the amount of mana this item will consume on use, based on player buffs, accessories, etc. This is only called for items with a mana value.
            <br/><br/> <b>Do not</b> modify <see cref="F:Terraria.Item.mana"/>, modify the <paramref name="reduce"/> and <paramref name="mult"/> parameters.
            </summary>
            <param name="player">The player using the item.</param>
            <param name="reduce">Used for decreasingly stacking buffs (most common). Only ever use -= on this field.</param>
            <param name="mult">Use to directly multiply the item's effective mana cost. Good for debuffs, or things which should stack separately (eg meteor armor set bonus).</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnMissingMana(Terraria.Player,System.Int32)">
            <summary>
            Allows you to make stuff happen when a player doesn't have enough mana for the item they are trying to use.
            If the player has high enough mana after this hook runs, mana consumption will happen normally.
            Only runs once per item use.
            </summary>
            <param name="player">The player using the item.</param>
            <param name="neededMana">The mana needed to use the item.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnConsumeMana(Terraria.Player,System.Int32)">
            <summary>
            Allows you to make stuff happen when a player consumes mana on use of this item.
            </summary>
            <param name="player">The player using the item.</param>
            <param name="manaConsumed">The mana consumed from the player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyWeaponDamage(Terraria.Player,Terraria.ModLoader.StatModifier@)">
            <summary>
            Allows you to dynamically modify a weapon's damage based on player and item conditions.
            Can be utilized to modify damage beyond the tools that DamageClass has to offer.
            <br/><br/> <b>Do not</b> modify <see cref="F:Terraria.Item.damage"/>, modify the <paramref name="damage"/> parameter.
            </summary>
            <param name="player">The player using the item.</param>
            <param name="damage">The StatModifier object representing the totality of the various modifiers to be applied to the item's base damage.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyResearchSorting(Terraria.ID.ContentSamples.CreativeHelper.ItemGroup@)">
            <summary>
            Allows you to set an item's sorting group in Journey Mode's duplication menu. This is useful for setting custom item types that group well together, or whenever the default vanilla sorting doesn't sort the way you want it.
            </summary>
            <param name="itemGroup">The item group this item is being assigned to</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanConsumeBait(Terraria.Player)">
            <summary>
            Choose if this item will be consumed or not when used as bait. return null for vanilla behavior.
            </summary>
            <param name="player">The Player that owns the bait</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanResearch">
            <summary>
            Allows you to prevent an item from being researched by returning false. True is the default behavior.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnResearched(System.Boolean)">
            <summary>
            Allows you to create custom behavior when an item is accepted by the Research function
            </summary>
            <param name="fullyResearched">True if the item was completely researched, and is ready to be duplicated, false if only partially researched.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyWeaponKnockback(Terraria.Player,Terraria.ModLoader.StatModifier@)">
            <summary>
            Allows you to dynamically modify a weapon's knockback based on player and item conditions.
            Can be utilized to modify damage beyond the tools that DamageClass has to offer.
            <br/><br/> <b>Do not</b> modify <see cref="F:Terraria.Item.knockBack"/>, modify the <paramref name="knockback"/> parameter.
            </summary>
            <param name="player">The player using the item.</param>
            <param name="knockback">The StatModifier object representing the totality of the various modifiers to be applied to the item's base knockback.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyWeaponCrit(Terraria.Player,System.Single@)">
            <summary>
            Allows you to dynamically modify a weapon's crit chance based on player and item conditions.
            Can be utilized to modify damage beyond the tools that DamageClass has to offer.
            <br/><br/> <b>Do not</b> modify <see cref="F:Terraria.Item.crit"/>, modify the <paramref name="crit"/> parameter.
            </summary>
            <param name="player">The player using the item.</param>
            <param name="crit">The total crit chance of the item after all normal crit chance calculations.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.NeedsAmmo(Terraria.Player)">
            <summary>
            Whether or not having no ammo prevents an item that uses ammo from shooting.
            Return false to allow shooting with no ammo in the inventory, in which case this item will act as if the default ammo for it is being used.
            Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PickAmmo(Terraria.Item,Terraria.Player,System.Int32@,System.Single@,Terraria.ModLoader.StatModifier@,System.Single@)">
            <summary>
            Allows you to modify various properties of the projectile created by a weapon based on the ammo it is using. This hook is called on the ammo.
            </summary>
            <param name="weapon">The item that is using this ammo.</param>
            <param name="player">The player using the item.</param>
            <param name="type">The ID of the fired projectile.</param>
            <param name="speed">The speed of the fired projectile.</param>
            <param name="damage">
            The damage modifier for the projectile.<br></br>
            Total weapon damage is included as Flat damage.<br></br>
            Be careful not to apply flat or base damage bonuses which are already applied to the weapon.
            </param>
            <param name="knockback">The knockback of the fired projectile.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanChooseAmmo(Terraria.Item,Terraria.Player)">
            <summary>
            Whether or not the given ammo item is valid for this weapon. If this, or <see cref="M:Terraria.ModLoader.ModItem.CanBeChosenAsAmmo(Terraria.Item,Terraria.Player)"/> on the ammo, returns false, then the ammo will not be valid for this weapon. <br></br>
            By default, returns null and allows <see cref="F:Terraria.Item.useAmmo"/> and <see cref="F:Terraria.Item.ammo"/> to decide. Return true to make the ammo valid regardless of these fields, and return false to make it invalid. <br></br>
            If false is returned, the <see cref="M:Terraria.ModLoader.ModItem.CanConsumeAmmo(Terraria.Item,Terraria.Player)"/>, <see cref="M:Terraria.ModLoader.ModItem.CanBeConsumedAsAmmo(Terraria.Item,Terraria.Player)"/>, <see cref="M:Terraria.ModLoader.ModItem.OnConsumeAmmo(Terraria.Item,Terraria.Player)"/>, and <see cref="M:Terraria.ModLoader.ModItem.OnConsumedAsAmmo(Terraria.Item,Terraria.Player)"/> hooks are never called.
            </summary>
            <param name="ammo">The ammo that the weapon is attempting to select.</param>
            <param name="player">The player which this weapon and the potential ammo belong to.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanBeChosenAsAmmo(Terraria.Item,Terraria.Player)">
            <summary>
            Whether or not this ammo item is valid for the given weapon. If this, or <see cref="M:Terraria.ModLoader.ModItem.CanChooseAmmo(Terraria.Item,Terraria.Player)"/> on the weapon, returns false, then the ammo will not be valid for this weapon.<br></br>
            By default, returns null and allows <see cref="F:Terraria.Item.useAmmo"/> and <see cref="F:Terraria.Item.ammo"/> to decide. Return true to make the ammo valid regardless of these fields, and return false to make it invalid.<br></br>
            If false is returned, the <see cref="M:Terraria.ModLoader.ModItem.CanConsumeAmmo(Terraria.Item,Terraria.Player)"/>, <see cref="M:Terraria.ModLoader.ModItem.CanBeConsumedAsAmmo(Terraria.Item,Terraria.Player)"/>, <see cref="M:Terraria.ModLoader.ModItem.OnConsumeAmmo(Terraria.Item,Terraria.Player)"/>, and <see cref="M:Terraria.ModLoader.ModItem.OnConsumedAsAmmo(Terraria.Item,Terraria.Player)"/> hooks are never called.
            </summary>
            <param name="weapon">The weapon attempting to select the ammo.</param>
            <param name="player">The player which the weapon and this potential ammo belong to.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanConsumeAmmo(Terraria.Item,Terraria.Player)">
            <summary>
            Whether or not the given ammo item will be consumed by this weapon.<br></br>
            By default, returns true; return false to prevent ammo consumption.<br></br>
            If false is returned, the <see cref="M:Terraria.ModLoader.ModItem.OnConsumeAmmo(Terraria.Item,Terraria.Player)"/> and <see cref="M:Terraria.ModLoader.ModItem.OnConsumedAsAmmo(Terraria.Item,Terraria.Player)"/> hooks are never called.
            </summary>
            <param name="ammo">The ammo that the weapon is attempting to consume.</param>
            <param name="player">The player which this weapon and the ammo belong to.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanBeConsumedAsAmmo(Terraria.Item,Terraria.Player)">
            <summary>
            Whether or not this ammo item will be consumed by the given weapon.<br></br>
            By default, returns true; return false to prevent ammo consumption.<br></br>
            If false is returned, the <see cref="M:Terraria.ModLoader.ModItem.OnConsumeAmmo(Terraria.Item,Terraria.Player)"/> and <see cref="M:Terraria.ModLoader.ModItem.OnConsumedAsAmmo(Terraria.Item,Terraria.Player)"/> hooks are never called.
            </summary>
            <param name="weapon">The weapon attempting to consume the ammo.</param>
            <param name="player">The player which the weapon and this ammo belong to.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnConsumeAmmo(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when the given ammo is consumed by this weapon.<br></br>
            Called before the ammo stack is reduced, and is never called if the ammo isn't consumed in the first place.
            </summary>
            <param name="ammo">The ammo that this weapon is currently using.</param>
            <param name="player">The player which this weapon and the ammo belong to.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnConsumedAsAmmo(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to make things happen when this ammo is consumed by the given weapon.<br></br>
            Called before the ammo stack is reduced, and is never called if the ammo isn't consumed in the first place.
            </summary>
            <param name="weapon">The weapon that is currently using this ammo.</param>
            <param name="player">The player which the weapon and this ammo belong to.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanShoot(Terraria.Player)">
            <summary>
            Allows you to prevent this item from shooting a projectile on use. Returns true by default.
            </summary>
            <param name="player"> The player using the item. </param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyShootStats(Terraria.Player,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Int32@,System.Int32@,System.Single@)">
            <summary>
            Allows you to modify the position, velocity, type, damage and/or knockback of a projectile being shot by this item.<br/>
            These parameters will be provided to <see cref="M:Terraria.ModLoader.ModItem.Shoot(Terraria.Player,Terraria.DataStructures.EntitySource_ItemUse_WithAmmo,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Single)"/> where the projectile will actually be spawned.
            </summary>
            <param name="player"> The player using the item. </param>
            <param name="position"> The center position of the projectile. </param>
            <param name="velocity"> The velocity of the projectile. </param>
            <param name="type"> The ID of the projectile. </param>
            <param name="damage"> The damage of the projectile. </param>
            <param name="knockback"> The knockback of the projectile. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.Shoot(Terraria.Player,Terraria.DataStructures.EntitySource_ItemUse_WithAmmo,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Single)">
            <summary>
            Allows you to modify this item's shooting mechanism. Return false to prevent vanilla's shooting code from running. Returns true by default.<br/>
            This method is called after the <see cref="M:Terraria.ModLoader.ModItem.ModifyShootStats(Terraria.Player,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Int32@,System.Int32@,System.Single@)"/> hook has had a chance to adjust the spawn parameters.
            </summary>
            <param name="player"> The player using the item. </param>
            <param name="source"> The projectile source's information. </param>
            <param name="position"> The center position of the projectile. </param>
            <param name="velocity"> The velocity of the projectile. </param>
            <param name="type"> The ID of the projectile. </param>
            <param name="damage"> The damage of the projectile. </param>
            <param name="knockback"> The knockback of the projectile. </param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseItemHitbox(Terraria.Player,Microsoft.Xna.Framework.Rectangle@,System.Boolean@)">
            <summary>
            Changes the hitbox of this melee weapon when it is used.
            </summary>
            <param name="player">The player.</param>
            <param name="hitbox">The hitbox.</param>
            <param name="noHitbox">if set to <c>true</c> [no hitbox].</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.MeleeEffects(Terraria.Player,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to give this melee weapon special effects, such as creating light or dust.
            </summary>
            <param name="player">The player.</param>
            <param name="hitbox">The hitbox.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanCatchNPC(Terraria.NPC,Terraria.Player)">
            <summary>
            Allows you to determine whether this item can catch the given NPC.<br></br>
            Return true or false to say the given NPC can or cannot be caught, respectively, regardless of vanilla rules.<br></br>
            Returns null by default, which allows vanilla's NPC catching rules to decide the target's fate.<br></br>
            If this returns false, <see cref="M:Terraria.ModLoader.CombinedHooks.OnCatchNPC(Terraria.Player,Terraria.NPC,Terraria.Item,System.Boolean)"/> is never called.<br></br><br></br>
            NOTE: this does not classify the given item as an NPC-catching tool, which is necessary for catching NPCs in the first place.<br></br>
            To do that, you will need to use the "CatchingTool" set in ItemID.Sets.
            </summary>
            <param name="target">The NPC the player is trying to catch.</param>
            <param name="player">The player attempting to catch the NPC.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnCatchNPC(Terraria.NPC,Terraria.Player,System.Boolean)">
            <summary>
            Allows you to make things happen when this item attempts to catch the given NPC.
            </summary>
            <param name="npc">The NPC which the player attempted to catch.</param>
            <param name="player">The player attempting to catch the given NPC.</param>
            <param name="failed">Whether or not the given NPC has been successfully caught.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyItemScale(Terraria.Player,System.Single@)">
            <summary>
            Allows you to dynamically modify this item's size for the given player, similarly to the effect of the Titan Glove.
            <br/><br/> <b>Do not</b> modify <see cref="F:Terraria.Item.scale"/>, modify the <paramref name="scale"/> parameter.
            </summary>
            <param name="player">The player wielding this item.</param>
            <param name="scale">
            The scale multiplier to be applied to this item.<br></br>
            Will be 1.1 if the Titan Glove is equipped, and 1 otherwise.
            </param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanHitNPC(Terraria.Player,Terraria.NPC)">
            <summary>
            Allows you to determine whether this melee weapon can hit the given NPC when swung. Return true to allow hitting the target, return false to block this weapon from hitting the target, and return null to use the vanilla code for whether the target can be hit. Returns null by default.
            </summary>
            <param name="player">The player.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanMeleeAttackCollideWithNPC(Microsoft.Xna.Framework.Rectangle,Terraria.Player,Terraria.NPC)">
            <summary>
            Allows you to determine whether a melee weapon can collide with the given NPC when swung. <br/>
            Use <see cref="M:Terraria.ModLoader.ModItem.CanHitNPC(Terraria.Player,Terraria.NPC)"/> instead for Flymeal-type effects.
            </summary>
            <param name="meleeAttackHitbox">Hitbox of melee attack.</param>
            <param name="player">The player wielding this item.</param>
            <param name="target">The target npc.</param>
            <returns>
            Return true to allow colliding with target, return false to block the weapon from colliding with target, and return null to use the vanilla code for whether the target can be colliding. Returns null by default.
            </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyHitNPC(Terraria.Player,Terraria.NPC,Terraria.NPC.HitModifiers@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that this melee weapon does to an NPC. <br/>
            This method is only called on the on the client of the player holding the weapon. <br/>
            </summary>
            <param name="player">The player.</param>
            <param name="target">The target.</param>
            <param name="modifiers">The strike.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnHitNPC(Terraria.Player,Terraria.NPC,Terraria.NPC.HitInfo,System.Int32)">
            <summary>
            Allows you to create special effects when this melee weapon hits an NPC (for example how the Pumpkin Sword creates pumpkin heads). <br/>
            This method is only called on the on the client of the player holding the weapon. <br/>
            </summary>
            <param name="player">The player.</param>
            <param name="target">The target.</param>
            <param name="hit">The strike.</param>
            <param name="damageDone">The actual damage dealt to/taken by the NPC.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanHitPvp(Terraria.Player,Terraria.Player)">
            <summary>
            Allows you to determine whether this melee weapon can hit the given opponent player when swung. Return false to block this weapon from hitting the target. Returns true by default.
            </summary>
            <param name="player">The player.</param>
            <param name="target">The target.</param>
            <returns>
              <c>true</c> if this instance [can hit PVP] the specified player; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyHitPvp(Terraria.Player,Terraria.Player,Terraria.Player.HurtModifiers@)">
            <summary>
            Allows you to modify the damage, etc., that this melee weapon does to a player. <br/>
            Called on local, server and remote clients. <br/>
            </summary>
            <param name="player">The player.</param>
            <param name="target">The target.</param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnHitPvp(Terraria.Player,Terraria.Player,Terraria.Player.HurtInfo)">
            <summary>
            Allows you to create special effects when this melee weapon hits a player. <br/>
            Called on local, server and remote clients. <br/>
            </summary>
            <param name="player">The player.</param>
            <param name="target">The target.</param>
            <param name="hurtInfo"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseItem(Terraria.Player)">
            <summary>
            Allows you to make things happen when this item is used. The return value controls whether or not ApplyItemTime will be called for the player.
            <br/> Return true if the item actually did something, to force itemTime.
            <br/> Return false to keep itemTime at 0.
            <br/> Return null for vanilla behavior.
            <para/> Runs on all clients and server. Use <code>if (player.whoAmI == Main.myPlayer)</code> and <code>if (Main.netMode == NetmodeID.??)</code> if appropriate.
            </summary>
            <param name="player">The player.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseAnimation(Terraria.Player)">
            <summary>
            Allows you to make things happen when this item's use animation starts.
            <para/> Runs on all clients and server. Use <code>if (player.whoAmI == Main.myPlayer)</code> and <code>if (Main.netMode == NetmodeID.??)</code> if appropriate.
            </summary>
            <param name="player"> The player. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ConsumeItem(Terraria.Player)">
            <summary>
            If this item is consumable and this returns true, then this item will be consumed upon usage. Returns true by default.
            If false is returned, the OnConsumeItem hook is never called.
            </summary>
            <param name="player">The player.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnConsumeItem(Terraria.Player)">
            <summary>
            Allows you to make things happen when this item is consumed.
            Called before the item stack is reduced.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UseItemFrame(Terraria.Player)">
            <summary>
            Allows you to modify the player's animation when this item is being used.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.HoldItemFrame(Terraria.Player)">
            <summary>
            Allows you to modify the player's animation when the player is holding this item.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.AltFunctionUse(Terraria.Player)">
            <summary>
            Allows you to make this item usable by right-clicking. Returns false by default. When this item is used by right-clicking, player.altFunctionUse will be set to 2.
            </summary>
            <param name="player">The player.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UpdateInventory(Terraria.Player)">
            <summary>
            Allows you to make things happen when this item is in the player's inventory. This should NOT be used for information accessories;
            use <seealso cref="M:Terraria.ModLoader.ModItem.UpdateInfoAccessory(Terraria.Player)"/> for those instead.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UpdateInfoAccessory(Terraria.Player)">
            <summary>
            Allows you to set information accessory fields with the passed in player argument. This hook should only be used for information
            accessory fields such as the Radar, Lifeform Analyzer, and others. Using it for other fields will likely cause weird side-effects.
            </summary>
            <param name="player"> The player to be affected the information accessory. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UpdateEquip(Terraria.Player)">
            <summary>
            Allows you to give effects to this armor or accessory, such as increased damage.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UpdateAccessory(Terraria.Player,System.Boolean)">
            <summary>
            Allows you to give effects to this accessory. The hideVisual parameter is whether the player has marked the accessory slot to be hidden from being drawn on the player.
            </summary>
            <param name="player">The player.</param>
            <param name="hideVisual">if set to <c>true</c> the accessory is hidden.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UpdateVanity(Terraria.Player)">
            <summary>
            Allows you to give effects to this accessory when equipped in a vanity slot. Vanilla uses this for boot effects, wings and merman/werewolf visual flags
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.EquipFrameEffects(Terraria.Player,Terraria.ModLoader.EquipType)">
            <summary>
            Allows you to create special effects (such as dust) when this item's equipment texture of the given equipment type is displayed on the player. Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="player">The player.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.IsArmorSet(Terraria.Item,Terraria.Item,Terraria.Item)">
            <summary>
            Returns whether or not the head armor, body armor, and leg armor make up a set. If this returns true, then this item's UpdateArmorSet method will be called. Returns false by default.
            </summary>
            <param name="head">The head.</param>
            <param name="body">The body.</param>
            <param name="legs">The legs.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UpdateArmorSet(Terraria.Player)">
            <summary>
            Allows you to give set bonuses to the armor set that this armor is in. Set player.setBonus to a string for the bonus description.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.IsVanitySet(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns whether or not the head armor, body armor, and leg armor textures make up a set. This hook is used for the PreUpdateVanitySet, UpdateVanitySet, and ArmorSetShadows hooks. By default, this will return the same value as the IsArmorSet hook (passing the equipment textures' associated items as parameters), so you will not have to use this hook unless you want vanity effects to be entirely separate from armor sets. Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="head">The head.</param>
            <param name="body">The body.</param>
            <param name="legs">The legs.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PreUpdateVanitySet(Terraria.Player)">
            <summary>
            Allows you to create special effects (such as the necro armor's hurt noise) when the player wears this item's vanity set. This hook is called regardless of whether the player is frozen in any way. Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.UpdateVanitySet(Terraria.Player)">
            <summary>
            Allows you to create special effects (such as dust) when the player wears this item's vanity set. This hook will only be called if the player is not frozen in any way. Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ArmorSetShadows(Terraria.Player)">
            <summary>
            Allows you to determine special visual effects this vanity set has on the player without having to code them yourself. Note that this hook is only ever called through this item's associated equipment texture. Use the player.armorEffectDraw bools to activate the desired effects.
            </summary>
            <example><code>player.armorEffectDrawShadow = true;</code></example>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.SetMatch(System.Boolean,System.Int32@,System.Boolean@)">
            <summary>
            Allows you to modify the equipment that the player appears to be wearing. This hook will only be called for body armor and leg armor. Note that equipSlot is not the same as the item type of the armor the player will appear to be wearing. Worn equipment has a separate set of IDs. You can find the vanilla equipment IDs by looking at the headSlot, bodySlot, and legSlot fields for items, and modded equipment IDs by looking at EquipLoader.
            If this hook is called on body armor, equipSlot allows you to modify the leg armor the player appears to be wearing. If you modify it, make sure to set robes to true. If this hook is called on leg armor, equipSlot allows you to modify the leg armor the player appears to be wearing, and the robes parameter is useless.
            Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="male">if set to <c>true</c> [male].</param>
            <param name="equipSlot">The equip slot.</param>
            <param name="robes">if set to <c>true</c> [robes].</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanRightClick">
            <summary>
            Returns whether or not this item does something when it is right-clicked in the inventory. Returns false by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.RightClick(Terraria.Player)">
            <summary>
            Allows you to make things happen when this item is right-clicked in the inventory.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyItemLoot(Terraria.ModLoader.ItemLoot)">
            <summary>
            Allows you to add and modify the loot items that spawn from bag items when opened.
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-NPC-Drops-and-Loot-1.4">Basic NPC Drops and Loot 1.4 Guide</see> explains how to use the <see cref="M:Terraria.ModLoader.ModNPC.ModifyNPCLoot(Terraria.ModLoader.NPCLoot)"/> hook to modify NPC loot as well as this hook. A common usage is to use this hook and <see cref="M:Terraria.ModLoader.ModNPC.ModifyNPCLoot(Terraria.ModLoader.NPCLoot)"/> to edit non-expert exclusive drops for bosses.
            <br/> This hook only runs once during mod loading, any dynamic behavior must be contained in the rules themselves.
            </summary>
            <param name="itemLoot">A reference to the item drop database for this item type</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanStack(Terraria.Item)">
            <summary>
            Allows you to decide if this item is allowed to stack with another of its type.
            <br/>This is only called when attempting to stack with an item of the same type.
            <br/>This is not called for coins in inventory/UI.
            <br/>This covers all scenarios, if you just need to change in-world stacking behavior, use <see cref="M:Terraria.ModLoader.ModItem.CanStackInWorld(Terraria.Item)"/>.
            </summary>
            <param name="source">The item instance being stacked onto this item</param>
            <returns>Whether or not the item is allowed to stack</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanStackInWorld(Terraria.Item)">
            <summary>
            Allows you to decide if this item is allowed to stack with another of its type in the world.
            <br/>This is only called when attempting to stack with an item of the same type.
            </summary>
            <param name="source">The item instance being stacked onto this item</param>
            <returns>Whether or not the item is allowed to stack</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnStack(Terraria.Item,System.Int32)">
            <summary>
            Allows you to make things happen when items stack together.<br/>
            This hook is called on item being stacked onto from <paramref name="source"/> and before the items are transferred
            </summary>
            <param name="source">The item instance being stacked onto this item</param>
            <param name="numToTransfer">The quantity of <paramref name="source"/> that will be transferred to this item</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.SplitStack(Terraria.Item,System.Int32)">
            <summary>
            Allows you to make things happen when an item stack is split.  This hook is called before the stack values are modified.<br/>
            This item is the item clone being stacked onto from <paramref name="source"/> and always has a stack of zero.
            </summary>
            <param name="source">The original item that will have it's stack reduced.</param>
            <param name="numToTransfer">The quantity of <paramref name="source"/> that will be transferred to this item</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ReforgePrice(System.Int32@,System.Boolean@)">
            <summary>
            Returns if the normal reforge pricing is applied.
            If true or false is returned and the price is altered, the price will equal the altered price.
            The passed reforge price equals the Item.value. Vanilla pricing will apply 20% discount if applicable and then price the reforge at a third of that value.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanReforge">
            <summary>
            This hook gets called when the player clicks on the reforge button and can afford the reforge.
            Returns whether the reforge will take place. If false is returned by this or any GlobalItem, the item will not be reforged, the cost to reforge will not be paid, and PreRefoge and PostReforge hooks will not be called.
            Reforging preserves modded data on the item.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PreReforge">
            <summary>
            This hook gets called immediately before an item gets reforged by the Goblin Tinkerer.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PostReforge">
            <summary>
            This hook gets called immediately after an item gets reforged by the Goblin Tinkerer.
            Useful for modifying modded data based on the reforge result.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.DrawArmorColor(Terraria.Player,System.Single,Microsoft.Xna.Framework.Color@,System.Int32@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify the colors in which this armor and surrounding accessories are drawn, in addition to which glow mask and in what color is drawn. Note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="drawPlayer">The draw player.</param>
            <param name="shadow">The shadow.</param>
            <param name="color">The color.</param>
            <param name="glowMask">The glow mask.</param>
            <param name="glowMaskColor">Color of the glow mask.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ArmorArmGlowMask(Terraria.Player,System.Single,System.Int32@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify which glow mask and in what color is drawn on the player's arms. Note that this is only called for body armor. Also note that this hook is only ever called through this item's associated equipment texture.
            </summary>
            <param name="drawPlayer">The draw player.</param>
            <param name="shadow">The shadow.</param>
            <param name="glowMask">The glow mask.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.VerticalWingSpeeds(Terraria.Player,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to modify the speeds at which you rise and fall when these wings are equipped.
            </summary>
            <param name="player">The player.</param>
            <param name="ascentWhenFalling">The ascent when falling.</param>
            <param name="ascentWhenRising">The ascent when rising.</param>
            <param name="maxCanAscendMultiplier">The maximum can ascend multiplier.</param>
            <param name="maxAscentMultiplier">The maximum ascent multiplier.</param>
            <param name="constantAscend">The constant ascend.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.HorizontalWingSpeeds(Terraria.Player,System.Single@,System.Single@)">
            <summary>
            Allows you to modify these wing's horizontal flight speed and acceleration.
            </summary>
            <param name="player">The player.</param>
            <param name="speed">The speed.</param>
            <param name="acceleration">The acceleration.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.WingUpdate(Terraria.Player,System.Boolean)">
            <summary>
            Allows for Wings to do various things while in use. "inUse" is whether or not the jump button is currently pressed. Called when these wings visually appear on the player. Use to animate wings, create dusts, invoke sounds, and create lights. Note that this hook is only ever called through this item's associated equipment texture. False will keep everything the same. True, you need to handle all animations in your own code.
            </summary>
            <param name="player">The player.</param>
            <param name="inUse">if set to <c>true</c> [in use].</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.Update(System.Single@,System.Single@)">
            <summary>
            Allows you to customize this item's movement when lying in the world. Note that this will not be called if this item is currently being grabbed by a player.
            </summary>
            <param name="gravity">The gravity.</param>
            <param name="maxFallSpeed">The maximum fall speed.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PostUpdate">
            <summary>
            Allows you to make things happen when this item is lying in the world. This will always be called, even when it is being grabbed by a player. This hook should be used for adding light, or for increasing the age of less valuable items.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.GrabRange(Terraria.Player,System.Int32@)">
            <summary>
            Allows you to modify how close this item must be to the player in order to move towards the player.
            </summary>
            <param name="player">The player.</param>
            <param name="grabRange">The grab range.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.GrabStyle(Terraria.Player)">
            <summary>
            Allows you to modify the way this item moves towards the player. Return true if you override this hook; returning false will allow the vanilla grab style to take place. Returns false by default.
            </summary>
            <param name="player">The player.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanPickup(Terraria.Player)">
            <summary>
            Allows you to determine whether or not the item can be picked up
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnPickup(Terraria.Player)">
            <summary>
            Allows you to make special things happen when the player picks up this item. Return false to stop the item from being added to the player's inventory; returns true by default.
            </summary>
            <param name="player">The player.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ItemSpace(Terraria.Player)">
            <summary>
            Return true to specify that the item can be picked up despite not having enough room in inventory. Useful for something like hearts or experience items. Use in conjunction with OnPickup to actually consume the item and handle it.
            </summary>
            <param name="player">The player.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.GetAlpha(Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to determine the color and transparency in which this item is drawn. Return null to use the default color (normally light color). Returns null by default.
            </summary>
            <param name="lightColor">Color of the light.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PreDrawInWorld(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single@,System.Single@,System.Int32)">
            <summary>
            Allows you to draw things behind this item, or to modify the way this item is drawn in the world. Return false to stop the game from drawing the item (useful if you're manually drawing the item). Returns true by default.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="lightColor">Color of the light.</param>
            <param name="alphaColor">Color of the alpha.</param>
            <param name="rotation">The rotation.</param>
            <param name="scale">The scale.</param>
            <param name="whoAmI">The who am i.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PostDrawInWorld(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Single,System.Single,System.Int32)">
            <summary>
            Allows you to draw things in front of this item. This method is called even if PreDrawInWorld returns false.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="lightColor">Color of the light.</param>
            <param name="alphaColor">Color of the alpha.</param>
            <param name="rotation">The rotation.</param>
            <param name="scale">The scale.</param>
            <param name="whoAmI">The who am i.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PreDrawInInventory(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Allows you to draw things behind this item in the inventory. Return false to stop the game from drawing the item (useful if you're manually drawing the item). Returns true by default.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="position">The position.</param>
            <param name="frame">The frame.</param>
            <param name="drawColor">Color of the draw.</param>
            <param name="itemColor">Color of the item.</param>
            <param name="origin">The origin.</param>
            <param name="scale">The scale.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PostDrawInInventory(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Allows you to draw things in front of this item in the inventory. This method is called even if PreDrawInInventory returns false.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="position">The position.</param>
            <param name="frame">The frame.</param>
            <param name="drawColor">Color of the draw.</param>
            <param name="itemColor">Color of the item.</param>
            <param name="origin">The origin.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.HoldoutOffset">
            <summary>
            Allows you to determine the offset of this item's sprite when used by the player. This is only used for items with a useStyle of 5 that aren't staves. Return null to use the vanilla holdout offset; returns null by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.HoldoutOrigin">
            <summary>
            Allows you to determine the point on this item's sprite that the player holds onto when using this item. The origin is from the bottom left corner of the sprite. This is only used for staves with a useStyle of 5. Return null to use the vanilla holdout origin (zero); returns null by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanEquipAccessory(Terraria.Player,System.Int32,System.Boolean)">
            <summary>
            Allows you to disallow the player from equipping this accessory. Return false to disallow equipping this accessory. Returns true by default.
            </summary>
            <param name="player">The player.</param>
            <param name="slot">The inventory slot that the item is attempting to occupy.</param>
            <param name="modded">If the inventory slot index is for modded slots.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CanAccessoryBeEquippedWith(Terraria.Item,Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to prevent similar accessories from being equipped multiple times. For example, vanilla Wings.
            Return false to have the currently equipped item swapped with the incoming item - ie both can't be equipped at same time.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ExtractinatorUse(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Allows you to modify what item, and in what quantity, is obtained when any item belonging to the extractinator type corresponding to this item is fed into the Extractinator.
            <br/> This method is only called if <c>ItemID.Sets.ExtractinatorMode[Item.type] = Item.type;</c> in used in SetStaticDefaults. Other items belonging to the same extractinator group should use <c>ItemID.Sets.ExtractinatorMode[Item.type] = ModContent.ItemType&lt;IconicItemForThisExtractinatorType&gt;();</c> to indicate that they share the same extractinator output pool and to avoid code duplication.
            <br/> By default the parameters will be set to the output of feeding Silt/Slush into the Extractinator.
            <br/> Use <paramref name="extractinatorBlockType"/> to provide different behavior for <see cref="F:Terraria.ID.TileID.ChlorophyteExtractinator"/> if desired.
            <br/> If the Chlorophyte Extractinator item swapping behavior is desired, see the example in ExampleAdvancedFlail.cs.
            <br/> 
            <br/> This method is not instanced.
            </summary>
            <param name="extractinatorBlockType">Which Extractinator tile is being used, <see cref="F:Terraria.ID.TileID.Extractinator"/> or <see cref="F:Terraria.ID.TileID.ChlorophyteExtractinator"/>.</param>
            <param name="resultType">Type of the result.</param>
            <param name="resultStack">The result stack.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CaughtFishStack(System.Int32@)">
            <summary>
            Allows you to determine how many of this item a player obtains when the player fishes this item.
            </summary>
            <param name="stack">The stack.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.IsQuestFish">
            <summary>
            Whether or not the Angler can ever randomly request this type of item for his daily quest. Returns false by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.IsAnglerQuestAvailable">
            <summary>
            Whether or not specific conditions have been satisfied for the Angler to be able to request this item. (For example, Hardmode.) Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.AnglerQuestChat(System.String@,System.String@)">
            <summary>
            Allows you to set what the Angler says when he requests for this item. The description parameter is his dialogue, and catchLocation should be set to "\n(Caught at [location])".
            </summary>
            <param name="description">The description.</param>
            <param name="catchLocation">The catch location.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.SaveData(Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to save custom data for this item.
            <br/>
            <br/><b>NOTE:</b> The provided tag is always empty by default, and is provided as an argument only for the sake of convenience and optimization.
            <br/><b>NOTE:</b> Try to only save data that isn't default values.
            </summary>
            <param name="tag"> The TagCompound to save data into. Note that this is always empty by default, and is provided as an argument only for the sake of convenience and optimization. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.LoadData(Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to load custom data that you have saved for this item.
            <br/><b>Try to write defensive loading code that won't crash if something's missing.</b>
            </summary>
            <param name="tag"> The TagCompound to load data from. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.NetSend(System.IO.BinaryWriter)">
            <summary>
            Allows you to send custom data for this item between client and server, which will be handled in NetReceive.
            <br/>Called whenever an item container syncs its contents (various MessageIDs and sources), or <see cref="F:Terraria.ID.MessageID.SyncItem"/> and <see cref="F:Terraria.ID.MessageID.InstancedItem"/> are successfully sent, for example when the item is dropped into the world.
            <br/>Can be called on both server and client.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.NetReceive(System.IO.BinaryReader)">
            <summary>
            Receives the custom data sent in NetSend.
            <br/>Called whenever an item container syncs its contents (various MessageIDs and sources), or <see cref="F:Terraria.ID.MessageID.SyncItem"/> and <see cref="F:Terraria.ID.MessageID.InstancedItem"/> are successfully received.
            <br/>Can be called on both server and client.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.AddRecipes">
            <summary>
            Override this method to add <see cref="T:Terraria.Recipe"/>s to the game.<br/>
            Do note that this will be called for every instance of the overriding ModItem class that is added to the game.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Recipes">Basic Recipes Guide</see> teaches how to add new recipes to the game and how to manipulate existing recipes.<br/>
            To create a recipe resulting in this item, use <see cref="M:Terraria.ModLoader.ModItem.CreateRecipe(System.Int32)"/>.<br/>
            To create a recipe using this item as an ingredient, use <see cref="M:Terraria.Recipe.Create(System.Int32,System.Int32)"/> and then pass in <c>this</c> or <c>Type</c> into <see cref="M:Terraria.Recipe.AddIngredient(Terraria.ModLoader.ModItem,System.Int32)"/> or <see cref="M:Terraria.Recipe.AddIngredient(System.Int32,System.Int32)"/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.OnCraft(Terraria.Recipe)">
            <summary>
            Allows you to make anything happen when the player crafts this item using the given recipe.
            </summary>
            <param name="recipe">The recipe that was used to craft this item.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PreDrawTooltip(System.Collections.ObjectModel.ReadOnlyCollection{Terraria.ModLoader.TooltipLine},System.Int32@,System.Int32@)">
            <summary>
            Allows you to do things before this item's tooltip is drawn.
            </summary>
            <param name="lines">The tooltip lines for this item</param>
            <param name="x">The top X position for this tooltip. It is where the first line starts drawing</param>
            <param name="y">The top Y position for this tooltip. It is where the first line starts drawing</param>
            <returns>Whether or not to draw this tooltip</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PostDrawTooltip(System.Collections.ObjectModel.ReadOnlyCollection{Terraria.ModLoader.DrawableTooltipLine})">
            <summary>
            Allows you to do things after this item's tooltip is drawn. The lines contain draw information as this is ran after drawing the tooltip.
            </summary>
            <param name="lines">The tooltip lines for this item</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PreDrawTooltipLine(Terraria.ModLoader.DrawableTooltipLine,System.Int32@)">
            <summary>
            Allows you to do things before a tooltip line of this item is drawn. The line contains draw info.
            </summary>
            <param name="line">The line that would be drawn</param>
            <param name="yOffset">The Y offset added for next tooltip lines</param>
            <returns>Whether or not to draw this tooltip line</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.PostDrawTooltipLine(Terraria.ModLoader.DrawableTooltipLine)">
            <summary>
            Allows you to do things after a tooltip line of this item is drawn. The line contains draw info.
            </summary>
            <param name="line">The line that was drawn</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.ModifyTooltips(System.Collections.Generic.List{Terraria.ModLoader.TooltipLine})">
            <summary>
            Allows you to modify all the tooltips that display for this item. See here for information about TooltipLine.
            </summary>
            <param name="tooltips">The tooltips.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModItem.CreateRecipe(System.Int32)">
            <summary>
            Creates a recipe resulting this ModItem. The <paramref name="amount"/> dictates the resulting stack. This method only creates the recipe, it does not register it into the game. Call this at the very beginning when creating a new recipe.
            </summary>
            <param name="amount">The stack -> how many result items given when the recipe is crafted. (eg. 1 wood -> 4 wood platform)</param>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.ModKeybind">
            <summary>
            Represents a loaded input binding. It is suggested to access the keybind status only in ModPlayer.ProcessTriggers.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModKeybind.GetAssignedKeys(Terraria.GameInput.InputMode)">
            <summary>
            Gets the currently assigned keybindings. Useful for prompts, tooltips, informing users.
            </summary>
            <param name="mode"> The InputMode. Choose between InputMode.Keyboard and InputMode.XBoxGamepad </param>
        </member>
        <member name="P:Terraria.ModLoader.ModKeybind.Current">
            <summary>
            Returns true if this keybind is pressed currently. Useful for creating a behavior that relies on the keybind being held down.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModKeybind.JustPressed">
            <summary>
            Returns true if this keybind has just been pressed this update. This is a fire-once-per-press behavior.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModKeybind.JustReleased">
            <summary>
            Returns true if this keybind has just been released this update.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModKeybind.Old">
            <summary>
            Returns true if this keybind has been pressed during the previous update.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModLoader">
            <summary>
            This serves as the central class which loads mods. It contains many static fields and methods related to mods and their contents.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModLoader.GetMod(System.String)">
            <summary> Gets the instance of the Mod with the specified name. This will throw an exception if the mod cannot be found. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
        </member>
        <member name="M:Terraria.ModLoader.ModLoader.TryGetMod(System.String,Terraria.ModLoader.Mod@)">
            <summary> Safely attempts to get the instance of the Mod with the specified name. </summary>
            <returns> Whether or not the requested instance has been found. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModLoader.HasMod(System.String)">
            <summary> Safely checks whether or not a mod with the specified internal name is currently loaded. </summary>
            <returns> Whether or not a mod with the provided internal name has been found. </returns>
        </member>
        <member name="F:Terraria.ModLoader.ModLoader._enabledMods">
            <summary>A cached list of enabled mods (not necessarily currently loaded or even installed), mirroring the enabled.json file.</summary>
        </member>
        <member name="M:Terraria.ModLoader.ModLoader.BuildGlobalHook``2(``1[]@,System.Collections.Generic.IList{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Allows type inference on T and F
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModMapLayer">
            <summary>
            This class is used to facilitate easily drawing icons and other things over the map. Pylons and spawn/bed icons are examples of vanilla map layers. Use <see cref="M:Terraria.ModLoader.ModSystem.PreDrawMapIconOverlay(System.Collections.Generic.IReadOnlyList{Terraria.Map.IMapLayer},Terraria.Map.MapOverlayDrawContext)"/> to selectively hide vanilla layers if needed.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMapLayer.Draw(Terraria.Map.MapOverlayDrawContext@,System.String@)">
            <summary>
            This method is called when this MapLayer is to be drawn. Map layers are drawn after the map itself is drawn. Use <see cref="M:Terraria.Map.MapOverlayDrawContext.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,Terraria.DataStructures.SpriteFrame,System.Single,System.Single,Terraria.UI.Alignment)"/> as described in ExampleMod and in vanilla examples for full compatibility and simplicity of code.
            </summary>
            <param name="context">Contains the scaling and positional data of the map being drawn. You should use the MapOverlayDrawContext.Draw method for all drawing</param>
            <param name="text">The mouse hover text. Assign a value typically if the user is hovering over something you draw</param>
        </member>
        <member name="T:Terraria.ModLoader.ModMenu">
            <summary>
            A class that is used to customize aesthetic features of the main menu, such as the logo, background and music.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMenu.Logo">
            <summary>
            The logo texture shown when this ModMenu is active. If not overridden, it will use the tModLoader logo.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMenu.SunTexture">
            <summary>
            The sun texture shown when this ModMenu is active. If not overridden, it will use the vanilla sun.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMenu.MoonTexture">
            <summary>
            The moon texture shown when this ModMenu is active. If not overridden, it will use the vanilla moon.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMenu.Music">
            <summary>
            The music that will be played while this ModMenu is active. If not overridden, it will use the vanilla music.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMenu.MenuBackgroundStyle">
            <summary>
            The background style that will be used when this ModMenu is active. If not overridden, it will use the vanilla background.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMenu.IsAvailable">
            <summary>
            Controls whether this ModMenu will be available to switch to. Useful if you want this menu to only be available at specific times.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMenu.DisplayName">
            <summary>
            Controls the name that shows up at the base of the screen when this ModMenu is active. If not overridden, it will use this mod's display name.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMenu.OnSelected">
            <summary>
            Called when this ModMenu is selected. Set the state of the UserInterface to a given UIState to make that UIState appear on the main menu.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMenu.OnDeselected">
            <summary>
            Called when this ModMenu is deselected.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMenu.Update(System.Boolean)">
            <summary>
            Called when this ModMenu's logic is updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMenu.PreDrawLogo(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2@,System.Single@,System.Single@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Called just before the logo is drawn, and allows you to modify some of the parameters of the logo draw code.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMenu.PostDrawLogo(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,Microsoft.Xna.Framework.Color)">
            <summary>
            Called just after the logo is drawn, and gives the values of some of the parameters of the logo draw code.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModMount">
            <summary>
            This class serves as a place for you to place all your properties and hooks for each mount. Create instances of ModMoundData (preferably overriding this class) to pass as parameters to Mod.AddMount.
            Only one instance of ModMount will exist for each mount, so storing player specific data on the ModMount is not good.
            Modders can use player.mount._mountSpecificData or a ModPlayer class to store player specific data relating to a mount. Use SetMount to assign these fields.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMount.MountData">
            <summary>
            The vanilla MountData object that is controlled by this ModMount.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMount.Type">
            <summary>
            The index of this ModMount in the Mount.mounts array.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModMount.Texture">
            <summary>
            The file name of this type's texture file in the mod loader's file space.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.SetStaticDefaults">
            <summary>
            Allows you to modify the properties after initial loading has completed.
            This is where you would set properties of this type of mount.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.JumpHeight(Terraria.Player,System.Int32@,System.Single)">
            <summary>
            Allows you to modify the mount's jump height based on its state.
            </summary>
            <param name="mountedPlayer"></param>
            <param name="jumpHeight"></param>
            <param name="xVelocity"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.JumpSpeed(Terraria.Player,System.Single@,System.Single)">
            <summary>
            Allows you to modify the mount's jump speed based on its state.
            </summary>
            <param name="mountedPlayer"></param>
            <param name="jumpSeed"></param>
            <param name="xVelocity"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.UpdateEffects(Terraria.Player)">
            <summary>
            Allows you to make things happen when mount is used (creating dust etc.) Can also be used for mount special abilities.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.UpdateFrame(Terraria.Player,System.Int32,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Allows for manual updating of mount frame. Return false to stop the default frame behavior. Returns true by default.
            </summary>
            <param name="mountedPlayer"></param>
            <param name="state"></param>
            <param name="velocity"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.UseAbility(Terraria.Player,Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            Allows you to make things happen while the mouse is pressed while the mount is active. Called each tick the mouse is pressed.
            </summary>
            <param name="player"></param>
            <param name="mousePosition"></param>
            <param name="toggleOn">Does nothing yet</param>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.AimAbility(Terraria.Player,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Allows you to make things happen when the mount ability is aiming (while charging).
            </summary>
            <param name="player"></param>
            <param name="mousePosition"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.SetMount(Terraria.Player,System.Boolean@)">
            <summary>
            Allows you to make things happen when this mount is spawned in. Useful for player-specific initialization, utilizing player.mount._mountSpecificData or a ModPlayer class since ModMount is shared between all players.
            Custom dust spawning logic is also possible via the skipDust parameter.
            </summary>
            <param name="player"></param>
            <param name="skipDust">Set to true to skip the vanilla dust spawning logic</param>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.Dismount(Terraria.Player,System.Boolean@)">
            <summary>
            Allows you to make things happen when this mount is de-spawned. Useful for player-specific cleanup, see SetMount.
            Custom dust spawning logic is also possible via the skipDust parameter.
            </summary>
            <param name="player"></param>
            <param name="skipDust">Set to true to skip the vanilla dust spawning logic</param>
        </member>
        <member name="M:Terraria.ModLoader.ModMount.Draw(System.Collections.Generic.List{Terraria.DataStructures.DrawData},System.Int32,Terraria.Player,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Rectangle@,Microsoft.Xna.Framework.Color@,Microsoft.Xna.Framework.Color@,System.Single@,Microsoft.Xna.Framework.Graphics.SpriteEffects@,Microsoft.Xna.Framework.Vector2@,System.Single@,System.Single)">
            <summary>
            Allows for complete customization of mount drawing. This method will be called once for each supported mount texture layer that exists. Use drawType to conditionally apply changes.
            drawType corresponds to the following: 0: backTexture, 1: backTextureExtra, 2: frontTexture. 3: frontTextureExtra
            Corresponding glow textures, such as backTextureGlow, are paired with their corresponding texture and passed into this method as well.
            Return false if you are manually adding DrawData to playerDrawData to replace the vanilla draw behavior, otherwise tweak ref variables to customize the drawing and add additional DrawData to playerDrawData.
            </summary>
            <param name="playerDrawData"></param>
            <param name="drawType">Corresponds to the following: 0: backTexture, 1: backTextureExtra, 2: frontTexture. 3: frontTextureExtra</param>
            <param name="drawPlayer"></param>
            <param name="texture"></param>
            <param name="glowTexture">The corresponding glow texture, if present</param>
            <param name="drawPosition"></param>
            <param name="frame"></param>
            <param name="drawColor"></param>
            <param name="glowColor"></param>
            <param name="rotation"></param>
            <param name="spriteEffects"></param>
            <param name="drawOrigin"></param>
            <param name="drawScale"></param>
            <param name="shadow"></param>
            <returns></returns>
        </member>
        <member name="F:Terraria.ModLoader.ModNet.IncompatiblePatchVersion">
            <summary>
            Update every time a change is pushed to stable which is incompatible between server and clients. Ignored if not updated each month.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModNPC">
            <summary>
            This class serves as a place for you to place all your properties and hooks for each NPC. Create instances of ModNPC (preferably overriding this class) to pass as parameters to Mod.AddNPC.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.NPC">
            <summary> The NPC object that this ModNPC controls. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.Type">
            <summary> Shorthand for NPC.type; </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.DisplayName">
            <summary> The translations for the display name of this NPC. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.Texture">
            <summary>
            The file name of this type's texture file in the mod loader's file space.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.HeadTexture">
            <summary> The file name of this NPC's head texture file, to be used in autoloading. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.BossHeadTexture">
            <summary> This file name of this NPC's boss head texture file, to be used in autoloading. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.AIType">
            <summary> Determines which type of vanilla NPC this ModNPC will copy the behavior (AI) of. Leave as 0 to not copy any behavior. Defaults to 0. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.AnimationType">
            <summary>
            Determines which type of vanilla NPC this ModNPC will copy the animation/framing logic of, which includes checks to sets such as <seealso cref="F:Terraria.Main.npcFrameCount"/>
            and <seealso cref="F:Terraria.ID.NPCID.Sets.ExtraFramesCount"/>, and others. For example, selecting the Guide's type will copy how many frames, extra frames, and attack frames the
            Guide has, and use those value for animation of this NPC. This is entirely based off of type and not the ModNPC instance itself; so be cautious if you
            change this NPC's type.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.Music">
            <summary> The ID of the music that plays when this NPC is on or near the screen. Defaults to -1, which means music plays normally. </summary>
            Will be superseded by ModSceneEffect. Kept for legacy.
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.SceneEffectPriority">
            <summary> The priority of the music that plays when this NPC is on or near the screen. </summary>
            Will be superseded by ModSceneEffect. Kept for legacy.
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.DrawOffsetY">
            <summary> The vertical offset used for drawing this NPC. Defaults to 0. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.Banner">
            <summary> The type of NPC that this NPC will be considered as when determining banner drops and banner bonuses. By default this will be 0, which means this NPC is not associated with any banner. To give your NPC its own banner, set this field to the NPC's type. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.BannerItem">
            <summary> The type of the item this NPC drops for every 50 times it is defeated. For any ModNPC whose banner field is set to the type of this NPC, that ModNPC will drop this banner. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.SpawnModBiomes">
            <summary> The ModBiome Types associated with this NPC spawning, if applicable. Used in Bestiary </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModNPC.TownNPCStayingHomeless">
            <summary> Setting this to true will make the NPC not appear in the housing menu nor make it find an house. </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SetDefaults">
            <summary>
            Allows you to set all your NPC's properties, such as width, damage, aiStyle, lifeMax, etc.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnSpawn(Terraria.DataStructures.IEntitySource)">
            <summary>
            Gets called when your NPC spawns in world
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.AutoStaticDefaults">
            <summary>
            Automatically sets certain static defaults. Override this if you do not want the properties to be set for you.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ApplyDifficultyAndPlayerScaling(System.Int32,System.Single,System.Single)">
            <summary>
            Allows you to customize this NPC's stats when the difficulty is expert or higher.<br/>
            This runs after <see cref="F:Terraria.NPC.value"/>,  <see cref="F:Terraria.NPC.lifeMax"/>,  <see cref="F:Terraria.NPC.damage"/>,  <see cref="F:Terraria.NPC.knockBackResist"/> have been adjusted for the current difficulty, (expert/master/FTW)<br/>
            It is common to multiply lifeMax by the balance factor, and sometimes adjust knockbackResist.<br/>
            <br/>
            Eg:<br/>
            <code>lifeMax = (int)(lifeMax * balance * bossAdjustment)</code>
            </summary>
            <param name="numPlayers">The number of active players</param>
            <param name="balance">Scaling factor that increases by a fraction for each player</param>
            <param name="bossAdjustment">An extra reduction factor to be applied to boss life in high difficulty modes</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SetBestiary(Terraria.GameContent.Bestiary.BestiaryDatabase,Terraria.GameContent.Bestiary.BestiaryEntry)">
            <summary>
            Allows you to set an NPC's information in the Bestiary.
            </summary>
            <param name="database"></param>
            <param name="bestiaryEntry"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ModifyTypeName(System.String@)">
            <summary>
            Allows you to modify the type name of this NPC dynamically.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ModifyHoverBoundingBox(Microsoft.Xna.Framework.Rectangle@)">
            <summary>
            Allows you to modify the bounding box for hovering over this NPC (affects things like whether or not its name is displayed).
            </summary>
            <param name="boundingBox">The bounding box used for determining whether or not the NPC counts as being hovered over.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SetNPCNameList">
            <summary>
            Allows you to give a list of names this NPC can be given on spawn.<br></br>
            By default, returns a blank list, which means the NPC will simply use its type name as its given name when prompted.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCProfile">
            <summary>
            Allows you to set the town NPC profile that this NPC uses.<br></br>
            By default, returns null, meaning that the NPC doesn't use one.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ResetEffects">
            <summary>
            This is where you reset any fields you add to your subclass to their default states. This is necessary in order to reset your fields if they are conditionally set by a tick update but the condition is no longer satisfied. (Note: This hook is only really useful for GlobalNPC, but is included in ModNPC for completion.)
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.PreAI">
            <summary>
            Allows you to determine how this NPC behaves. Return false to stop the vanilla AI and the AI hook from being run. Returns true by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.AI">
            <summary>
            Allows you to determine how this NPC behaves. This will only be called if PreAI returns true.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SendExtraAI(System.IO.BinaryWriter)">
            <summary>
            If you are storing AI information outside of the NPC.ai array, use this to send that AI information between clients and servers, which will be handled in <see cref="M:Terraria.ModLoader.ModNPC.ReceiveExtraAI(System.IO.BinaryReader)"/>.
            <br/>Called whenever <see cref="F:Terraria.ID.MessageID.SyncNPC"/> is successfully sent, for example on NPC creation, on player join, or whenever NPC.netUpdate is set to true in the update loop for that tick.
            <br/>Only called on the server.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ReceiveExtraAI(System.IO.BinaryReader)">
            <summary>
            Use this to receive information that was sent in <see cref="M:Terraria.ModLoader.ModNPC.SendExtraAI(System.IO.BinaryWriter)"/>.
            <br/>Called whenever <see cref="F:Terraria.ID.MessageID.SyncNPC"/> is successfully received.
            <br/>Only called on the client.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.FindFrame(System.Int32)">
            <summary>
            Allows you to modify the frame from this NPC's texture that is drawn, which is necessary in order to animate NPCs.
            </summary>
            <param name="frameHeight"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.HitEffect(Terraria.NPC.HitInfo)">
            <summary>
            Allows you to make things happen whenever this NPC is hit, such as creating dust or gores. <br/> 
            Called on local, server and remote clients. <br/> 
            Usually when something happens when an NPC dies such as item spawning, you use NPCLoot, but you can use HitEffect paired with a check for <c>if (NPC.life &lt;= 0)</c> to do client-side death effects, such as spawning dust, gore, or death sounds. <br/> 
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.UpdateLifeRegen(System.Int32@)">
            <summary>
            Allows you to make the NPC either regenerate health or take damage over time by setting NPC.lifeRegen. Regeneration or damage will occur at a rate of half of NPC.lifeRegen per second. The damage parameter is the number that appears above the NPC's head if it takes damage over time.
            </summary>
            <param name="damage"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CheckActive">
            <summary>
            Whether or not to run the code for checking whether this NPC will remain active. Return false to stop this NPC from being despawned and to stop this NPC from counting towards the limit for how many NPCs can exist near a player. Returns true by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CheckDead">
            <summary>
            Whether or not this NPC should be killed when it reaches 0 health. You may program extra effects in this hook (for example, how Golem's head lifts up for the second phase of its fight). Return false to stop this NPC from being killed. Returns true by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SpecialOnKill">
            <summary>
            Allows you to call OnKill on your own when the NPC dies, rather then letting vanilla call it on its own. Returns false by default.
            </summary>
            <returns>Return true to stop vanilla from calling OnKill on its own. Do this if you call OnKill yourself.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.PreKill">
            <summary>
            Allows you to determine whether or not this NPC will do anything upon death (besides dying). Returns true by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnKill">
            <summary>
            Allows you to make things happen when this NPC dies (for example, dropping items and setting ModSystem fields). This hook runs on the server/single player. For client-side effects, such as dust, gore, and sounds, see HitEffect
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanFallThroughPlatforms">
            <summary>
            Allows you to determine how and when this NPC can fall through platforms and similar tiles.
            <br/>Return true to allow this NPC to fall through platforms, false to prevent it. Returns null by default, applying vanilla behaviors (based on aiStyle and type).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanBeCaughtBy(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to determine whether the given item can catch this NPC.<br></br>
            Return true or false to say this NPC can or cannot be caught, respectively, regardless of vanilla rules.<br></br>
            Returns null by default, which allows vanilla's NPC catching rules to decide the target's fate.<br></br>
            If this returns false, <see cref="M:Terraria.ModLoader.CombinedHooks.OnCatchNPC(Terraria.Player,Terraria.NPC,Terraria.Item,System.Boolean)"/> is never called.<br></br><br></br>
            NOTE: this does not classify the given item as an NPC-catching tool, which is necessary for catching NPCs in the first place.<br></br>
            To do that, you will need to use the "CatchingTool" set in ItemID.Sets.
            </summary>
            <param name="item">The item with which the player is trying to catch this NPC.</param>
            <param name="player">The player attempting to catch this NPC.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnCaughtBy(Terraria.Player,Terraria.Item,System.Boolean)">
            <summary>
            Allows you to make things happen when the given item attempts to catch this NPC.
            </summary>
            <param name="player">The player attempting to catch this NPC.</param>
            <param name="item">The item used to catch this NPC.</param>
            <param name="failed">Whether or not this NPC has been successfully caught.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ModifyNPCLoot(Terraria.ModLoader.NPCLoot)">
            <summary>
            Allows you to add and modify NPC loot tables to drop on death and to appear in the Bestiary.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-NPC-Drops-and-Loot-1.4">Basic NPC Drops and Loot 1.4 Guide</see> explains how to use this hook to modify NPC loot.
            <br/> This hook only runs once during mod loading, any dynamic behavior must be contained in the rules themselves.
            </summary>
            <param name="npcLoot">A reference to the item drop database for this npc type</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.BossLoot(System.String@,System.Int32@)">
            <summary>
            Allows you to customize what happens when this boss dies, such as which name is displayed in the defeat message and what type of potion it drops.
            </summary>
            <param name="name"></param>
            <param name="potionType"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanHitPlayer(Terraria.Player,System.Int32@)">
            <summary>
            Allows you to determine whether this NPC can hit the given player. Return false to block this NPC from hitting the target. Returns true by default. CooldownSlot determines which of the player's cooldown counters to use (-1, 0, or 1), and defaults to -1.
            </summary>
            <param name="target"></param>
            <param name="cooldownSlot"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ModifyHitPlayer(Terraria.Player,Terraria.Player.HurtModifiers@)">
            <summary>
            Allows you to modify the damage, etc., that this NPC does to a player. <br/>
            Runs on the local client. <br/>
            </summary>
            <param name="target"></param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnHitPlayer(Terraria.Player,Terraria.Player.HurtInfo)">
            <summary>
            Allows you to create special effects when this NPC hits a player (for example, inflicting debuffs). <br/>
            Runs on the local client. <br/>
            </summary>
            <param name="target"></param>
            <param name="hurtInfo"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanHitNPC(Terraria.NPC)">
            <summary>
            Allows you to determine whether this NPC can hit the given friendly NPC. Return false to block the NPC from hitting the target, and return true to use the vanilla code for whether the target can be hit. Returns true by default.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanBeHitByNPC(Terraria.NPC)">
            <summary>
            Allows you to determine whether a friendly NPC can be hit by an NPC. Return false to block the attacker from hitting the NPC, and return true to use the vanilla code for whether the target can be hit. Returns true by default.
            </summary>
            <param name="attacker"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ModifyHitNPC(Terraria.NPC,Terraria.NPC.HitModifiers@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that this NPC does to a friendly NPC. <br/>
            Runs in single player or on the server. <br/>
            </summary>
            <param name="target"></param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnHitNPC(Terraria.NPC,Terraria.NPC.HitInfo)">
            <summary>
            Allows you to create special effects when this NPC hits a friendly NPC. <br/>
            Runs in single player or on the server. <br/>
            </summary>
            <param name="target"></param>
            <param name="hit"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanBeHitByItem(Terraria.Player,Terraria.Item)">
            <summary>
            Allows you to determine whether this NPC can be hit by the given melee weapon when swung. Return true to allow hitting the NPC, return false to block hitting the NPC, and return null to use the vanilla code for whether the NPC can be hit. Returns null by default.
            </summary>
            <param name="player"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanCollideWithPlayerMeleeAttack(Terraria.Player,Terraria.Item,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to determine whether an NPC can be collided with the player melee weapon when swung. <br/>
            Use <see cref="M:Terraria.ModLoader.ModNPC.CanBeHitByItem(Terraria.Player,Terraria.Item)"/> instead for Guide Voodoo Doll-type effects.
            </summary>
            <param name="player">The player wielding this item.</param>
            <param name="item">The weapon item the player is holding.</param>
            <param name="meleeAttackHitbox">Hitbox of melee attack.</param>
            <returns>
            Return true to allow colliding with the melee attack, return false to block the weapon from colliding with the NPC, and return null to use the vanilla code for whether the attack can be colliding. Returns null by default.
            </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ModifyHitByItem(Terraria.Player,Terraria.Item,Terraria.NPC.HitModifiers@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that this NPC takes from a melee weapon. <br/>
            Runs on the local client. <br/>
            </summary>
            <param name="player"></param>
            <param name="item"></param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnHitByItem(Terraria.Player,Terraria.Item,Terraria.NPC.HitInfo,System.Int32)">
            <summary>
            Allows you to create special effects when this NPC is hit by a melee weapon. <br/>
            Runs on the client or server doing the damage. <br/>
            </summary>
            <param name="player"></param>
            <param name="item"></param>
            <param name="hit"></param>
            <param name="damageDone"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanBeHitByProjectile(Terraria.Projectile)">
            <summary>
            Allows you to determine whether this NPC can be hit by the given projectile. Return true to allow hitting the NPC, return false to block hitting the NPC, and return null to use the vanilla code for whether the NPC can be hit. Returns null by default.
            </summary>
            <param name="projectile"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ModifyHitByProjectile(Terraria.Projectile,Terraria.NPC.HitModifiers@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that this NPC takes from a projectile. This method is only called for the owner of the projectile, meaning that in multi-player, projectiles owned by a player call this method on that client, and projectiles owned by the server such as enemy projectiles call this method on the server.
            </summary>
            <param name="projectile"></param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnHitByProjectile(Terraria.Projectile,Terraria.NPC.HitInfo,System.Int32)">
            <summary>
            Allows you to create special effects when this NPC is hit by a projectile.
            </summary>
            <param name="projectile"></param>
            <param name="hit"></param>
            <param name="damageDone"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ModifyIncomingHit(Terraria.NPC.HitModifiers@)">
            <summary>
            Allows you to use a custom damage formula for when this NPC takes damage from any source. For example, you can change the way defense works or use a different crit multiplier.
            </summary>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.BossHeadSlot(System.Int32@)">
            <summary>
            Allows you to customize the boss head texture used by an NPC based on its state. Set index to -1 to stop the texture from being displayed.
            </summary>
            <param name="index">The index for NPCID.Sets.BossHeadTextures</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.BossHeadRotation(System.Single@)">
            <summary>
            Allows you to customize the rotation of this NPC's boss head icon on the map.
            </summary>
            <param name="rotation"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.BossHeadSpriteEffects(Microsoft.Xna.Framework.Graphics.SpriteEffects@)">
            <summary>
            Allows you to flip this NPC's boss head icon on the map.
            </summary>
            <param name="spriteEffects"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.GetAlpha(Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to determine the color and transparency in which this NPC is drawn. Return null to use the default color (normally light and buff color). Returns null by default.
            </summary>
            <param name="drawColor"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.DrawEffects(Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to add special visual effects to this NPC (such as creating dust), and modify the color in which the NPC is drawn.
            </summary>
            <param name="drawColor"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.PreDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to draw things behind this NPC, or to modify the way this NPC is drawn. Substract screenPos from the draw position before drawing. Return false to stop the game from drawing the NPC (useful if you're manually drawing the NPC). Returns true by default.
            </summary>
            <param name="spriteBatch">The spritebatch to draw on</param>
            <param name="screenPos">The screen position used to translate world position into screen position</param>
            <param name="drawColor">The color the NPC is drawn in</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.PostDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to draw things in front of this NPC. Substract screenPos from the draw position before drawing. This method is called even if PreDraw returns false.
            </summary>
            <param name="spriteBatch">The spritebatch to draw on</param>
            <param name="screenPos">The screen position used to translate world position into screen position</param>
            <param name="drawColor">The color the NPC is drawn in</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.DrawBehind(System.Int32)">
            <summary>
            When used in conjunction with "NPC.hide = true", allows you to specify that this NPC should be drawn behind certain elements. Add the index to one of Main.DrawCacheNPCsMoonMoon, DrawCacheNPCsOverPlayers, DrawCacheNPCProjectiles, or DrawCacheNPCsBehindNonSolidTiles.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.DrawHealthBar(System.Byte,System.Single@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Allows you to control how the health bar for this NPC is drawn. The hbPosition parameter is the same as Main.hbPosition; it determines whether the health bar gets drawn above or below the NPC by default. The scale parameter is the health bar's size. By default, it will be the normal 1f; most bosses set this to 1.5f. Return null to let the normal vanilla health-bar-drawing code to run. Return false to stop the health bar from being drawn. Return true to draw the health bar in the position specified by the position parameter (note that this is the world position, not screen position).
            </summary>
            <param name="hbPosition"></param>
            <param name="scale"></param>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SpawnChance(Terraria.ModLoader.NPCSpawnInfo)">
            <summary>
            Whether or not this NPC can spawn with the given spawning conditions. Return the weight for the chance of this NPC to spawn compared to vanilla mobs. All vanilla mobs combined have a total weight of 1. Returns 0 by default, which disables natural spawning. Remember to always use spawnInfo.player and not Main.LocalPlayer when checking Player or ModPlayer fields, otherwise your mod won't work in Multiplayer.
            </summary>
            <param name="spawnInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SpawnNPC(System.Int32,System.Int32)">
            <summary>
            Allows you to customize how this NPC is created when it naturally spawns (for example, its position or ai array). Return the return value of NPC.NewNPC. By default this method spawns this NPC on top of the tile at the given coordinates.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanTownNPCSpawn(System.Int32)">
            <summary>
            Whether or not the conditions have been met for this town NPC to be able to move into town. For example, the Demolitionist requires that any player has an explosive.
            </summary>
            <param name="numTownNPCs"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CheckConditions(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to define special conditions required for this town NPC's house. For example, Truffle requires the house to be in an aboveground mushroom biome.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="top"></param>
            <param name="bottom"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.UsesPartyHat">
            <summary>
            Allows you to determine whether this town NPC wears a party hat during a party. Returns true by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanChat">
            <summary>
            Allows you to determine whether this NPC can talk with the player. By default, returns if the NPC is a town NPC.
            <para></para>
            This hook is not based on the type of the NPC, and is queried specifically on the ModNPC itself, regardless of if,
            for example, the type of the NPC instance is changed. Returning true in all circumstances will *always* make the NPC
            able to be chatted with no matter what else you do the NPC instance itself.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.GetChat">
            <summary>
            Allows you to give this NPC a chat message when a player talks to it. By default returns something embarrassing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SetChatButtons(System.String@,System.String@)">
            <summary>
            Allows you to set the text for the buttons that appear on this NPC's chat window. A parameter left as an empty string will not be included as a button on the chat window.
            </summary>
            <param name="button"></param>
            <param name="button2"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnChatButtonClicked(System.Boolean,System.String@)">
            <summary>
            Allows you to make something happen whenever a button is clicked on this NPC's chat window. The firstButton parameter tells whether the first button or second button (button and button2 from SetChatButtons) was clicked. Set the shopName parameter to "Shop" to open this NPC's shop.
            </summary>
            <param name="firstButton"></param>
            <param name="shopName"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.AddShops">
            <summary>
            Allows you to add shops to this NPC, similar to adding recipes for items. <br/>
            Make a new <see cref="T:Terraria.ModLoader.NPCShop"/>, and items to it, and call <see cref="M:Terraria.ModLoader.AbstractNPCShop.Register"/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ModifyActiveShop(System.String,Terraria.Item[])">
            <summary>
            Allows you to modify the contents of a shop whenever player opens it. <br/>
            To create a shop, use <see cref="M:Terraria.ModLoader.ModNPC.AddShops"/> <br/>
            Note that for special shops like travelling merchant, the <paramref name="shopId"/> may not correspond to a <see cref="T:Terraria.ModLoader.NPCShop"/> in the <see cref="T:Terraria.ModLoader.NPCShopDatabase"/>
            </summary>
            <param name="shopName">The full name of the shop being opened. See <see cref="M:Terraria.ModLoader.NPCShopDatabase.GetShopName(System.Int32,System.String)"/> for the format. </param>
            <param name="items">Items in the shop including 'air' items in empty slots.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.CanGoToStatue(System.Boolean)">
            <summary>
            Whether this NPC can be teleported to a King or Queen statue. Returns false by default.
            </summary>
            <param name="toKingStatue">Whether the NPC is being teleported to a King or Queen statue.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.OnGoToStatue(System.Boolean)">
            <summary>
            Allows you to make things happen when this NPC teleports to a King or Queen statue.
            This method is only called server side.
            </summary>
            <param name="toKingStatue">Whether the NPC was teleported to a King or Queen statue.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCAttackStrength(System.Int32@,System.Single@)">
            <summary>
            Allows you to determine the damage and knockback of this town NPC's attack before the damage is scaled. (More information on scaling in GlobalNPC.BuffTownNPCs.)
            </summary>
            <param name="damage"></param>
            <param name="knockback"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCAttackCooldown(System.Int32@,System.Int32@)">
            <summary>
            Allows you to determine the cooldown between each of this town NPC's attack. The cooldown will be a number greater than or equal to the first parameter, and less then the sum of the two parameters.
            </summary>
            <param name="cooldown"></param>
            <param name="randExtraCooldown"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCAttackProj(System.Int32@,System.Int32@)">
            <summary>
            Allows you to determine the projectile type of this town NPC's attack, and how long it takes for the projectile to actually appear. This hook is only used when the town NPC has an attack type of 0 (throwing), 1 (shooting), or 2 (magic).
            </summary>
            <param name="projType"></param>
            <param name="attackDelay"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCAttackProjSpeed(System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to determine the speed at which this town NPC throws a projectile when it attacks. Multiplier is the speed of the projectile, gravityCorrection is how much extra the projectile gets thrown upwards, and randomOffset allows you to randomize the projectile's velocity in a square centered around the original velocity. This hook is only used when the town NPC has an attack type of 0 (throwing), 1 (shooting), or 2 (magic).
            </summary>
            <param name="multiplier"></param>
            <param name="gravityCorrection"></param>
            <param name="randomOffset"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCAttackShoot(System.Boolean@)">
            <summary>
            Allows you to tell the game that this town NPC has already created a projectile and will still create more projectiles as part of a single attack so that the game can animate the NPC's attack properly. Only used when the town NPC has an attack type of 1 (shooting).
            </summary>
            <param name="inBetweenShots"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCAttackMagic(System.Single@)">
            <summary>
            Allows you to control the brightness of the light emitted by this town NPC's aura when it performs a magic attack. Only used when the town NPC has an attack type of 2 (magic)
            </summary>
            <param name="auraLightMultiplier"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.TownNPCAttackSwing(System.Int32@,System.Int32@)">
            <summary>
            Allows you to determine the width and height of the item this town NPC swings when it attacks, which controls the range of this NPC's swung weapon. Only used when the town NPC has an attack type of 3 (swinging).
            </summary>
            <param name="itemWidth"></param>
            <param name="itemHeight"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.DrawTownAttackGun(Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Rectangle@,System.Single@,System.Int32@)">
            <summary>
            Allows you to customize how this town NPC's weapon is drawn when this NPC is shooting (this NPC must have an attack type of 1). <paramref name="scale"/> is a multiplier for the item's drawing size, <paramref name="item"/> is the Texture2D instance of the item to be drawn, <paramref name="itemFrame"/> is the section of the texture to draw, and <paramref name="horizontalHoldoutOffset"/> is how far away the item should be drawn from the NPC.<br/>
            To use an actual item sprite, use <code>Main.GetItemDrawFrame(itemTypeHere, out item, out itemFrame);
            horizontalHoldoutOffset = (int)Main.DrawPlayerItemPos(1f, itemType).X - someOffsetHere</code>
            </summary>
            <param name="item"></param>
            <param name="itemFrame"></param>
            <param name="scale"></param>
            <param name="horizontalHoldoutOffset"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.DrawTownAttackSwing(Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Rectangle@,System.Int32@,System.Single@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Allows you to customize how this town NPC's weapon is drawn when this NPC is swinging it (this NPC must have an attack type of 3). <paramref name="item"/> is the Texture2D instance of the item to be drawn, <paramref name="itemFrame"/> is the section of the texture to draw, <paramref name="itemSize"/> is the width and height of the item's hitbox (the same values for TownNPCAttackSwing), <paramref name="scale"/> is the multiplier for the item's drawing size, and <paramref name="offset"/> is the offset from which to draw the item from its normal position. The item texture can be any texture, but if it is an item texture you can use  <see cref="M:Terraria.Main.GetItemDrawFrame(System.Int32,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Rectangle@)"/> to set <paramref name="item"/> and <paramref name="itemFrame"/> easily.
            </summary>
            <param name="item"></param>
            <param name="itemFrame"></param>
            <param name="itemSize"></param>
            <param name="scale"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.ModifyCollisionData(Microsoft.Xna.Framework.Rectangle,System.Int32@,Terraria.ModLoader.MultipliableFloat@,Microsoft.Xna.Framework.Rectangle@)">
            <summary>
            Allows you to modify the NPC's <seealso cref="T:Terraria.ID.ImmunityCooldownID"/>, damage multiplier, and hitbox. Useful for implementing dynamic damage hitboxes that change in dimensions or deal extra damage. Returns false to prevent vanilla code from running. Returns true by default.
            </summary>
            <param name="victimHitbox"></param>
            <param name="immunityCooldownSlot"></param>
            <param name="damageMultiplier"></param>
            <param name="npcHitbox"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.NeedSaving">
            <summary>
            Makes this ModNPC save along the world even if it's not a townNPC. Defaults to false.
            <br/><b>NOTE:</b> A town NPC will always be saved.
            <br/><b>NOTE:</b> A NPC that needs saving will not despawn naturally.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.SaveData(Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to save custom data for the given item.
            Allows you to save custom data for the given npc.
            <br/>
            <br/><b>NOTE:</b> The provided tag is always empty by default, and is provided as an argument only for the sake of convenience and optimization.
            <br/><b>NOTE:</b> Try to only save data that isn't default values.
            <br/><b>NOTE:</b> The npc may be saved even if NeedSaving returns false and this is not a townNPC, if another mod returns true on NeedSaving.
            </summary>
            <param name="tag">The TagCompound to save data into. Note that this is always empty by default, and is provided as an argument</param>
        </member>
        <member name="M:Terraria.ModLoader.ModNPC.LoadData(Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to load custom data that you have saved for this npc.
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="T:Terraria.ModLoader.ModPacket">
             <summary>
             This class inherits from BinaryWriter. This means that you can use all of its writing functions to send information between client and server. This class also comes with a Send method that's used to actually send everything you've written between client and server.
            
             ModPacket has all the same methods as BinaryWriter, and some additional ones.
             </summary>
             <seealso cref="T:System.IO.BinaryWriter" />
        </member>
        <member name="M:Terraria.ModLoader.ModPacket.Send(System.Int32,System.Int32)">
            <summary>
            Sends all the information you've written between client and server. If the toClient parameter is non-negative, this packet will only be sent to the specified client. If the ignoreClient parameter is non-negative, this packet will not be sent to the specified client.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModCactus">
            <summary>
            This class represents a type of modded cactus.
            This class encapsulates a function for retrieving the cactus's texture and an array for type of soil it grows on.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModCactus.PlantTileId">
            <summary>
            The cactus will share a tile ID with the vanilla cacti (80), so that the cacti can freely convert between each other if the sand below is converted.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModTree">
            <summary>
            This class represents a type of modded tree.
            The tree will share a tile ID with the vanilla trees (5), so that the trees can freely convert between each other if the soil below is converted.
            This class encapsulates several functions that distinguish each type of tree from each other.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTree.PlantTileId">
            <summary>
            The tree will share a tile ID with the vanilla trees (5), so that the trees can freely convert between each other if the soil below is converted.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTree.CountsAsTreeType">
            <summary>
            Used mostly for vanilla tree shake loot tables
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTree.CreateDust">
            <summary>
            Return the type of dust created when this tree is destroyed. Returns 7 by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTree.TreeLeaf">
            <summary>
            Return the type of gore created when the tree grow, being shook and falling leaves on windy days, returns -1 by default
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTree.Shake(System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Executed on tree shake, return false to skip vanilla tree shake drops.<br/>
            The x and y coordinates correspond to the top of the tree, where items usually spawn.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTree.CanDropAcorn">
            <summary>
            Whether or not this tree can drop acorns. Returns true by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTree.SaplingGrowthType(System.Int32@)">
            <summary>
            Defines the sapling that can eventually grow into a tree. The type of the sapling should be returned here. Returns 20 and style 0 by default.
            The style parameter will determine which sapling is chosen if multiple sapling types share the same ID;
            even if you only have a single sapling in an ID, you must still set this to 0.
            </summary>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTree.DropWood">
            <summary>
            The ID of the item that is dropped in bulk when this tree is destroyed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTree.GetTopTextures">
            <summary>
            Return the texture containing the possible tree tops that can be drawn above this tree.
            The framing was determined under <cref>SetTreeFoliageSettings</cref>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTree.GetBranchTextures">
            <summary>
            Return the texture containing the possible tree branches that can be drawn next to this tree.
            The framing was determined under <cref>SetTreeFoliageSettings</cref>
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModPalmTree">
            <summary>
            This class represents a type of modded palm tree.
            The palm tree will share a tile ID with the vanilla palm trees (323), so that the trees can freely convert between each other if the sand below is converted.
            This class encapsulates several functions that distinguish each type of palm tree from each other.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModPalmTree.PlantTileId">
            <summary>
            The tree will share a tile ID with the vanilla palm trees (323), so that the trees can freely convert between each other if the sand below is converted.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModPalmTree.CountsAsTreeType">
            <summary>
            Used mostly for vanilla tree shake loot tables
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPalmTree.CreateDust">
            <summary>
            Return the type of dust created when this palm tree is destroyed. Returns 215 by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPalmTree.TreeLeaf">
            <summary>
            Return the type of gore created when the tree grow, being shook and falling leaves on windy days, returns -1 by default
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPalmTree.Shake(System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Executed on tree shake, return false to skip vanilla tree shake drops
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPalmTree.SaplingGrowthType(System.Int32@)">
            <summary>
            Defines the sapling that can eventually grow into a tree. The type of the sapling should be returned here. Returns 20 and style 0 by default.
            The style parameter will determine which sapling is chosen if multiple sapling types share the same ID;
            even if you only have a single sapling in an ID, you must still set this to 0.
            </summary>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPalmTree.DropWood">
            <summary>
            The ID of the item that is dropped in bulk when this palm tree is destroyed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPalmTree.GetTopTextures">
            <summary>
            Return the texture containing the possible tree tops that can be drawn above this palm tree.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPalmTree.GetOasisTopTextures">
            <summary>
            Return the texture containing the possible tree tops that can be drawn above this palm tree.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.ModPlayer">
            <summary>
            A ModPlayer instance represents an extension of a Player instance. You can store fields in the ModPlayer classes, much like how the Player class abuses field usage, to keep track of mod-specific information on the player that a ModPlayer instance represents. It also contains hooks to insert your code into the Player class.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModPlayer.Player">
            <summary>
            The Player instance that this ModPlayer instance is attached to.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.Initialize">
            <summary>
            Called whenever the player is loaded (on the player selection screen). This can be used to initialize data structures, etc.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ResetEffects">
            <summary>
            This is where you reset any fields you add to your ModPlayer subclass to their default states. This is necessary in order to reset your fields if they are conditionally set by a tick update but the condition is no longer satisfied.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ResetInfoAccessories">
            <summary>
            This is where you reset any fields related to INFORMATION accessories to their "default" states. This is identical to ResetEffects(); but should ONLY be used to
            reset info accessories. It will cause unintended side-effects if used with other fields.
            </summary>
            <remarks>
            This method is called in tandem with <seealso cref="M:Terraria.ModLoader.ModPlayer.ResetEffects"/>, but it also called in <seealso cref="M:Terraria.Player.RefreshInfoAccs"/> even when the game is paused;
            this allows for info accessories to keep properly updating while the game is paused, a feature/fix added in 1.4.4.
            </remarks>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.RefreshInfoAccessoriesFromTeamPlayers(Terraria.Player)">
            <summary>
            This is where you set any fields related to INFORMATION accessories based on the passed in player argument. Note that this hook is only called if all of the requirements
            for a "nearby teammate" is met, which is when the other player is on the same team and within a certain distance, determined by the following code:
            <code>(Main.player[i].Center - base.Center).Length() &lt; 800f</code>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyMaxStats(Terraria.ModLoader.StatModifier@,Terraria.ModLoader.StatModifier@)">
            <summary>
            Allows you to modify the player's max stats.  This hook runs after vanilla increases from the Life Crystal, Life Fruit and Mana Crystal are applied<br/>
            <b>NOTE:</b> You should NOT modify <see cref="F:Terraria.Player.statLifeMax"/> nor <see cref="F:Terraria.Player.statManaMax"/> here.  Use the <paramref name="health"/> and <paramref name="mana"/> parameters.
            </summary>
            <param name="health">The modifier to the player's maximum health</param>
            <param name="mana">The modifier to the player's maximum mana</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UpdateDead">
            <summary>
            Similar to UpdateDead, except this is only called when the player is dead. If this is called, then ResetEffects will not be called.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreSaveCustomData">
            <summary>
            Currently never gets called, so this is useless.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.SaveData(Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to save custom data for this player.
            <br/>
            <br/><b>NOTE:</b> The provided tag is always empty by default, and is provided as an argument only for the sake of convenience and optimization.
            <br/><b>NOTE:</b> Try to only save data that isn't default values.
            </summary>
            <param name="tag"> The TagCompound to save data into. Note that this is always empty by default, and is provided as an argument only for the sake of convenience and optimization. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.LoadData(Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to load custom data that you have saved for this player.
            <br/><b>Try to write defensive loading code that won't crash if something's missing.</b>
            </summary>
            <param name="tag"> The TagCompound to load data from. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreSavePlayer">
            <summary>
            PreSavePlayer and PostSavePlayer wrap the vanilla player saving code (both are before the ModPlayer.Save). Useful for advanced situations where a save might be corrupted or rendered unusable by the values that normally would save.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostSavePlayer">
            <summary>
            PreSavePlayer and PostSavePlayer wrap the vanilla player saving code (both are before the ModPlayer.Save). Useful for advanced situations where a save might be corrupted or rendered unusable by the values that normally would save.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CopyClientState(Terraria.ModLoader.ModPlayer)">
            <summary>
            <br/> Allows you to copy information that you intend to sync between server and client to the <paramref name="targetCopy"/> parameter.
            <br/> You would then use the <see cref="M:Terraria.ModLoader.ModPlayer.SendClientChanges(Terraria.ModLoader.ModPlayer)"/> hook to compare against that data and decide what needs synchronizing.
            <br/> This hook is called with every call of the <see cref="M:Terraria.Player.clientClone"/> method.
            <br/>
            <br/> <b>NOTE:</b> For performance reasons, avoid deep cloning or copying any excessive information.
            <br/> <b>NOTE:</b> Using <see cref="M:Terraria.Item.CopyNetStateTo(Terraria.Item)"/> is the recommended way of creating item snapshots.
            </summary>
            <param name="targetCopy"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.SyncPlayer(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Allows you to sync information about this player between server and client. The toWho and fromWho parameters correspond to the remoteClient/toClient and ignoreClient arguments, respectively, of NetMessage.SendData/ModPacket.Send. The newPlayer parameter is whether or not the player is joining the server (it is true on the joining client).
            </summary>
            <param name="toWho"></param>
            <param name="fromWho"></param>
            <param name="newPlayer"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.SendClientChanges(Terraria.ModLoader.ModPlayer)">
            <summary>
            Allows you to sync any information that has changed between the server and client. Here, you should check the information you have copied in the clientClone parameter; if they differ between this player and the clientPlayer parameter, then you should send that information using NetMessage.SendData or ModPacket.Send.
            </summary>
            <param name="clientPlayer"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UpdateBadLifeRegen">
            <summary>
            Allows you to give the player a negative life regeneration based on its state (for example, the "On Fire!" debuff makes the player take damage-over-time). This is typically done by setting Player.lifeRegen to 0 if it is positive, setting Player.lifeRegenTime to 0, and subtracting a number from Player.lifeRegen. The player will take damage at a rate of half the number you subtract per second.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UpdateLifeRegen">
            <summary>
            Allows you to increase the player's life regeneration based on its state. This can be done by incrementing Player.lifeRegen by a certain number. The player will recover life at a rate of half the number you add per second. You can also increment Player.lifeRegenTime to increase the speed at which the player reaches its maximum natural life regeneration.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.NaturalLifeRegen(System.Single@)">
            <summary>
            Allows you to modify the power of the player's natural life regeneration. This can be done by multiplying the regen parameter by any number. For example, campfires multiply it by 1.1, while walking multiplies it by 0.5.
            </summary>
            <param name="regen"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UpdateAutopause">
            <summary>
            Allows you to modify the player's stats while the game is paused due to the autopause setting being on.
            This is called in single player only, some time before the player's tick update would happen when the game isn't paused.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreUpdate">
            <summary>
            This is called at the beginning of every tick update for this player, after checking whether the player exists. <br/>
            This can be used to adjust timers and cooldowns.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ProcessTriggers(Terraria.GameInput.TriggersSet)">
            <summary>
            Use this to check on keybinds you have registered. While SetControls is set even while in text entry mode, this hook is only called during gameplay.
            </summary>
            <param name="triggersSet"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.SetControls">
            <summary>
            Use this to modify the control inputs that the player receives. For example, the Confused debuff swaps the values of Player.controlLeft and Player.controlRight. This is called sometime after PreUpdate is called.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreUpdateBuffs">
            <summary>
            This is called sometime after SetControls is called, and right before all the buffs update on this player. This hook can be used to add buffs to the player based on the player's state (for example, the Campfire buff is added if the player is near a Campfire).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostUpdateBuffs">
            <summary>
            This is called right after all of this player's buffs update on the player. This can be used to modify the effects that the buff updates had on this player, and can also be used for general update tasks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UpdateEquips">
            <summary>
            Called after Update Accessories.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostUpdateEquips">
            <summary>
            This is called right after all of this player's equipment and armor sets update on the player, which is sometime after PostUpdateBuffs is called. This can be used to modify the effects that the equipment had on this player, and can also be used for general update tasks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UpdateVisibleAccessories">
            <summary>
            Is called in Player.Frame() after vanilla functional slots are evaluated, including selection screen to prepare and denote visible accessories. Player Instance sensitive.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UpdateVisibleVanityAccessories">
            <summary>
            Is called in Player.Frame() after vanilla vanity slots are evaluated, including selection screen to prepare and denote visible accessories. Player Instance sensitive.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UpdateDyes">
            <summary>
            Is called in Player.UpdateDyes(), including selection screen. Player Instance sensitive.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostUpdateMiscEffects">
            <summary>
            This is called after miscellaneous update code is called in Player.Update, which is sometime after PostUpdateEquips is called. This can be used for general update tasks.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostUpdateRunSpeeds">
            <summary>
            This is called after the player's horizontal speeds are modified, which is sometime after PostUpdateMiscEffects is called, and right before the player's horizontal position is updated. Use this to modify maxRunSpeed, accRunSpeed, runAcceleration, and similar variables before the player moves forwards/backwards.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreUpdateMovement">
            <summary>
            This is called right before modifying the player's position based on velocity. Use this to make direct changes to the velocity.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostUpdate">
            <summary>
            This is called at the very end of the Player.Update method. Final general update tasks can be placed here.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.FrameEffects">
            <summary>
            Allows you to modify the armor and accessories that visually appear on the player. In addition, you can create special effects around this character, such as creating dust.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ImmuneTo(Terraria.DataStructures.PlayerDeathReason,System.Int32,System.Boolean)">
            <summary>
            Allows you to make a player immune to damage from a certain source, or at a certain time. <br/>
            Vanilla examples include shimmer and journey god mode.<br/>
            <br/>
            Runs before dodges are used, or any damage calculations are performed. <br/>
            Runs on all players, on all clients, so checking Player == Main.LocalPlayer is advisable. <br/>
            If immunity is determined on the local player, the hit will not be sent across the network. <br/>
            <br/>
            In pvp the hit will be sent regardless, and all clients will determine immunity independently, though it only really matters for the receiving player.
            </summary>
            <param name="damageSource">The source of the damage (projectile, NPC, etc)</param>
            <param name="cooldownCounter">The <see cref="T:Terraria.ID.ImmunityCooldownID"/> of the hit</param>
            <param name="dodgeable">Whether the hit is dodgeable</param>
            <returns>True to completely ignore the hit</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.FreeDodge(Terraria.Player.HurtInfo)">
            <summary>
            Allows you to dodge damage for a player. Intended for guaranteed 'free' or random dodges.<br/>
            Vanilla example is black belt.<br/>
            For dodges which consume a stack/buff or have a cooldown, use <see cref="M:Terraria.ModLoader.ModPlayer.ConsumableDodge(Terraria.Player.HurtInfo)"/> instead.<br/>
            <br/>
            Only runs on the local client of the player receiving the damage. <br/>
            If dodge is determined on the local player, the hit will not be sent across the network. <br/>
            If visual indication of the dodge is required on remote clients, you will need to send your own packet.
            </summary>
            <returns>True to completely ignore the hit</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ConsumableDodge(Terraria.Player.HurtInfo)">
            <summary>
            Allows you to dodge damage for a player.<br/>
            Vanilla examples include hallowed armor shadow dodge, and brain of confusion.<br/>
            For dodges which are 'free' and should be used before triggering consumables, use <see cref="M:Terraria.ModLoader.ModPlayer.FreeDodge(Terraria.Player.HurtInfo)"/> instead.<br/>
            <br/>
            Only runs on the local client of the player receiving the damage. <br/>
            If dodge is determined on the local player, the hit will not be sent across the network. <br/>
            You may need to send your own packet to synchronize the consumption of the effect, or application of the cooldown in multiplayer.
            </summary>
            <returns>True to completely ignore the hit</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyHurt(Terraria.Player.HurtModifiers@)">
            <summary>
            Allows you to adjust an instance of player taking damage. <br/>
            Called on local, server and remote clients. <br/>
            Only use this hook if you need to modify the hurt parameters in some way, eg consuming a buff which reduces the damage of the next hit. <br/>
            Use <see cref="M:Terraria.ModLoader.ModPlayer.OnHurt(Terraria.Player.HurtInfo)"/> or <see cref="M:Terraria.ModLoader.ModPlayer.PostHurt(Terraria.Player.HurtInfo)"/> instead where possible. <br/>
            The player will always take at least 1 damage. To prevent damage use <see cref="M:Terraria.ModLoader.ModPlayer.ImmuneTo(Terraria.DataStructures.PlayerDeathReason,System.Int32,System.Boolean)"/> or <see cref="M:Terraria.ModLoader.ModPlayer.FreeDodge(Terraria.Player.HurtInfo)"/> <br/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnHurt(Terraria.Player.HurtInfo)">
            <summary>
            Allows you to make anything happen when the player takes damage. <br/>
            Called on local, server and remote clients. <br/>
            Called right before health is reduced.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostHurt(Terraria.Player.HurtInfo)">
            <summary>
            Allows you to make anything happen when the player takes damage. <br/>
            Called on local, server and remote clients. <br/>
            Only called if the player survives the hit.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreKill(System.Double,System.Int32,System.Boolean,System.Boolean@,System.Boolean@,Terraria.DataStructures.PlayerDeathReason@)">
            <summary>
            This hook is called whenever the player is about to be killed after reaching 0 health. Set the playSound parameter to false to stop the death sound from playing. Set the genGore parameter to false to stop the gore and dust from being created. (These are useful for creating your own sound or gore.) Return false to stop the player from being killed. Only return false if you know what you are doing! Returns true by default.
            </summary>
            <param name="damage"></param>
            <param name="hitDirection"></param>
            <param name="pvp"></param>
            <param name="playSound"></param>
            <param name="genGore"></param>
            <param name="damageSource"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.Kill(System.Double,System.Int32,System.Boolean,Terraria.DataStructures.PlayerDeathReason)">
            <summary>
            Allows you to make anything happen when the player dies.
            </summary>
            <param name="damage"></param>
            <param name="hitDirection"></param>
            <param name="pvp"></param>
            <param name="damageSource"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreModifyLuck(System.Single@)">
            <summary>
            Called before vanilla makes any luck calculations. Return false to prevent vanilla from making their luck calculations. Returns true by default.
            </summary>
            <param name="luck"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyLuck(System.Single@)">
            <summary>
            Allows you to modify a player's luck amount.
            </summary>
            <param name="luck"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PreItemCheck">
            <summary>
            Allows you to do anything before the update code for the player's held item is run. Return false to stop the held item update code from being run (for example, if the player is frozen). Returns true by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostItemCheck">
            <summary>
            Allows you to do anything after the update code for the player's held item is run. Hooks for the middle of the held item update code have more specific names in ModItem and ModPlayer.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UseTimeMultiplier(Terraria.Item)">
            <summary>
            Allows you to change the effective useTime of an item.
            <br/> Note that this hook may cause items' actions to run less or more times than they should per a single use.
            </summary>
            <returns> The multiplier on the usage time. 1f by default. Values greater than 1 increase the item use's length. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UseAnimationMultiplier(Terraria.Item)">
            <summary>
            Allows you to change the effective useAnimation of an item.
            <br/> Note that this hook may cause items' actions to run less or more times than they should per a single use.
            </summary>
            <returns>The multiplier on the animation time. 1f by default. Values greater than 1 increase the item animation's length. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.UseSpeedMultiplier(Terraria.Item)">
            <summary>
            Allows you to safely change both useTime and useAnimation while keeping the values relative to each other.
            <br/> Useful for status effects.
            </summary>
            <returns> The multiplier on the use speed. 1f by default. Values greater than 1 increase the overall item speed. </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.GetHealLife(Terraria.Item,System.Boolean,System.Int32@)">
            <summary>
            Allows you to temporarily modify the amount of life a life healing item will heal for, based on player buffs, accessories, etc. This is only called for items with a healLife value.
            </summary>
            <param name="item">The item.</param>
            <param name="quickHeal">Whether the item is being used through quick heal or not.</param>
            <param name="healValue">The amount of life being healed.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.GetHealMana(Terraria.Item,System.Boolean,System.Int32@)">
            <summary>
            Allows you to temporarily modify the amount of mana a mana healing item will heal for, based on player buffs, accessories, etc. This is only called for items with a healMana value.
            </summary>
            <param name="item">The item.</param>
            <param name="quickHeal">Whether the item is being used through quick heal or not.</param>
            <param name="healValue">The amount of mana being healed.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyManaCost(Terraria.Item,System.Single@,System.Single@)">
            <summary>
            Allows you to temporarily modify the amount of mana an item will consume on use, based on player buffs, accessories, etc. This is only called for items with a mana value.
            </summary>
            <param name="item">The item being used.</param>
            <param name="reduce">Used for decreasingly stacking buffs (most common). Only ever use -= on this field.</param>
            <param name="mult">Use to directly multiply the item's effective mana cost. Good for debuffs, or things which should stack separately (eg meteor armor set bonus).</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnMissingMana(Terraria.Item,System.Int32)">
            <summary>
            Allows you to make stuff happen when a player doesn't have enough mana for the item they are trying to use.
            If the player has high enough mana after this hook runs, mana consumption will happen normally.
            Only runs once per item use.
            </summary>
            <param name="item">The item being used.</param>
            <param name="neededMana">The mana needed to use the item.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnConsumeMana(Terraria.Item,System.Int32)">
            <summary>
            Allows you to make stuff happen when a player consumes mana on use of an item.
            </summary>
            <param name="item">The item being used.</param>
            <param name="manaConsumed">The mana consumed from the player.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyWeaponDamage(Terraria.Item,Terraria.ModLoader.StatModifier@)">
            <summary>
            Allows you to dynamically modify a weapon's damage based on player and item conditions.
            Can be utilized to modify damage beyond the tools that DamageClass has to offer.
            </summary>
            <param name="item">The item being used.</param>
            <param name="damage">The StatModifier object representing the totality of the various modifiers to be applied to the item's base damage.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyWeaponKnockback(Terraria.Item,Terraria.ModLoader.StatModifier@)">
            <summary>
            Allows you to dynamically modify a weapon's knockback based on player and item conditions.
            Can be utilized to modify damage beyond the tools that DamageClass has to offer.
            </summary>
            <param name="item">The item being used.</param>
            <param name="knockback">The StatModifier object representing the totality of the various modifiers to be applied to the item's base knockback.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyWeaponCrit(Terraria.Item,System.Single@)">
            <summary>
            Allows you to dynamically modify a weapon's crit chance based on player and item conditions.
            Can be utilized to modify damage beyond the tools that DamageClass has to offer.
            </summary>
            <param name="item">The item.</param>
            <param name="crit">The total crit chance of the item after all normal crit chance calculations.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanConsumeAmmo(Terraria.Item,Terraria.Item)">
            <summary>
            Whether or not the given ammo item will be consumed by this weapon.<br></br>
            By default, returns true; return false to prevent ammo consumption. <br></br>
            If false is returned, the <see cref="M:Terraria.ModLoader.ModPlayer.OnConsumeAmmo(Terraria.Item,Terraria.Item)"/> hook is never called.
            </summary>
            <param name="weapon">The weapon that this player is attempting to use.</param>
            <param name="ammo">The ammo that the given weapon is attempting to consume.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnConsumeAmmo(Terraria.Item,Terraria.Item)">
            <summary>
            Allows you to make things happen when the given ammo is consumed by the given weapon.<br></br>
            Called before the ammo stack is reduced, and is never called if the ammo isn't consumed in the first place.
            </summary>
            <param name="weapon">The weapon that is currently using the given ammo.</param>
            <param name="ammo">The ammo that the given weapon is currently using.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanShoot(Terraria.Item)">
            <summary>
            Allows you to prevent an item from shooting a projectile on use. Returns true by default.
            </summary>
            <param name="item"> The item being used. </param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyShootStats(Terraria.Item,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@,System.Int32@,System.Int32@,System.Single@)">
            <summary>
            Allows you to modify the position, velocity, type, damage and/or knockback of a projectile being shot by an item.
            </summary>
            <param name="item"> The item being used. </param>
            <param name="position"> The center position of the projectile. </param>
            <param name="velocity"> The velocity of the projectile. </param>
            <param name="type"> The ID of the projectile. </param>
            <param name="damage"> The damage of the projectile. </param>
            <param name="knockback"> The knockback of the projectile. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.Shoot(Terraria.Item,Terraria.DataStructures.EntitySource_ItemUse_WithAmmo,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Single)">
            <summary>
            Allows you to modify an item's shooting mechanism. Return false to prevent vanilla's shooting code from running. Returns true by default.
            </summary>
            <param name="item"> The item being used. </param>
            <param name="source"> The projectile source's information. </param>
            <param name="position"> The center position of the projectile. </param>
            <param name="velocity"> The velocity of the projectile. </param>
            <param name="type"> The ID of the projectile. </param>
            <param name="damage"> The damage of the projectile. </param>
            <param name="knockback"> The knockback of the projectile. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.MeleeEffects(Terraria.Item,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to give this player's melee weapon special effects, such as creating light or dust.
            </summary>
            <param name="item"></param>
            <param name="hitbox"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanCatchNPC(Terraria.NPC,Terraria.Item)">
            <summary>
            Allows you to determine whether the given item can catch the given NPC.<br></br>
            Return true or false to say the target can or cannot be caught, respectively, regardless of vanilla rules.<br></br>
            Returns null by default, which allows vanilla's NPC catching rules to decide the target's fate.<br></br>
            If this returns false, <see cref="M:Terraria.ModLoader.CombinedHooks.OnCatchNPC(Terraria.Player,Terraria.NPC,Terraria.Item,System.Boolean)"/> is never called.<br></br><br></br>
            NOTE: this does not classify the given item as a catch tool, which is necessary for catching NPCs in the first place.<br></br>
            To do that, you will need to use the "CatchingTool" set in ItemID.Sets.
            </summary>
            <param name="target">The NPC the player is trying to catch.</param>
            <param name="item">The item with which the player is trying to catch the target NPC.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnCatchNPC(Terraria.NPC,Terraria.Item,System.Boolean)">
            <summary>
            Allows you to make things happen when the given item attempts to catch the given NPC.
            </summary>
            <param name="npc">The NPC which the player attempted to catch.</param>
            <param name="item">The item used to catch the given NPC.</param>
            <param name="failed">Whether or not the given NPC has been successfully caught.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyItemScale(Terraria.Item,System.Single@)">
            <summary>
            Allows you to dynamically modify the given item's size for this player, similarly to the effect of the Titan Glove.
            </summary>
            <param name="item">The item to modify the scale of.</param>
            <param name="scale">
            The scale multiplier to be applied to the given item.<br></br>
            Will be 1.1 if the Titan Glove is equipped, and 1 otherwise.
            </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnHitAnything(System.Single,System.Single,Terraria.Entity)">
            <summary>
            This hook is called when a player damages anything, whether it be an NPC or another player, using anything, whether it be a melee weapon or a projectile. The x and y parameters are the coordinates of the victim parameter's center. <br/>
            Called on the local client. <br/>
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="victim"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanHitNPC(Terraria.NPC)">
            <summary>
            Allows you to determine whether a player can hit the given NPC. Returns true by default.
            </summary>
            <param name="target"></param>
            <returns>True by default</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanMeleeAttackCollideWithNPC(Terraria.Item,Microsoft.Xna.Framework.Rectangle,Terraria.NPC)">
            <summary>
            Allows you to determine whether a player melee attack can collide the given NPC by swinging a melee weapon. <br/>
            Use <see cref="M:Terraria.ModLoader.ModPlayer.CanHitNPCWithItem(Terraria.Item,Terraria.NPC)"/> instead for Guide Voodoo Doll-type effects.
            </summary>
            <param name="item">The weapon item the player is holding.</param>
            <param name="meleeAttackHitbox">Hitbox of melee attack.</param>>
            <param name="target">The target npc.</param>
            <returns>
            Return true to allow colliding the target, return false to block the player weapon from colliding the target, and return null to use the vanilla code for whether the target can be colliding by melee weapon. Returns null by default.
            </returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyHitNPC(Terraria.NPC,Terraria.NPC.HitModifiers@)">
            <summary>
            Allows you to modify the damage, knockback, etc that this player does to an NPC. <br/>
            This method is only called on the on the local client. <br/>
            </summary>
            <param name="target"></param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnHitNPC(Terraria.NPC,Terraria.NPC.HitInfo,System.Int32)">
            <summary>
            Allows you to create special effects when this player hits an NPC by swinging a melee weapon (for example how the Pumpkin Sword creates pumpkin heads).
            </summary>
            <param name="target"></param>
            <param name="hit"></param>
            <param name="damageDone"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanHitNPCWithItem(Terraria.Item,Terraria.NPC)">
            <summary>
            Allows you to determine whether a player can hit the given NPC by swinging a melee weapon. Return true to allow hitting the target, return false to block this player from hitting the target, and return null to use the vanilla code for whether the target can be hit. Returns null by default.
            </summary>
            <param name="item"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyHitNPCWithItem(Terraria.Item,Terraria.NPC,Terraria.NPC.HitModifiers@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that this player does to an NPC by swinging a melee weapon. <br/>
            This method is only called on the on the client of the player holding the weapon. <br/>
            </summary>
            <param name="item"></param>
            <param name="target"></param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnHitNPCWithItem(Terraria.Item,Terraria.NPC,Terraria.NPC.HitInfo,System.Int32)">
            <summary>
            Allows you to create special effects when this player hits an NPC by swinging a melee weapon (for example how the Pumpkin Sword creates pumpkin heads).
            </summary>
            <param name="item"></param>
            <param name="target"></param>
            <param name="hit"></param>
            <param name="damageDone"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanHitNPCWithProj(Terraria.Projectile,Terraria.NPC)">
            <summary>
            Allows you to determine whether a projectile created by this player can hit the given NPC. Return true to allow hitting the target, return false to block this projectile from hitting the target, and return null to use the vanilla code for whether the target can be hit. Returns null by default.
            </summary>
            <param name="proj"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyHitNPCWithProj(Terraria.Projectile,Terraria.NPC,Terraria.NPC.HitModifiers@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that a projectile created by this player does to an NPC.
            </summary>
            <param name="proj"></param>
            <param name="target"></param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnHitNPCWithProj(Terraria.Projectile,Terraria.NPC,Terraria.NPC.HitInfo,System.Int32)">
            <summary>
            Allows you to create special effects when a projectile created by this player hits an NPC (for example, inflicting debuffs).
            </summary>
            <param name="proj"></param>
            <param name="target"></param>
            <param name="hit"></param>
            <param name="damageDone"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanHitPvp(Terraria.Item,Terraria.Player)">
            <summary>
            Allows you to determine whether a melee weapon swung by this player can hit the given opponent player. Return false to block this weapon from hitting the target. Returns true by default.
            </summary>
            <param name="item"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanHitPvpWithProj(Terraria.Projectile,Terraria.Player)">
            <summary>
            Allows you to determine whether a projectile created by this player can hit the given opponent player. Return false to block the projectile from hitting the target. Returns true by default.
            </summary>
            <param name="proj"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanBeHitByNPC(Terraria.NPC,System.Int32@)">
            <summary>
            Allows you to determine whether the given NPC can hit this player. Return false to block this player from being hit by the NPC. Returns true by default. CooldownSlot determines which of the player's cooldown counters to use (-1, 0, or 1), and defaults to -1.
            </summary>
            <param name="npc"></param>
            <param name="cooldownSlot"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyHitByNPC(Terraria.NPC,Terraria.Player.HurtModifiers@)">
            <summary>
            Allows you to modify the damage, etc., that an NPC does to this player. <br/>
            Runs on the local client. <br/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnHitByNPC(Terraria.NPC,Terraria.Player.HurtInfo)">
            <summary>
            Allows you to create special effects when an NPC hits this player (for example, inflicting debuffs). <br/>
            Runs on the local client. <br/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanBeHitByProjectile(Terraria.Projectile)">
            <summary>
            Allows you to determine whether the given hostile projectile can hit this player. Return false to block this player from being hit. Returns true by default.
            </summary>
            <param name="proj"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyHitByProjectile(Terraria.Projectile,Terraria.Player.HurtModifiers@)">
            <summary>
            Allows you to modify the damage, etc., that a hostile projectile does to this player. <br/>
            Runs on the local client. <br/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnHitByProjectile(Terraria.Projectile,Terraria.Player.HurtInfo)">
            <summary>
            Allows you to create special effects when a hostile projectile hits this player. <br/>
            Runs on the local client. <br/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyFishingAttempt(Terraria.DataStructures.FishingAttempt@)">
            <summary>
            Allows you to change information about the ongoing fishing attempt before caught items/NPCs are decided, after all vanilla information has been gathered.
            <br/>Will not be called if various conditions for getting a catch aren't met, meaning you can't modify those.
            <br/>Setting <see cref="F:Terraria.DataStructures.FishingAttempt.rolledItemDrop"/> or <see cref="F:Terraria.DataStructures.FishingAttempt.rolledEnemySpawn"/> is not allowed and will be reset, use <see cref="M:Terraria.ModLoader.ModPlayer.CatchFish(Terraria.DataStructures.FishingAttempt,System.Int32@,System.Int32@,Terraria.AdvancedPopupRequest@,Microsoft.Xna.Framework.Vector2@)"/> for that.
            </summary>
            <param name="attempt">The structure containing most data from the vanilla fishing attempt</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CatchFish(Terraria.DataStructures.FishingAttempt,System.Int32@,System.Int32@,Terraria.AdvancedPopupRequest@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Allows you to change the item or enemy the player gets when successfully catching an item or NPC. The Fishing Attempt structure contains most information about the vanilla event, including the Item Rod and Bait used by the player, the liquid it is being fished on, and so on.
            The Sonar and Sonar position fields allow you to change the text, color, velocity and position of the catch's name (be it item or NPC) freely
            </summary>
            <param name="attempt">The structure containing most data from the vanilla fishing attempt</param>
            <param name="itemDrop">The item that will be created when this fishing attempt succeeds. leave &lt;0 for no item</param>
            <param name="npcSpawn">The enemy that will be spawned if there is no item caught. leave &lt;0 for no NPC spawn</param>
            <param name="sonar">Fill all of this structure's fields to override the sonar text, or make sonar.Text null to disable custom sonar</param>
            <param name="sonarPosition">The position the Sonar text will spawn. Bobber location by default.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyCaughtFish(Terraria.Item)">
            <summary>
            Allows you to modify the item caught by the fishing player, including stack
            </summary>
            <param name="fish">The item (Fish) to modify</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanConsumeBait(Terraria.Item)">
            <summary>
            Choose if this bait will be consumed or not when used for fishing. return null for vanilla behavior.
            Not consuming will always take priority over forced consumption
            </summary>
            <param name="bait">The item (bait) that would be consumed</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.GetFishingLevel(Terraria.Item,Terraria.Item,System.Single@)">
            <summary>
            Allows you to modify the player's fishing power. As an example of the type of stuff that should go here, the phase of the moon can influence fishing power.
            </summary>
            <param name="fishingRod"></param>
            <param name="bait"></param>
            <param name="fishingLevel"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.AnglerQuestReward(System.Single,System.Collections.Generic.List{Terraria.Item})">
            <summary>
            Allows you to add to, change, or remove from the items the player earns when finishing an Angler quest. The rareMultiplier is a number between 0.15 and 1 inclusively; the lower it is the higher chance there should be for the player to earn rare items.
            </summary>
            <param name="rareMultiplier"></param>
            <param name="rewardItems"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.GetDyeTraderReward(System.Collections.Generic.List{System.Int32})">
            <summary>
            Allows you to modify what items are possible for the player to earn when giving a Strange Plant to the Dye Trader.
            </summary>
            <param name="rewardPool"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.DrawEffects(Terraria.DataStructures.PlayerDrawSet,System.Single@,System.Single@,System.Single@,System.Single@,System.Boolean@)">
            <summary>
            Allows you to create special effects when this player is drawn, such as creating dust, modifying the color the player is drawn in, etc. The fullBright parameter makes it so that the drawn player ignores the modified color and lighting. Note that the fullBright parameter only works if r, g, b, and/or a is not equal to 1. Make sure to add the indexes of any dusts you create to drawInfo.DustCache, and the indexes of any gore you create to drawInfo.GoreCache. <br/>
            This will be called multiple times a frame if a player afterimage is being drawn. Check <code>if(drawinfo.shadow == 0f)</code> to do some logic only when drawing the original player image. For example, spawning dust only for the original player image is commonly the desired behavior.
            </summary>
            <param name="drawInfo"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <param name="a"></param>
            <param name="fullBright"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyDrawInfo(Terraria.DataStructures.PlayerDrawSet@)">
            <summary>
            Allows you to modify the drawing parameters of the player before drawing begins.
            </summary>
            <param name="drawInfo"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyDrawLayerOrdering(System.Collections.Generic.IDictionary{Terraria.ModLoader.PlayerDrawLayer,Terraria.ModLoader.PlayerDrawLayer.Position})">
            <summary>
            Allows you to reorder the player draw layers.
            This is called once at the end of mod loading, not during the game.
            Use with extreme caution, or risk breaking other mods.
            </summary>
            <param name="positions">Add/remove/change the positions applied to each layer here</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.HideDrawLayers(Terraria.DataStructures.PlayerDrawSet)">
            <summary>
            Allows you to modify the visibility of layers about to be drawn
            </summary>
            <param name="drawInfo"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyScreenPosition">
            <summary>
            Use this hook to modify <see cref="F:Terraria.Main.screenPosition"/> after weapon zoom and camera lerp have taken place.
            <br/> Also consider using <c>Main.instance.CameraModifiers.Add(CameraModifier);</c> as shown in ExampleMods MinionBossBody for screen shakes.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyZoom(System.Single@)">
            <summary>
            Use this to modify the zoom factor for the player. The zoom correlates to the percentage of half the screen size the zoom can reach. A value of -1 passed in means no vanilla scope is in effect. A value of 1.0 means the scope can zoom half a screen width/height away, putting the player on the edge of the game screen. Vanilla values include .8, .6666, and .5.
            </summary>
            <param name="zoom"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PlayerConnect">
            <summary>
            Called on clients when a player connects.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PlayerDisconnect">
            <summary>
            Called when a player disconnects.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnEnterWorld">
            <summary>
            Called on the LocalPlayer when that player enters the world. SP and Client. Only called on the player who is entering. A possible use is ensuring that UI elements are reset to the configuration specified in data saved to the ModPlayer. Can also be used for informational messages.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.OnRespawn">
            <summary>
            Called when a player respawns in the world.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ShiftClickSlot(Terraria.Item[],System.Int32,System.Int32)">
            <summary>
            Called whenever the player shift-clicks an item slot. This can be used to override default clicking behavior (ie. selling, trashing, moving items).
            </summary>
            <param name="inventory">The array of items the slot is part of.</param>
            <param name="context">The Terraria.UI.ItemSlot.Context of the inventory.</param>
            <param name="slot">The index in the inventory of the clicked slot.</param>
            <returns>Whether or not to block the default code (sell, trash, move, etc) from running. Returns false by default.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.HoverSlot(Terraria.Item[],System.Int32,System.Int32)">
            <summary>
            Called whenever the player hovers over an item slot. This can be used to override <see cref="F:Terraria.Main.cursorOverride"/>
            <br>See <see cref="T:Terraria.ID.CursorOverrideID"/> for cursor override style IDs</br>
            </summary>
            <param name="inventory">The array of items the slot is part of.</param>
            <param name="context">The Terraria.UI.ItemSlot.Context of the inventory.</param>
            <param name="slot">The index in the inventory of the hover slot.</param>
            <returns>Whether or not to block the default code that modifies <see cref="F:Terraria.Main.cursorOverride"/> from running. Returns false by default.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostSellItem(Terraria.NPC,Terraria.Item[],Terraria.Item)">
            <summary>
            Called whenever the player sells an item to an NPC.
            </summary>
            <param name="vendor">The NPC vendor.</param>
            <param name="shopInventory">The current inventory of the NPC shop.</param>
            <param name="item">The item the player just sold.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanSellItem(Terraria.NPC,Terraria.Item[],Terraria.Item)">
            <summary>
            Return false to prevent a transaction. Called before the transaction.
            </summary>
            <param name="vendor">The NPC vendor.</param>
            <param name="shopInventory">The current inventory of the NPC shop.</param>
            <param name="item">The item the player is attempting to sell.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostBuyItem(Terraria.NPC,Terraria.Item[],Terraria.Item)">
            <summary>
            Called whenever the player buys an item from an NPC.
            </summary>
            <param name="vendor">The NPC vendor.</param>
            <param name="shopInventory">The current inventory of the NPC shop.</param>
            <param name="item">The item the player just purchased.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanBuyItem(Terraria.NPC,Terraria.Item[],Terraria.Item)">
            <summary>
            Return false to prevent a transaction. Called before the transaction.
            </summary>
            <param name="vendor">The NPC vendor.</param>
            <param name="shopInventory">The current inventory of the NPC shop.</param>
            <param name="item">The item the player is attempting to buy.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanUseItem(Terraria.Item)">
            <summary>
            Return false to prevent an item from being used. By default returns true.
            </summary>
            <param name="item">The item the player is attempting to use.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.CanAutoReuseItem(Terraria.Item)">
            <summary>
            Allows you to modify the autoswing (auto-reuse) behavior of any item without having to mess with Item.autoReuse.
            <br>Useful to create effects like the Feral Claws which makes melee weapons and whips auto-reusable.</br>
            <br>Return true to enable autoswing (if not already enabled through autoReuse), return false to prevent autoswing. Returns null by default, which applies vanilla behavior.</br>
            </summary>
            <param name="item"> The item. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyNurseHeal(Terraria.NPC,System.Int32@,System.Boolean@,System.String@)">
            <summary>
            Called on the Client while the nurse chat is displayed. Return false to prevent the player from healing. If you return false, you need to set chatText so the user knows why they can't heal.
            </summary>
            <param name="nurse">The Nurse NPC instance.</param>
            <param name="health">How much health the player gains.</param>
            <param name="removeDebuffs">If set to false, debuffs will not be healed.</param>
            <param name="chatText">Set this to the Nurse chat text that will display if healing is prevented.</param>
            <returns>True by default. False to prevent nurse services.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyNursePrice(Terraria.NPC,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Called on the Client while the nurse chat is displayed and after ModifyNurseHeal. Allows custom pricing for Nurse services. See the <see href="https://terraria.wiki.gg/wiki/Nurse">Nurse wiki page</see> for the default pricing.
            </summary>
            <param name="nurse">The Nurse NPC instance.</param>
            <param name="health">How much health the player gains.</param>
            <param name="removeDebuffs">Whether or not debuffs will be healed.</param>
            <param name="price"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.PostNurseHeal(Terraria.NPC,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Called on the Client after the player heals themselves with the Nurse NPC.
            </summary>
            <param name="nurse">The Nurse npc providing the heal.</param>
            <param name="health">How much health the player gained.</param>
            /// <param name="removeDebuffs">Whether or not debuffs were healed.</param>
            <param name="price">The price the player paid in copper coins.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.AddStartingItems(System.Boolean)">
            <summary>
            Called when the player is created in the menu.
            You can use this method to add items to the player's starting inventory, as well as their inventory when they respawn in mediumcore.
            </summary>
            <param name="mediumCoreDeath">Whether you are setting up a mediumcore player's inventory after their death.</param>
            <returns>An enumerable of the items you want to add. If you want to add nothing, return Enumerable.Empty&lt;Item&gt;().</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.ModifyStartingInventory(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Collections.Generic.List{Terraria.Item}},System.Boolean)">
            <summary>
            Allows you to modify the items that will be added to the player's inventory. Useful if you want to stop vanilla or other mods from adding an item.
            You can access a mod's items by using the mod's internal name as the indexer, such as: additions["ModName"]. To access vanilla items you can use "Terraria" as the index.
            </summary>
            <param name="itemsByMod">The items that will be added. Each key is the internal mod name of the mod adding the items. Vanilla items use the "Terraria" key.</param>
            <param name="mediumCoreDeath">Whether you are setting up a mediumcore player's inventory after their death.</param>
        </member>
        <member name="T:Terraria.ModLoader.ModPlayer.ItemConsumedCallback">
            <summary>
            An action to be invoked when an item is partially or fully consumed
            </summary>
            <param name="item">The item that has been consumed. May have been set to air if the item was fully consumed.</param>
            <param name="index">The index of the item enumerated in IEnumerable&lt;Item&gt;</param>
        </member>
        <member name="M:Terraria.ModLoader.ModPlayer.AddMaterialsForCrafting(Terraria.ModLoader.ModPlayer.ItemConsumedCallback@)">
            <summary>
            Called when Recipe.FindRecipes is called or the player is crafting an item
            You can use this method to add items as the materials that may be used for crafting items
            </summary>
            <param name="itemConsumedCallback">The action that gets invoked when the item is consumed</param>
            <returns>A list of the items that may be used as crafting materials or null if none are available.</returns>
        </member>
        <member name="F:Terraria.ModLoader.PrefixCategory.Melee">
            <summary>
            Can modify the size of the weapon
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.PrefixCategory.Ranged">
            <summary>
            Can modify the shoot speed of the weapon
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.PrefixCategory.Magic">
            <summary>
            Can modify the mana usage of the weapon
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.PrefixCategory.Custom">
            <summary>
            Will not appear by default. Useful as prefixes for your own damage type.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModPrefix.Category">
            <summary>
            The category your prefix belongs to, PrefixCategory.Custom by default
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPrefix.RollChance(Terraria.Item)">
            <summary>
            The roll chance of your prefix relative to a vanilla prefix, 1f by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPrefix.CanRoll(Terraria.Item)">
            <summary>
            Returns if your ModPrefix can roll on the given item
            By default returns RollChance(item) > 0
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPrefix.SetStats(System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Int32@)">
            <summary>
            Sets the stat changes for this prefix. If data is not already pre-stored, it is best to store custom data changes to some static variables.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPrefix.AllStatChangesHaveEffectOn(Terraria.Item)">
            <summary>
            Use this to check whether modifiers to custom stats would be too small to have an effect after rounding, and prevent the prefix from being applied to the given item if there would be no change.
            <para/>Vanilla stat changes (<seealso cref="M:Terraria.ModLoader.ModPrefix.SetStats(System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Int32@)"/>) are checked automatically, so there is no need to override this method to check them
            </summary>
            <returns>false to prevent the prefix from being applied</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModPrefix.Apply(Terraria.Item)">
            <summary>
            Applies the custom data stats set in SetStats to the given item.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPrefix.ModifyValue(System.Single@)">
            <summary>
            Allows you to modify the sell price of the item based on the prefix or changes in custom data stats. This also influences the item's rarity.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPrefix.ApplyAccessoryEffects(Terraria.Player)">
            <summary>
            Use this to modify player stats (or any other applicable data) based on this ModPrefix.
            </summary>
            <param name="player"> The player gaining the benefits of this accessory. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPrefix.GetTooltipLines(Terraria.Item)">
            <summary>
            Use this to add tooltips to any item with this prefix applied. Note that the stat bonuses applied via <see cref="M:Terraria.ModLoader.ModPrefix.SetStats(System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Int32@)"/> will automatically generate tooltips. (such as damage, use speed, crit chance, mana cost, scale, shoot speed, and knockback)<br/>
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModProjectile">
            <summary>
            This class serves as a place for you to place all your properties and hooks for each projectile. Create instances of ModProjectile (preferably overriding this class) to pass as parameters to Mod.AddProjectile.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Projectile">Basic Projectile Guide</see> teaches the basics of making a modded projectile.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.Projectile">
            <summary> The projectile object that this ModProjectile controls. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.Type">
            <summary>  Shorthand for Projectile.type; </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.DisplayName">
            <summary> The translations for the display name of this projectile. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.AIType">
            <summary> Determines which type of vanilla projectile this ModProjectile will copy the behavior (AI) of. Leave as 0 to not copy any behavior. Defaults to 0. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.CooldownSlot">
            <summary> Determines which (<see cref="T:Terraria.ID.ImmunityCooldownID"/>) to use when this projectile damages a player. Defaults to -1. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.DrawOffsetX">
            <summary> How far to the right of its position this projectile should be drawn. Defaults to 0. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.DrawOriginOffsetY">
            <summary> The vertical origin offset from the projectile's center when it is drawn. The origin is essentially the point of rotation. This field will also determine the vertical drawing offset of the projectile. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.DrawOriginOffsetX">
            <summary> The horizontal origin offset from the projectile's center when it is drawn. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.DrawHeldProjInFrontOfHeldItemAndArms">
            <summary> If this projectile is held by the player, determines whether it is drawn in front of or behind the player's arms. Defaults to false. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.Texture">
            <summary>
            The file name of this type's texture file in the mod loader's file space.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModProjectile.GlowTexture">
            <summary> The file name of this projectile's glow texture file in the mod loader's file space. If it does not exist it is ignored. </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.SetDefaults">
            <summary>
            Allows you to set all your projectile's properties, such as width, damage, aiStyle, penetrate, etc.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.OnSpawn(Terraria.DataStructures.IEntitySource)">
            <summary>
            Gets called when your projectiles spawns in world.<br/>
            Called on the client or server spawning the projectile via Projectile.NewProjectile.<br/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.AutoStaticDefaults">
            <summary>
            Automatically sets certain static defaults. Override this if you do not want the properties to be set for you.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.PreAI">
            <summary>
            Allows you to determine how this projectile behaves. Return false to stop the vanilla AI and the AI hook from being run. Returns true by default.
            </summary>
            <returns>Whether or not to stop other AI.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.AI">
            <summary>
            Allows you to determine how this projectile behaves. This will only be called if PreAI returns true.
            <br/> The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Projectile#custom-ai">Basic Projectile Guide</see> teaches the basics of writing a custom AI, such as timers, gravity, rotation, etc.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.PostAI">
            <summary>
            Allows you to determine how this projectile behaves. This will be called regardless of what PreAI returns.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.SendExtraAI(System.IO.BinaryWriter)">
            <summary>
            If you are storing AI information outside of the Projectile.ai array, use this to send that AI information between clients and servers, which will be handled in <see cref="M:Terraria.ModLoader.ModProjectile.ReceiveExtraAI(System.IO.BinaryReader)"/>.
            <br/>Called whenever <see cref="F:Terraria.ID.MessageID.SyncProjectile"/> is successfully sent, for example on projectile creation, or whenever Projectile.netUpdate is set to true in the update loop for that tick.
            <br/>Can be called on both server and client, depending on who owns the projectile.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.ReceiveExtraAI(System.IO.BinaryReader)">
            <summary>
            Use this to receive information that was sent in <see cref="M:Terraria.ModLoader.ModProjectile.SendExtraAI(System.IO.BinaryWriter)"/>.
            <br/>Called whenever <see cref="F:Terraria.ID.MessageID.SyncProjectile"/> is successfully received.
            <br/>Can be called on both server and client, depending on who owns the projectile.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.ShouldUpdatePosition">
            <summary>
            Whether or not this projectile should update its position based on factors such as its velocity, whether it is in liquid, etc. Return false to make its velocity have no effect on its position. Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.TileCollideStyle(System.Int32@,System.Int32@,System.Boolean@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Allows you to determine how this projectile interacts with tiles. Return false if you completely override or cancel this projectile's tile collision behavior. Returns true by default.
            </summary>
            <param name="width"> The width of the hitbox this projectile will use for tile collision. If vanilla doesn't modify it, defaults to Projectile.width. </param>
            <param name="height"> The height of the hitbox this projectile will use for tile collision. If vanilla doesn't modify it, defaults to Projectile.height. </param>
            <param name="fallThrough"> Whether or not this projectile falls through platforms and similar tiles. </param>
            <param name="hitboxCenterFrac"> Determines by how much the tile collision hitbox's position (top left corner) will be offset from this projectile's real center. If vanilla doesn't modify it, defaults to half the hitbox size (new Vector2(0.5f, 0.5f)). </param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.OnTileCollide(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Allows you to determine what happens when this projectile collides with a tile. OldVelocity is the velocity before tile collision. The velocity that takes tile collision into account can be found with Projectile.velocity. Return true to allow the vanilla tile collision code to take place (which normally kills the projectile). Returns true by default.
            </summary>
            <param name="oldVelocity">The velocity of the projectile upon collision.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.CanCutTiles">
            <summary>
            Return true or false to specify if the projectile can cut tiles like vines, pots, and Queen Bee larva. Return null for vanilla decision.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.CutTiles">
            <summary>
            Code ran when the projectile cuts tiles. Only runs if CanCutTiles() returns true. Useful when programming lasers and such.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.PreKill(System.Int32)">
            <summary>
            Allows you to determine whether the vanilla code for Kill and the Kill hook will be called. Return false to stop them from being called. Returns true by default. Note that this does not stop the projectile from dying.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.Kill(System.Int32)">
            <summary>
            Allows you to control what happens when this projectile is killed (for example, creating dust or making sounds). Also useful for creating retrievable ammo. Called on all clients and the server in multiplayer, so be sure to use `if (Projectile.owner == Main.myPlayer)` if you are spawning retrievable ammo. (As seen in ExampleJavelinProjectile)
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.CanDamage">
            <summary>
            Whether or not this projectile is capable of killing tiles (such as grass) and damaging NPCs/players.
            Return false to prevent it from doing any sort of damage.
            Return true if you want the projectile to do damage regardless of the default blacklist.
            Return null to let the projectile follow vanilla can-damage-anything rules. This is what happens by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.MinionContactDamage">
            <summary>
            Whether or not this minion can damage NPCs by touching them. Returns false by default. Note that this will only be used if this projectile is considered a pet.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.ModifyDamageHitbox(Microsoft.Xna.Framework.Rectangle@)">
            <summary>
            Allows you to change the hitbox used by this projectile for damaging players and NPCs.
            </summary>
            <param name="hitbox"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.CanHitNPC(Terraria.NPC)">
            <summary>
            Allows you to determine whether this projectile can hit the given NPC. Return true to allow hitting the target, return false to block this projectile from hitting the target, and return null to use the vanilla code for whether the target can be hit. Returns null by default.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.ModifyHitNPC(Terraria.NPC,Terraria.NPC.HitModifiers@)">
            <summary>
            Allows you to modify the damage, knockback, etc., that this projectile does to an NPC. This method is only called for the owner of the projectile, meaning that in multi-player, projectiles owned by a player call this method on that client, and projectiles owned by the server such as enemy projectiles call this method on the server.
            </summary>
            <param name="target">The target.</param>
            <param name="modifiers">The modifiers for this strike.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.OnHitNPC(Terraria.NPC,Terraria.NPC.HitInfo,System.Int32)">
            <summary>
            Allows you to create special effects when this projectile hits an NPC (for example, inflicting debuffs). This method is only called for the owner of the projectile, meaning that in multi-player, projectiles owned by a player call this method on that client, and projectiles owned by the server such as enemy projectiles call this method on the server.
            </summary>
            <param name="target">The target.</param>
            <param name="hit">The damage.</param>
            <param name="damageDone">The actual damage dealt to/taken by the NPC.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.CanHitPvp(Terraria.Player)">
            <summary>
            Allows you to determine whether this projectile can hit the given opponent player. Return false to block this projectile from hitting the target. Returns true by default.
            </summary>
            <param name="target">The target</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.CanHitPlayer(Terraria.Player)">
            <summary>
            Allows you to determine whether this hostile projectile can hit the given player. Return false to block this projectile from hitting the target. Returns true by default.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.ModifyHitPlayer(Terraria.Player,Terraria.Player.HurtModifiers@)">
            <summary>
            Allows you to modify the damage, etc., that this hostile projectile does to a player.
            </summary>
            <param name="target">The target.</param>
            <param name="modifiers"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.OnHitPlayer(Terraria.Player,Terraria.Player.HurtInfo)">
            <summary>
            Allows you to create special effects when this hostile projectile hits a player. <br/>
            Only runs on the local client in multiplayer.
            </summary>
            <param name="target">The target.</param>
            <param name="info"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.Colliding(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Allows you to use custom collision detection between this projectile and a player or NPC that this projectile can damage. Useful for things like diagonal lasers, projectiles that leave a trail behind them, etc.
            </summary>
            <param name="projHitbox">The hitbox of the projectile.</param>
            <param name="targetHitbox">The hitbox of the target.</param>
            <returns>Whether they collide or not.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.ModifyFishingLine(Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Color@)">
            <summary>
            If this projectile is a bobber, allows you to modify the origin of the fishing line that's connecting to the fishing pole, as well as the fishing line's color.
            </summary>
            <param name="lineOriginOffset"> The offset of the fishing line's origin from the player's center. </param>
            <param name="lineColor"> The fishing line's color, before being overridden by string color accessories. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.GetAlpha(Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to determine the color and transparency in which this projectile is drawn. Return null to use the default color (normally light and buff color). Returns null by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.PreDrawExtras">
            <summary>
            Allows you to draw things behind this projectile. Use the Main.EntitySpriteDraw method for drawing. Returns false to stop the game from drawing extras textures related to the projectile (for example, the chains for grappling hooks), useful if you're manually drawing the extras. Returns true by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.PreDraw(Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to draw things behind this projectile, or to modify the way it is drawn. Use the Main.EntitySpriteDraw method for drawing. Return false to stop the vanilla projectile drawing code (useful if you're manually drawing the projectile). Returns true by default.
            </summary>
            <param name="lightColor"> The color of the light at the projectile's center. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.PostDraw(Microsoft.Xna.Framework.Color)">
            <summary>
            Allows you to draw things in front of this projectile. Use the Main.EntitySpriteDraw method for drawing. This method is called even if PreDraw returns false.
            </summary>
            <param name="lightColor"> The color of the light at the projectile's center, after being modified by vanilla and other mods. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.CanUseGrapple(Terraria.Player)">
            <summary>
            This code is called whenever the player uses a grappling hook that shoots this type of projectile. Use it to change what kind of hook is fired (for example, the Dual Hook does this), to kill old hook projectiles, etc.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.UseGrapple(Terraria.Player,System.Int32@)">
            <summary>
            This code is called whenever the player uses a grappling hook that shoots this type of projectile. Use it to change what kind of hook is fired (for example, the Dual Hook does this), to kill old hook projectiles, etc.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.GrappleRange">
            <summary>
            How far away this grappling hook can travel away from its player before it retracts.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.NumGrappleHooks(Terraria.Player,System.Int32@)">
            <summary>
            How many of this type of grappling hook the given player can latch onto blocks before the hooks start disappearing. Change the numHooks parameter to determine this; by default it will be 3.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.GrappleRetreatSpeed(Terraria.Player,System.Single@)">
            <summary>
            The speed at which the grapple retreats back to the player after not hitting anything. Defaults to 11, but vanilla hooks go up to 24.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.GrapplePullSpeed(Terraria.Player,System.Single@)">
            <summary>
            The speed at which the grapple pulls the player after hitting something. Defaults to 11, but the Bat Hook uses 16.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.GrappleTargetPoint(Terraria.Player,System.Single@,System.Single@)">
            <summary>
            The location that the grappling hook pulls the player to. Defaults to the center of the hook projectile.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.GrappleCanLatchOnTo(Terraria.Player,System.Int32,System.Int32)">
            <summary>
            Whether or not the grappling hook can latch onto the given position in tile coordinates.
            <br/>This position may be air or an actuated tile!
            <br/>Return true to make it latch, false to prevent it, or null to apply vanilla conditions. Returns null by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModProjectile.DrawBehind(System.Int32,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})">
            <summary>
            When used in conjunction with "Projectile.hide = true", allows you to specify that this projectile should be drawn behind certain elements. Add the index to one and only one of the lists. For example, the Nebula Arcanum projectile draws behind NPCs and tiles.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModPylon">
            <summary>
            Extension to <seealso cref="T:Terraria.ModLoader.ModTile"/> that streamlines the process of creating a
            modded Pylon. Has all of ModTile's hooks for customization, but additional hooks for
            Pylon functionality.
            </summary>
            <remarks>
            One of the key features of this class is the <b>ValidTeleportCheck</b> process. At first glance it can look a bit
            messy, however here is a rough break-down of the call process to help you if you're lost:
            <br></br>
            1) Game queries if the specified player is near a Pylon (<seealso cref="M:Terraria.GameContent.TeleportPylonsSystem.IsPlayerNearAPylon(Terraria.Player)"/>)
            <br></br>
            2) Assuming Step 1 has passed, game queries if the DESTINATION PYLON (the pylon the player CLICKED on the map) has enough NPCs nearby (NPCCount step)
            <br></br>
            3) Assuming Step 2 has passed, game queries if there is ANY DANGER at ALL across the entire map, ignoring the lunar pillar event (AnyDanger step)
            <br></br>
            4) Assuming Step 3 has passed, game queries if the DESTINATION PYLON is in the Lihzahrd Temple before Plantera is defeated.
            <br></br>
            5) Assuming Step 4 has passed, game queries if the DESTINATION PYLON meets its biome specifications for whatever type of pylon it is (BiomeRequirements step)
            <br></br>
            6) Regardless of all the past checks, if the DESTINATION PYLON is a modded one, <seealso cref="M:Terraria.ModLoader.ModPylon.ValidTeleportCheck_DestinationPostCheck(Terraria.GameContent.TeleportPylonInfo,System.Boolean@,System.String@)"/> is called on it.
            <br></br>
            7) The game queries all pylons on the map and checks if any of them are in interaction distance with the player (<seealso cref="M:Terraria.Player.InInteractionRange(System.Int32,System.Int32,Terraria.DataStructures.TileReachCheckSettings)"/>), and if so, checks Step 2 on it. If Step 2 passes, Step 5 is then called on it as well (NPCCount &amp; BiomeRequirements step).
            If Step 5 also passes, the loop breaks and no further pylons are checked, and for the next steps, the pylon that succeeded will be the designated NEARBY PYLON.
            <br></br>
            8) Regardless of all the past checks, if the designated NEARBY PYLON is a modded one, <seealso cref="M:Terraria.ModLoader.ModPylon.ValidTeleportCheck_NearbyPostCheck(Terraria.GameContent.TeleportPylonInfo,System.Boolean@,System.Boolean@,System.String@)"/> is called on it.
            <br></br>
            9) Any <seealso cref="T:Terraria.ModLoader.GlobalPylon"/> instances run <seealso cref="M:Terraria.ModLoader.GlobalPylon.PostValidTeleportCheck(Terraria.GameContent.TeleportPylonInfo,Terraria.GameContent.TeleportPylonInfo,System.Boolean@,System.Boolean@,System.String@)"/>.
            <br></br>
            10) Finally, if all previous checks pass AND the DESTINATION pylon is a modded one, <seealso cref="M:Terraria.ModLoader.ModPylon.ModifyTeleportationPosition(Terraria.GameContent.TeleportPylonInfo,Microsoft.Xna.Framework.Vector2@)"/> is called on it, right before the player is teleported.
            </remarks>
        </member>
        <member name="P:Terraria.ModLoader.ModPylon.PylonType">
            <summary>
            What type of Pylon this ModPylon represents.
            </summary>
            <remarks>
            The TeleportPylonType enum only has string names up until Count (9). The very first modded pylon to be added will
            technically be accessible with the enum type of "Count" since that value isn't an actual "type" of pylon, and modded
            pylons are assigned IDs starting with the Count value (9). All other modded pylons added after 9 (i.e 10+) will have no
            enum name, and will only every be referred to by their number values.
            </remarks>
        </member>
        <member name="M:Terraria.ModLoader.ModPylon.CanPlacePylon">
            <summary>
            Whether or not this Pylon can even be placed.
            By default, it returns false if a Pylon of this type already exists in the world,
            otherwise true. If you want to allow an infinite amount of these pylons to be placed,
            simply always return true.
            </summary>
            <remarks>
            Note that in Multiplayer environments, granted that any GlobalPylon instances do not return false in <seealso cref="M:Terraria.ModLoader.GlobalPylon.PreCanPlacePylon(System.Int32,System.Int32,System.Int32,Terraria.GameContent.TeleportPylonType)"/>,
            this is called first on the client, and then is subsequently called &amp; double checked on the server.
            <br>If the server disagrees with the client that the given pylon CANNOT be placed for any given reason, the server will reject the placement
            and subsequently break the associated tile.</br>
            </remarks>
        </member>
        <member name="M:Terraria.ModLoader.ModPylon.GetNPCShopEntry">
            <summary>
            Creates the npc shop entry which will be registered to the shops of all NPCs which can sell pylons. <br/>
            Override this to change the sold item type, or alter the conditions of sale. <br/>
            Return null to prevent automatically registering this pylon in shops. <br/>
            By default, the pylon will be sold in all shops when the provided conditions are met, if the pylon has a non-zero item drop.<br/>
            <br/>
            The standard pylon conditions are <see cref="F:Terraria.Condition.HappyEnoughToSellPylons"/>, <see cref="F:Terraria.Condition.AnotherTownNPCNearby"/>, <see cref="F:Terraria.Condition.NotInEvilBiome"/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModPylon.ValidTeleportCheck_NPCCount(Terraria.GameContent.TeleportPylonInfo,System.Int32)">
            <summary>
            Step 1 of the ValidTeleportCheck process. This is the first vanilla check that is called when
            checking both the destination pylon and any possible nearby pylons. This check should be where you check
            how many NPCs are nearby, returning false if the Pylon does not satisfy the conditions.
            By default, returns true if there are 2 or more NPCs nearby.
            </summary>
            <remarks>
            Note that it's important you put the right checks in the right ValidTeleportCheck step,
            as whatever one returns false (if any) will determine the error message sent to the player.
            <br></br>
            <b> If you're confused about the order of which the ValidTeleportCheck methods are called, check out the XML summary
            on the ModPylon class.</b>
            </remarks>
            <param name="pylonInfo"> The internal information pertaining to the current pylon being teleported to or from. </param>
            <param name="defaultNecessaryNPCCount"> The default amount of NPCs nearby required to satisfy a VANILLA pylon. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPylon.ValidTeleportCheck_AnyDanger(Terraria.GameContent.TeleportPylonInfo)">
            <summary>
            Step 2 of the ValidTeleportCheck process. This is the second vanilla check that is called when
            checking the destination pylon. This check should be where you check
            if there is any "Danger" nearby, such as bosses or if there is an event happening.
            It is unlikely you will need to use this.
            By default, returns true if there are not any events happening (Lunar Pillars do not count)
            and there are no bosses currently alive.
            </summary>
            <remarks>
            Note that it's important you put the right checks in the right ValidTeleportCheck step,
            as whatever one returns false (if any) will determine the error message sent to the player.
            <br></br>
            <b> If you're confused about the order of which the ValidTeleportCheck methods are called, check out the XML summary
            on the ModPylon class.</b>
            </remarks>
            <param name="pylonInfo"> The internal information pertaining to the current pylon being teleported TO. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPylon.ValidTeleportCheck_BiomeRequirements(Terraria.GameContent.TeleportPylonInfo,Terraria.SceneMetrics)">
            <summary>
            Step 3 of the ValidTeleportCheck process. This is the fourth vanilla check that is called when
            checking both the destination pylon and any possible nearby pylons. This check should be where you check biome related
            things, such as the simple check of whether or not the Pylon is in the proper biome.
            By default, returns true.
            </summary>
            <remarks>
            Note that it's important you put the right checks in the right ValidTeleportCheck step,
            as whatever one returns false (if any) will determine the error message sent to the player.
            <br></br>
            <b> If you're confused about the order of which the ValidTeleportCheck methods are called, check out the XML summary
            on the ModPylon class.</b>
            </remarks>
            <param name="pylonInfo"> The internal information pertaining to the current pylon being teleported to or from. </param>
            <param name="sceneData"> The scene metrics data AT THE LOCATION of the destination pylon, NOT the player. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPylon.ValidTeleportCheck_DestinationPostCheck(Terraria.GameContent.TeleportPylonInfo,System.Boolean@,System.String@)">
            <summary>
            The 4th check of the ValidTeleportCheck process. This check is for modded Pylons only, called after
            ALL other checks have completed pertaining the pylon clicked on the map (the destination pylon), but before
            any nearby pylon information is calculated. This is where you an do custom checks that don't pertain to the past destination checks,
            as well as customize the localization key to give custom messages to the player on teleportation failure. By default, does nothing.
            <br></br>
            <b> If you're confused about the order of which the ValidTeleportCheck methods are called, check out the XML summary
            on the ModPylon class.</b>
            </summary>
            <param name="destinationPylonInfo"> The Pylon information for the Pylon that the player is attempt to teleport to. </param>
            <param name="destinationPylonValid"> Whether or not after all of the checks, the destination Pylon is valid. </param>
            <param name="errorKey"> The localization key for the message sent to the player if destinationPylonValid is false. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPylon.ValidTeleportCheck_NearbyPostCheck(Terraria.GameContent.TeleportPylonInfo,System.Boolean@,System.Boolean@,System.String@)">
            <summary>
            The 5th and final check of the ValidTeleportCheck process. This check is for modded Pylons only, called after
            ALL other checks have completed for the destination pylon and all normal checks have taken place for the nearby
            pylon, if applicable. This is where you can do custom checks that don't pertain to the past nearby pylon checks,
            as well as customize the localization key to give custom messages to the player on teleportation failure. By default, does nothing.
            <br></br>
            <b> If you're confused about the order of which the ValidTeleportCheck methods are called, check out the XML summary
            on the ModPylon class.</b>
            </summary>
            <param name="nearbyPylonInfo">
            The pylon information of the pylon the player in question is standing NEAR. This always has a value.
            </param>
            <param name="destinationPylonValid"> Whether or not after all of the checks, the destination Pylon is valid. </param>
            <param name="anyNearbyValidPylon"> Whether or not after all of the checks, there is a Pylon nearby to the player that is valid. </param>
            <param name="errorKey"> The localization key for the message sent to the player if destinationPylonValid is false. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPylon.ModifyTeleportationPosition(Terraria.GameContent.TeleportPylonInfo,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Called right BEFORE the teleportation of the player occurs, when all checks succeed during the ValidTeleportCheck process. Allows the modification
            of where the player ends up when the teleportation takes place. Remember that the teleport location is in WORLD coordinates, not tile coordinates.
            </summary>
            <remarks>
            You shouldn't need to use this method if your pylon is the same size as a normal vanilla pylons (3x4 tiles).
            </remarks>
            <param name="destinationPylonInfo"> The information of the pylon the player intends to teleport to. </param>
            <param name="teleportationPosition"> The position (IN WORLD COORDINATES) of where the player ends up when the teleportation occurs. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPylon.DrawMapIcon(Terraria.Map.MapOverlayDrawContext@,System.String@,Terraria.GameContent.TeleportPylonInfo,System.Boolean,Microsoft.Xna.Framework.Color,System.Single,System.Single)">
            <summary>
            Called when the map is visible, in order to draw the passed in Pylon on the map.
            In order to draw on the map, you must use <seealso cref="T:Terraria.Map.MapOverlayDrawContext"/>'s Draw Method. By default, doesn't draw anything.
            </summary>
            <param name="context"> The current map context on which you can draw. </param>
            <param name="mouseOverText"> The text that will overlay on the mouse when the icon is being hovered over. </param>
            <param name="pylonInfo"> The pylon that is currently needing its icon to be drawn. </param>
            <param name="isNearPylon"> Whether or not the player is currently near a pylon. </param>
            <param name="drawColor"> The draw color of the icon. This is bright white when the player is near a Pylon, but gray and translucent otherwise. </param>
            <param name="deselectedScale"> The scale of the icon if it is NOT currently being hovered over. In vanilla, this is 1f, or 100%. </param>
            <param name="selectedScale"> The scale of the icon if it IS currently being over. In vanilla, this is 2f, or 200%. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPylon.DefaultDrawPylonCrystal(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.Int32,ReLogic.Content.Asset{Microsoft.Xna.Framework.Graphics.Texture2D},ReLogic.Content.Asset{Microsoft.Xna.Framework.Graphics.Texture2D},Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Int32,System.Int32)">
            <summary>
            Draws the passed in pylon crystal texture the exact way that vanilla draws it. This MUST be called in SpecialDraw in order
            to function properly.
            </summary>
            <param name="spriteBatch"> The sprite batch that will draw the crystal. </param>
            <param name="i"> The X tile coordinate to start drawing from. </param>
            <param name="j"> The Y tile coordinate to start drawing from. </param>
            <param name="crystalTexture"> The texture of the crystal that will actually be drawn. </param>
            <param name="crystalHighlightTexture"> The texture of the smart cursor highlight for the corresponding crystal texture. </param>
            <param name="crystalOffset">
            The offset of the actual position of the crystal. Assuming that a pylon tile itself and the crystals are equivalent to
            vanilla's sizes, this value should be Vector2(0, -12).
            </param>
            <param name="pylonShadowColor"> The color of the "shadow" that is drawn on top of the crystal texture. </param>
            <param name="dustColor"> The color of the dust that emanates from the crystal. </param>
            <param name="dustChanceDenominator"> Every draw call, this is this the denominator value of a Main.rand.NextBool() (1/denominator chance) check for whether or not a dust particle will spawn. 4 is the value vanilla uses. </param>
            <param name="crystalVerticalFrameCount"> How many vertical frames the crystal texture has. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPylon.DefaultDrawMapIcon(Terraria.Map.MapOverlayDrawContext@,ReLogic.Content.Asset{Microsoft.Xna.Framework.Graphics.Texture2D},Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,System.Single)">
            <summary>
            Draws the passed in map icon texture for pylons the exact way that vanilla would draw it. Note that this method
            assumes that the texture is NOT framed, i.e there is only a single sprite that is not animated.
            Returns whether or not the player is currently hovering over the icon.
            </summary>
            <param name="context"> The draw context that will allow for drawing on thj</param>
            <param name="mapIcon"> The icon that is to be drawn on the map. </param>
            <param name="drawCenter"> The position in TILE coordinates for where the CENTER of the map icon should be. </param>
            <param name="drawColor"> The color to draw the icon as. </param>
            <param name="deselectedScale"> The scale to draw the map icon when it is not selected (not being hovered over). </param>
            <param name="selectedScale"> The scale to draw the map icon when it IS selected (being hovered over). </param>
        </member>
        <member name="M:Terraria.ModLoader.ModPylon.DefaultMapClickHandle(System.Boolean,Terraria.GameContent.TeleportPylonInfo,System.String,System.String@)">
            <summary>
            Handles mouse clicking on the map icon the exact way that vanilla handles it. In normal circumstances, this should be called
            directly after DefaultDrawMapIcon.
            </summary>
            <param name="mouseIsHovering"> Whether or not the map icon is currently being hovered over. </param>
            <param name="pylonInfo"> The information pertaining to the current pylon being drawn. </param>
            <param name="hoveringTextKey">
            The localization key that will be used to display text on the mouse, granted the mouse is currently hovering over the map icon.
            </param>
            <param name="mouseOverText"> The reference to the string value that actually changes the mouse text value. </param>
        </member>
        <member name="P:Terraria.ModLoader.ModRarity.RarityColor">
            <summary>
            Your ModRarity's color.
            Returns White by default.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModRarity.GetPrefixedRarity(System.Int32,System.Single)">
            <summary>
            Allows you to modify which rarities will come before and after this when a modifier is applied (since modifiers can affect rarity)
            </summary>
            <param name="offset">The amount by which the rarity would be offset in vanilla. -2 is the most it can go down, and +2 is the most it can go up by.</param>
            <param name="valueMult">The combined stat and prefix value scale. Can be used to implement super high or low value rarity adjustments outside normal vanilla ranges</param>
            <returns>The adjusted rarity type. Return <code>Type</code> for no change.</returns>
        </member>
        <member name="T:Terraria.ModLoader.ModResourceDisplaySet">
            <summary>
            This class serves as a place for you to define your own logic for drawing the player's life and mana resources.<br/>
            For modifying parts of the vanilla display sets, use <see cref="T:Terraria.ModLoader.ModResourceOverlay"/>.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModResourceDisplaySet.DisplayedName">
            <summary>
            Gets the name for this resource display set based on its DisplayName and the current culture
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModResourceDisplaySet.NameKey">
            <summary>
            Included only for completion's sake.  Returns DisplayName.Key
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModResourceDisplaySet.ConfigKey">
            <summary>
            The name used to get this resource display set.  Returns <see cref="P:Terraria.ModLoader.ModType.FullName"/>
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModResourceDisplaySet.DisplayName">
            <summary>
            The translations for the display name of this item.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModResourceDisplaySet.PlayerStats">
            <summary>
            The current snapshot of the life and mana stats for Main.LocalPlayer
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModResourceDisplaySet.PreDrawResources(Terraria.GameContent.UI.ResourceSets.PlayerStatsSnapshot)">
            <summary>
            Allows you to initialize fields, textures, etc. before drawing occurs
            </summary>
            <param name="snapshot">A copy of <see cref="P:Terraria.ModLoader.ModResourceDisplaySet.PlayerStats"/></param>
        </member>
        <member name="M:Terraria.ModLoader.ModResourceDisplaySet.DrawLife(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draw the life resources for your display set here
            </summary>
            <param name="spriteBatch"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModResourceDisplaySet.DrawMana(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draw the mana resources for your display set here
            </summary>
            <param name="spriteBatch"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModResourceDisplaySet.PreHover(System.Boolean@)">
            <summary>
            Allows you to specify if the vanilla life/mana hover text should display
            </summary>
            <param name="hoveringLife">Whether the hover text should be for life (<see langword="true"/>) or mana (<see langword="false"/>)</param>
        </member>
        <member name="T:Terraria.ModLoader.ModResourceOverlay">
            <summary>
            This class serves as a place for you to customize how the vanilla resource displays (Classic, Fancy and Bars) are drawn.<br/>
            For implementing your own resource displays, use <see cref="T:Terraria.ModLoader.ModResourceDisplaySet"/>.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModResourceOverlay.PreDrawResource(Terraria.ModLoader.ResourceOverlayDrawContext)">
            <summary>
            Allows you to draw below any resource (hearts, stars, bars or panels) in a display set
            </summary>
            <param name="context">Contains the drawing data for the resource being drawn.  You should use the ResourceOverlayDrawContext.Draw method for all drawing</param>
            <returns><see langword="true"/> if the intended resource sprite should draw, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModResourceOverlay.PostDrawResource(Terraria.ModLoader.ResourceOverlayDrawContext)">
            <summary>
            Allows you to draw on top of any resource (hearts, stars, bars or panels) in a display set
            </summary>
            <param name="context">Contains the drawing data for the resource being drawn.  You should use the ResourceOverlayDrawContext.Draw method for all drawing</param>
        </member>
        <member name="M:Terraria.ModLoader.ModResourceOverlay.PreDrawResourceDisplay(Terraria.GameContent.UI.ResourceSets.PlayerStatsSnapshot,Terraria.GameContent.UI.ResourceSets.IPlayerResourcesDisplaySet,System.Boolean,Microsoft.Xna.Framework.Color@,System.Boolean@)">
            <summary>
            Allows you to draw before the resources (hearts, stars, bars and/or panels) in a display set are drawn.<br/>
            If you want to implement your own display set, it is recommended to use <see cref="T:Terraria.ModLoader.ModResourceDisplaySet"/> instead of this hook.
            </summary>
            <param name="snapshot">A snapshot of the stats from Main.LocalPlayer</param>
            <param name="displaySet">The display set being drawn</param>
            <param name="drawingLife">
            Whether the life or mana display is going to be drawn.
            <see langword="true"/> if the life display is going to be drawn, <see langword="false"/> if the mana display is going to be drawn.
            </param>
            <param name="textColor">The color to draw the text above the resources with.  Only applies to the Classic display set.</param>
            <param name="drawText">Whether the text above the resources should draw.  Only applies to the Classic display set.</param>
            <returns>Whether the resources in the display set are drawn</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModResourceOverlay.PostDrawResourceDisplay(Terraria.GameContent.UI.ResourceSets.PlayerStatsSnapshot,Terraria.GameContent.UI.ResourceSets.IPlayerResourcesDisplaySet,System.Boolean,Microsoft.Xna.Framework.Color,System.Boolean)">
            <summary>
            Allows you to draw after the resources (hearts, stars, bars and/or panels) in a display set are drawn
            </summary>
            <param name="snapshot">A snapshot of the stats from Main.LocalPlayer</param>
            <param name="displaySet">The display set that was drawn</param>
            <param name="drawingLife">
            Whether the life or mana display was drawn.
            <see langword="true"/> if the life display was drawn, <see langword="false"/> if the mana display was drawn.
            </param>
            <param name="textColor">The color the text above the resources was drawn with.  Only applies to the Class display set.</param>
            <param name="drawText">Whether the text above the resources was drawn.  Only applies to the Classic display set.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModResourceOverlay.DisplayHoverText(Terraria.GameContent.UI.ResourceSets.PlayerStatsSnapshot,Terraria.GameContent.UI.ResourceSets.IPlayerResourcesDisplaySet,System.Boolean)">
            <summary>
            Allows you to specify if the hover text for a resource (life or mana) should be displayed
            </summary>
            <param name="snapshot">A snapshot of the stats from Main.LocalPlayer</param>
            <param name="displaySet">The display set that was drawn</param>
            <param name="drawingLife">
            Whether the life or mana display was drawn.
            <see langword="true"/> if the life display was drawn, <see langword="false"/> if the mana display was drawn.
            </param>
            <returns>Whether the hover text should be displayed</returns>
        </member>
        <member name="T:Terraria.ModLoader.ModSceneEffect">
            <summary>
            ModSceneEffect is an abstract class that your classes can derive from. It serves as a container for handling exclusive SceneEffect content such as backgrounds, music, and water styling.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModSceneEffect.WaterStyle">
            <summary>
            The ModWaterStyle that will apply to water.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModSceneEffect.SurfaceBackgroundStyle">
            <summary>
            The ModSurfaceBackgroundStyle that will draw its background when the player is on the surface.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModSceneEffect.UndergroundBackgroundStyle">
            <summary>
            The ModUndergroundBackgroundStyle that will draw its background when the player is underground.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModSceneEffect.Music">
            <summary>
            The music that will play. -1 for letting other music play, 0 for no music, >0 for the given music to play. Defaults to -1.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModSceneEffect.MapBackground">
            <summary>
            The path to the texture that will display behind the map. Should be 115x65.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModSceneEffect.Priority">
            <summary>
            The <see cref="T:Terraria.ModLoader.SceneEffectPriority"/> of this SceneEffect layer. Determines the relative position compared to a vanilla SceneEffect.
            Analogously, if SceneEffect were competing in a wrestling match, this would be the 'Weight Class' that this SceneEffect is competing in.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModSceneEffect.TileColorStyle">
            <summary>
            Used to apply secondary color shading for the capture camera. For example, darkening the background with the GlowingMushroom style.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSceneEffect.RegisterSceneEffect(Terraria.ModLoader.ModSceneEffect)">
            <summary>
            Forcefully registers the provided ModSceneEffect to LoaderManager.
            ModBiome and direct implementations call this.
            Does NOT cache the return type.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSceneEffect.GetWeight(Terraria.Player)">
            <summary>
            Is invoked when two or more modded SceneEffect layers are active within the same <see cref="P:Terraria.ModLoader.ModSceneEffect.Priority"/> group to attempt to determine which one should take precedence, if it matters.
            It's uncommon to have the need to assign a weight - you'd have to specifically believe that you don't need higher SceneEffectPriority, but do need to be the active SceneEffect within the priority you designated.
            Analogously, if SceneEffect were competing in a wrestling match, this would be how likely the SceneEffect should win within its weight class.
            Is intentionally bounded at a max of 100% (1) to reduce complexity. Defaults to 50% (0.5).
            Typical calculations may include: 1) how many tiles are present as a percentage of target amount; 2) how far away you are from the cause of the SceneEffect
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSceneEffect.GetCorrWeight(Terraria.Player)">
            <summary>
            Combines Priority and Weight to determine what SceneEffect should be active.
            Priority is used to do primary sorting with respect to vanilla SceneEffect.
            Weight will be used if multiple SceneEffect have the same SceneEffectPriority so as to attempt to distinguish them based on their needs.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSceneEffect.IsSceneEffectActive(Terraria.Player)">
            <summary>
            Return true to make the SceneEffect apply its effects (as long as its priority and weight allow that).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSceneEffect.SpecialVisuals(Terraria.Player,System.Boolean)">
            <summary>
            Allows you to create special visual effects in the area around the player. For example, the Blood Moon's red filter on the screen or the Slime Rain's falling slime in the background. You must create classes that override <see cref="T:Terraria.Graphics.Shaders.ScreenShaderData"/> or <see cref="T:Terraria.Graphics.Effects.CustomSky"/>, add them in a Load hook, then call <see cref="M:Terraria.Player.ManageSpecialBiomeVisuals(System.String,System.Boolean,Microsoft.Xna.Framework.Vector2)"/>. See the ExampleMod if you do not have access to the source code.
            <br/> This runs even if <see cref="M:Terraria.ModLoader.ModSceneEffect.IsSceneEffectActive(Terraria.Player)"/> returns false. Check <paramref name="isActive"/> for the active status.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModSide">
            <summary>A ModSide enum defines how mods are synced between clients and servers. You can set your mod's ModSide from its build.txt file.</summary>
        </member>
        <member name="F:Terraria.ModLoader.ModSide.Both">
            <summary>The default value for ModSide. This means that the mod has effects both client-side and server-side. When a client connects to a server, this mod will be disabled if the server does not have it. If a client without this mod connects to a server with this mod, the server will send this mod to the client and enable it. In general all mods that add game content should use this.</summary>
        </member>
        <member name="F:Terraria.ModLoader.ModSide.Client">
            <summary>This means that the mod only has effects client-side. This mod will not be disabled client-side if the server does not have it. This is useful for mods that only add controls (for example, keybinds), change textures/musics, etc.</summary>
        </member>
        <member name="F:Terraria.ModLoader.ModSide.Server">
            <summary>This means that the mod only has effects server-side. The server will not send this mod to every client that connects.</summary>
        </member>
        <member name="F:Terraria.ModLoader.ModSide.NoSync">
            <summary>This means that the mod could have effects client-side and could have effects server-side. The client will not download this mod if it connects to a server with this mod, and the client will not disable this mod if it connects to a server without this mod. If a client connects to a server and both have this mod, then IDs will still be synchronized. This is useful if you want optional extra features when both the client and server have this mod.</summary>
        </member>
        <member name="T:Terraria.ModLoader.ModSystem">
            <summary>
            ModSystem is an abstract class that your classes can derive from. It contains general-use hooks, and, unlike Mod, can have unlimited amounts of types deriving from it.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.SetupContent">
            <summary>
            Unlike other ModTypes, SetupContent is unsealed for you to do whatever you need. By default it just calls SetStaticDefaults.
            This is the place to finish initializing your mod's content. For content from other mods, and lookup tables, consider PostSetupContent
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.OnModLoad">
            <summary>
            This hook is called right after Mod.Load(), which is guaranteed to be called after all content has been autoloaded.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.OnModUnload">
            <summary>
            This hook is called right before Mod.UnLoad()
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostSetupContent">
            <summary>
            Allows you to load things in your system after the mod's content has been setup (arrays have been resized to fit the content, etc).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.OnLocalizationsLoaded">
            <summary>
            Allows mods to react to language changing. <br/>
            This happens whenever the language is changed, and when resource packs are reloaded.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.AddRecipes">
            <summary>
            Override this method to add <see cref="T:Terraria.Recipe"/>s to the game.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Recipes">Basic Recipes Guide</see> teaches how to add new recipes to the game and how to manipulate existing recipes.<br/>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostAddRecipes">
            <summary>
            This provides a hook into the mod-loading process immediately after recipes have been added.
            <br/> You can use this to edit recipes added by other mods.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostSetupRecipes">
            <summary>
            Override this method to do treatment about recipes once they have been setup. You shouldn't edit any recipe here.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.AddRecipeGroups">
            <summary>
            Override this method to add recipe groups to the game.
            <br/> You must add recipe groups by calling the <see cref="M:Terraria.RecipeGroup.RegisterGroup(System.String,Terraria.RecipeGroup)"/> method here.
            <br/> A recipe group is a set of items that can be used interchangeably in the same recipe.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.OnWorldLoad">
            <summary>
            Called whenever a world is loaded, before <see cref="M:Terraria.ModLoader.ModSystem.LoadWorldData(Terraria.ModLoader.IO.TagCompound)"/> <br/>
            If you need to initialize tile or other world related data-structures, use <see cref="M:Terraria.ModLoader.ModSystem.ClearWorld"/> instead
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.OnWorldUnload">
            <summary>
            Called whenever a world is unloaded.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ClearWorld">
            <summary>
            Called whenever the world is cleared. Use this reset world-related data structures before world-gen or loading in both single and multiplayer. <br/>
            Also called just before mods are unloaded.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifyScreenPosition">
            <summary>
            Use this hook to modify <see cref="F:Terraria.Main.screenPosition"/> after weapon zoom and camera lerp have taken place.
            <br/> Also consider using <c>Main.instance.CameraModifiers.Add(CameraModifier);</c> as shown in ExampleMods MinionBossBody for screen shakes.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifyTransformMatrix(Terraria.Graphics.SpriteViewMatrix@)">
            <summary>
            Allows you to set the transformation of the screen that is drawn. (Translations, rotations, scales, etc.)
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.UpdateUI(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Ran every update and suitable for calling Update for UserInterface classes
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateEntities">
            <summary>
            Use this if you want to do something before anything in the World gets updated.
            Called after UI updates, but before anything in the World (Players, NPCs, Projectiles, Tiles) gets updated.
            <para />
            When <see cref="F:Terraria.Main.autoPause" /> is true or <see cref="F:Terraria.Main.FrameSkipMode" /> is 0 or 2, the game may do a partial update. This means that it only updates menus and some animations, but not the World or Entities. This hook - and every hook after it - only gets called on frames with a full update.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdatePlayers">
            <summary>
            Called before Players get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdatePlayers">
            <summary>
            Called after Players get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateNPCs">
            <summary>
            Called before NPCs get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateNPCs">
            <summary>
            Called after NPCs get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateGores">
            <summary>
            Called before Gores get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateGores">
            <summary>
            Called after Gores get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateProjectiles">
            <summary>
            Called before Projectiles get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateProjectiles">
            <summary>
            Called after Projectiles get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateItems">
            <summary>
            Called before Items get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateItems">
            <summary>
            Called after Items get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateDusts">
            <summary>
            Called before Dusts get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateDusts">
            <summary>
            Called after Dusts get updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateTime">
            <summary>
            Called before Time gets updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateTime">
            <summary>
            Called after Time gets updated.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateWorld">
            <summary>
            Use this method to have things happen in the world. In vanilla Terraria, a good example of code suitable for this hook is how Falling Stars fall to the ground during the night.
            <para/> This hook is not called for multiplayer clients.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateWorld">
            <summary>
            Use this method to have things happen in the world. In vanilla Terraria, a good example of code suitable for this hook is how Falling Stars fall to the ground during the night.
            <para/> This hook is not called for multiplayer clients.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreUpdateInvasions">
            <summary>
            Called before Invasions get updated.
            <para/> This hook is not called for multiplayer clients.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateInvasions">
            <summary>
            Called after Invasions get updated.
            <para/> This hook is not called for multiplayer clients.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateEverything">
            <summary>
            Called after the Network got updated, this is the last hook that happens in an update.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifyInterfaceLayers(System.Collections.Generic.List{Terraria.UI.GameInterfaceLayer})">
            <summary>
            Allows you to modify the elements of the in-game interface that get drawn. GameInterfaceLayer can be found in the Terraria.UI namespace. Check the <see href="https://github.com/tModLoader/tModLoader/wiki/Vanilla-Interface-layers-values">Vanilla Interface layers values wiki page</see> for vanilla interface layer names
            </summary>
            <param name="layers">The layers.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifyGameTipVisibility(System.Collections.Generic.IReadOnlyList{Terraria.ModLoader.GameTipData})">
            <summary>
            Allows you to set the visibility of any added vanilla or modded GameTips. In order to add your OWN tips, add them in
            your localization file, with the key prefix of "Mods.ModName.GameTips".
            </summary>
            <param name="gameTips"> The current list of all added game tips. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostDrawInterface(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
             <summary>
             Called after interface is drawn but right before mouse and mouse hover text is drawn. Allows for drawing interface.
            
             Note: This hook should no longer be used. It is better to use the ModifyInterfaceLayers hook.
             </summary>
             <param name="spriteBatch">The sprite batch.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreDrawMapIconOverlay(System.Collections.Generic.IReadOnlyList{Terraria.Map.IMapLayer},Terraria.Map.MapOverlayDrawContext)">
            <summary>
            Called right before map icon overlays are drawn. Use this hook to selectively hide existing <see cref="T:Terraria.Map.IMapLayer"/> or <see cref="T:Terraria.ModLoader.ModMapLayer"/>
            </summary>
            <param name="layers"></param>
            <param name="mapOverlayDrawContext"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostDrawFullscreenMap(System.String@)">
            <summary>
            Called while the fullscreen map is active. Allows custom drawing to the map. Using <see cref="T:Terraria.ModLoader.ModMapLayer"/> is more compatible and allows drawing on the minimap and fullscreen maps.
            </summary>
            <param name="mouseText">The mouse text.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostUpdateInput">
            <summary>
            Called after the input keys are polled. Allows for modifying things like scroll wheel if your custom drawing should capture that.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreSaveAndQuit">
            <summary>
            Called in SP or Client when the Save and Quit button is pressed. One use for this hook is clearing out custom UI slots to return items to the player.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostDrawTiles">
            <summary>
            Called after drawing Tiles. Can be used for drawing a tile overlay akin to wires. Note that spritebatch should be begun and ended within this method.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifyTimeRate(System.Double@,System.Double@,System.Double@)">
            <summary>
            Called after all other time calculations. Can be used to modify the speed at which time should progress per tick in seconds, along with the rate at which the tiles in the world and the events in the world should update with it.
            All fields are measured in in-game minutes per real-life second (min/sec).
            You may want to consider <see cref="!:Main.fastForwardTime"/> and CreativePowerManager.Instance.GetPower&lt;CreativePowers.FreezeTime&gt;().Enabled here.
            </summary>
            <param name="timeRate">The speed at which time flows in min/sec.</param>
            <param name="tileUpdateRate">The speed at which tiles in the world update in min/sec.</param>
            <param name="eventUpdateRate">The speed at which various events in the world (weather changes, fallen star/fairy spawns, etc.) update in min/sec.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.SaveWorldData(Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to save custom data for this system in the current world. Useful for things like saving world specific flags.
            <br/>For example, if your mod adds a boss and you want certain NPC to only spawn once it has been defeated, this is where you would store the information that that boss has been defeated in this world.
            <br/>
            <br/><b>NOTE:</b> The provided tag is always empty by default, and is provided as an argument only for the sake of convenience and optimization.
            <br/><b>NOTE:</b> Try to only save data that isn't default values.
            </summary>
            <param name="tag"> The TagCompound to save data into. Note that this is always empty by default, and is provided as an argument only for the sake of convenience and optimization. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.LoadWorldData(Terraria.ModLoader.IO.TagCompound)">
            <summary>
            Allows you to load custom data you have saved for this system in the currently loading world.
            <br/><b>Try to write defensive loading code that won't crash if something's missing.</b>
            </summary>
            <param name="tag"> The TagCompound to load data from. </param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.CanWorldBePlayed(Terraria.IO.PlayerFileData,Terraria.IO.WorldFileData)">
            <summary>
            Allows you to prevent the world and player from being loaded/selected as a valid combination, similar to Journey Mode pairing.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.NetSend(System.IO.BinaryWriter)">
            <summary>
            Allows you to send custom data between clients and server, which will be handled in <see cref="M:Terraria.ModLoader.ModSystem.NetReceive(System.IO.BinaryReader)"/>. This is useful for syncing information such as bosses that have been defeated.
            <br/>Called whenever <see cref="F:Terraria.ID.MessageID.WorldData"/> is successfully sent, for example after a boss is defeated, a new day starts, or a player joins the server.
            <br/>Only called on the server.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.NetReceive(System.IO.BinaryReader)">
            <summary>
            Use this to receive information that was sent in <see cref="M:Terraria.ModLoader.ModSystem.NetSend(System.IO.BinaryWriter)"/>.
            <br/>Called whenever <see cref="F:Terraria.ID.MessageID.WorldData"/> is successfully received.
            <br/>Only called on the client.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.HijackGetData(System.Byte@,System.IO.BinaryReader@,System.Int32)">
            <summary>
            Allows you to modify net message / packet information that is received before the game can act on it.
            </summary>
            <param name="messageType">Type of the message.</param>
            <param name="reader">The reader.</param>
            <param name="playerNumber">The player number the message is from.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.HijackSendData(System.Int32,System.Int32,System.Int32,System.Int32,Terraria.Localization.NetworkText,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Hijacks the send data method. Only use if you absolutely know what you are doing. If any hooks return true, the message is not sent.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PreWorldGen">
            <summary>
            Allows a mod to run code before a world is generated.
            <br/>If you use this to initialize data used during worldgen, which you save on the world, also initialize it in <see cref="M:Terraria.ModLoader.ModSystem.OnWorldLoad"/>.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifyWorldGenTasks(System.Collections.Generic.List{Terraria.WorldBuilding.GenPass},System.Double@)">
            <summary>
            A more advanced option to PostWorldGen, this method allows you modify the list of Generation Passes before a new world begins to be generated. <para/>
            For example, removing the "Planting Trees" pass will cause a world to generate without trees. Placing a new Generation Pass before the "Dungeon" pass will prevent the the mod's pass from cutting into the dungeon.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.PostWorldGen">
            <summary>
            Use this method to place tiles in the world after world generation is complete.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ResetNearbyTileEffects">
            <summary>
            Use this to reset any fields you set in any of your ModTile.NearbyEffects hooks back to their default values.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifyHardmodeTasks(System.Collections.Generic.List{Terraria.WorldBuilding.GenPass})">
            <summary>
            Similar to ModifyWorldGenTasks, but occurs in-game when Hardmode starts. Can be used to modify which tasks should be done and/or add custom tasks. By default the list will only contain 4 items, the vanilla hardmode tasks called "Hardmode Good", "Hardmode Evil", "Hardmode Walls", and "Hardmode Announcement"
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifySunLightColor(Microsoft.Xna.Framework.Color@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify color of light the sun emits.
            </summary>
            <param name="tileColor">Tile lighting color</param>
            <param name="backgroundColor">Background lighting color</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.ModifyLightingBrightness(System.Single@)">
            <summary>
            Allows you to modify overall brightness of lights. Can be used to create effects similar to what night vision and darkness (de)buffs give you. Values too high or too low might result in glitches. For night vision effect use scale 1.03
            </summary>
            <param name="scale">Brightness scale</param>
        </member>
        <member name="M:Terraria.ModLoader.ModSystem.TileCountsAvailable(System.ReadOnlySpan{System.Int32})">
            <summary>
            Allows you to store information about how many of each tile is nearby the player. This is useful for counting how many tiles of a certain custom biome there are.
            <br/> The <paramref name="tileCounts"/> parameter is a read-only span (treat this as an array) that stores the tile count indexed by tile type.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModTexturedType">
            <summary>
            The base type for most modded things with textures.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTexturedType.Texture">
            <summary>
            The file name of this type's texture file in the mod loader's file space.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModTile">
            <summary>
            This class represents a type of tile that can be added by a mod. Only one instance of this class will ever exist for each type of tile that is added. Any hooks that are called will be called by the instance corresponding to the tile type. This is to prevent the game from using a massive amount of memory storing tile instances.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Tile">Basic Tile Guide</see> teaches the basics of making a modded tile.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTile.AnimationFrameHeight">
            <summary> The height of a group of animation frames for this tile. Defaults to 0, which disables animations. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTile.MineResist">
            <summary> A multiplier describing how much this block resists harvesting. Higher values will make it take longer to harvest. Defaults to 1f. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTile.MinPick">
            <summary> The minimum pickaxe power required for pickaxes to mine this block. Defaults to 0. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTile.AdjTiles">
            <summary> An array of the IDs of tiles that this tile can be considered as when looking for crafting stations. </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTile.HighlightTexture">
            <summary> The highlight texture used when this tile is selected by smart interact. Defaults to adding "_Highlight" onto the main texture. </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.AddToArray(System.Int32[]@)">
            <summary>
            A convenient method for adding this tile's Type to the given array. This can be used with the arrays in TileID.Sets.RoomNeeds.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.AddMapEntry(Microsoft.Xna.Framework.Color,Terraria.Localization.LocalizedText)">
            <summary>
            Adds an entry to the minimap for this tile with the given color and display name. This should be called in SetDefaults.
            <br/> For a typical tile that has a map display name, use <see cref="M:Terraria.ModLoader.ModBlockType.CreateMapEntryName"/> as the name parameter for a default key using the pattern "Mods.{ModName}.Tiles.{ContentName}.MapEntry".
            <br/> If a tile will be using multiple map entries, it is suggested to use <c>this.GetLocalization("CustomMapEntryName")</c>. Modders can also re-use the display name localization of items, such as <c>ModContent.GetInstance&lt;ItemThatPlacesThisStyle&gt;().DisplayName</c>. 
            <br/><br/> Multiple map entries are suitable for tiles that need a different color or hover text for different tile styles. Vanilla code uses this mostly only for chest and dresser tiles. Map entries will be given a corresponding map option value, counting from 0, according to the order in which they are added. Map option values don't necessarily correspond to tile styles.
            <br/> <see cref="M:Terraria.ModLoader.ModBlockType.GetMapOption(System.Int32,System.Int32)"/> will be used to choose which map entry is used for a given coordinate.
            <br/><br/> Vanilla map entries for most furniture tiles tend to be fairly generic, opting to use a single map entry to show "Table" for all styles of tables instead of the style-specific text such as "Wooden Table", "Honey Table", etc. To use these existing localizations, use the <see cref="M:Terraria.Localization.Language.GetText(System.String)"/> method with the appropriate key, such as "MapObject.Chair", "MapObject.Door", "ItemName.WorkBench", etc. Consult the source code or ExampleMod to find the existing localization keys for common furniture types.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.AddMapEntry(Microsoft.Xna.Framework.Color,Terraria.Localization.LocalizedText,System.Func{System.String,System.Int32,System.Int32,System.String})">
            <summary>
            <inheritdoc cref="M:Terraria.ModLoader.ModTile.AddMapEntry(Microsoft.Xna.Framework.Color,Terraria.Localization.LocalizedText)"/>
            <br/><br/> <b>Overload specific:</b> This overload has an additional <paramref name="nameFunc"/> parameter. This function will be used to dynamically adjust the hover text. The parameters for the function are the default display name, x-coordinate, and y-coordinate. This function is most typically used for chests and dressers to show the current chest name, if assigned, instead of the default chest name. <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/Tiles/Furniture/ExampleChest.cs">ExampleMod's ExampleChest</see> is one example of this functionality.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.RegisterItemDrop(System.Int32,System.Int32[])">
            <summary>
            Manually registers an item to drop for the provided tile styles. Use this for tile styles that don't have an item that places them. For example, open door tiles don't have any item that places them, but they should drop an item when destroyed. A tile style with no registered drop and no fallback drop will not drop anything when destroyed.<br/><br/>
            This method can also be used to register the fallback item drop. The fallback item will drop for any tile with a style that does not have a manual or automatic item drop.<br/>
            To register the fallback item, omit the tileStyles parameter.<br/><br/>
            If a mod removes content, manually specifying a replacement/fallback item allows users to recover something from the tile.<br/>
            If more control over tile item drops is required, such as conditional drops, custom data on dropped items, or multiple item drops, use <see cref="M:Terraria.ModLoader.ModTile.GetItemDrops(System.Int32,System.Int32)"/>.<br/>
            </summary>
            <param name="itemType"></param>
            <param name="tileStyles"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.PostSetDefaults">
            <summary>
            Allows you to override some default properties of this tile, such as Main.tileNoSunLight and Main.tileObsidianKill.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.HasSmartInteract(System.Int32,System.Int32,Terraria.GameContent.ObjectInteractions.SmartInteractScanSettings)">
            <summary>
            Whether or not the smart interact function can select this tile. Useful for things like chests. Defaults to false.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="settings">Use if you need special conditions, like settings.player.HasItem(ItemID.LihzahrdPowerCell)</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.ModifySmartInteractCoords(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Allows you to modify the smart interact parameters for the tile. Parameters already preset by deriving from TileObjectData defined for the tile.
            <br/>Example usage: Beds/Dressers which have separate interactions based on where to click.
            </summary>
            <param name="width">Amount of tiles in x direction for which the smart interact should select for</param>
            <param name="height">Amount of tiles in y direction for which the smart interact should select for</param>
            <param name="frameWidth">Width of each tile, in pixels</param>
            <param name="frameHeight">Height of each tile, in pixels</param>
            <param name="extraY">Additional offset applied after calculations with frameHeight, in pixels</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.ModifySittingTargetInfo(System.Int32,System.Int32,Terraria.DataStructures.TileRestingInfo@)">
            <summary>
            Modify the parameters for the entity sitting on this furniture tile with its type registered to <see cref="F:Terraria.ID.TileID.Sets.CanBeSatOnForPlayers"/>.
            <br/>This is also called on NPCs sitting on this tile! To access the entity (player or NPC), use info.restingEntity.
            <br/>This gets called when calling <see cref="M:Terraria.GameContent.PlayerSittingHelper.SitDown(Terraria.Player,System.Int32,System.Int32)"/>, when the town NPC decides to sit, and each tick while the player is sitting on a suitable furniture. i and j derived from "(entity.Bottom + new Vector2(0f, -2f)).ToTileCoordinates()" or from the tile coordinates the player clicked on.
            <br/>Formula: anchorTilePosition.ToWorldCoordinates(8f, 16f) + finalOffset + new Vector2(0, targetDirection * directionOffset).
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="info">The parameters for setting the anchor and offsets. You need to edit this</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.ModifySleepingTargetInfo(System.Int32,System.Int32,Terraria.DataStructures.TileRestingInfo@)">
            <summary>
            Modify the visual player offset when sleeping on this tile with its type registered to <see cref="F:Terraria.ID.TileID.Sets.CanBeSleptIn"/>.
            <br/>This gets called when calling <see cref="M:Terraria.GameContent.PlayerSleepingHelper.SetIsSleepingAndAdjustPlayerRotation(Terraria.Player,System.Boolean)"/>, and each tick while the player is resting in the bed, i and j derived from "(player.Bottom + new Vector2(0f, -2f)).ToTileCoordinates()" or from the tile coordinates the player clicked on.
            <br/>Formula: new Point(anchorTilePosition.X, anchorTilePosition.Y + 1).ToWorldCoordinates(8f, 16f) + finalOffset + new Vector2(0, targetDirection * directionOffset).
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="info">The parameters for setting the anchor and offsets. Default values match the regular vanilla bed.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.DropCritterChance(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Allows you to modify the chance the tile at the given coordinates has of spawning a certain critter when the tile is killed.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="wormChance">Chance for a worm to spawn. Value corresponds to a chance of 1 in X. Vanilla values include: Grass-400, Plants-200, Various Piles-6</param>
            <param name="grassHopperChance">Chance for a grass hopper to spawn. Value corresponds to a chance of 1 in X. Vanilla values include: Grass-100, Plants-50</param>
            <param name="jungleGrubChance">Chance for a jungle grub to spawn. Value corresponds to a chance of 1 in X. Vanilla values include: JungleVines-250, JunglePlants2-40, PlantDetritus-10</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.CanDrop(System.Int32,System.Int32)">
            <summary>
            Allows prevention of item drops from the tile dropping at the given coordinates. Return false to stop the game from dropping the tile's item(s). Returns true by default. See <see cref="M:Terraria.ModLoader.ModTile.GetItemDrops(System.Int32,System.Int32)"/> to customize the item drop.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.GetItemDrops(System.Int32,System.Int32)">
            <summary>
            Allows customization of the items the tile at the given coordinates drops.<br/><br/>
            The default item drop is determined by finding an item with <see cref="F:Terraria.Item.createTile"/> and <see cref="F:Terraria.Item.placeStyle"/> matching the type and style of this tile. 
            <see cref="M:Terraria.ModLoader.ModTile.RegisterItemDrop(System.Int32,System.Int32[])"/> can be used to manually register item drops for tile styles with no corresponding item. It can also be used to register a fallback item, which will be dropped if no suitable item is found.<br/><br/>
            The default behavior should cover 99% of use cases, meaning that overriding this method should only be necessary in extremely unique tiles, such as tiles dropping multiple items, tiles dropping items with custom data, or tiles with custom tile style code.<br/> 
            When overriding, use <c>yield return new Item(ItemTypeHere);</c> for each spawned item.<br/>
            The style based drop logic is based on <see cref="T:Terraria.ObjectData.TileObjectData"/>. If a tile has custom 'styles' but still wants to make use of <see cref="M:Terraria.ModLoader.ModTile.RegisterItemDrop(System.Int32,System.Int32[])"/>, <c>TileLoader.GetItemDropFromTypeAndStyle(Type, style)</c> can be used to retrieve the associated item drop.<br/><br/>
            Use <see cref="M:Terraria.ModLoader.ModTile.CanDrop(System.Int32,System.Int32)"/> to conditionally prevent any item drops. Use <see cref="M:Terraria.ModLoader.ModTile.KillMultiTile(System.Int32,System.Int32,System.Int32,System.Int32)"/> or <see cref="M:Terraria.ModLoader.ModTile.KillTile(System.Int32,System.Int32,System.Boolean@,System.Boolean@,System.Boolean@)"/> for other logic such as cleaning up TileEntities or killing chests or signs.<br/>
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.CanKillTile(System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Allows you to determine whether or not the tile at the given coordinates can be hit by anything. Returns true by default. blockDamaged currently has no use.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="blockDamaged"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.KillTile(System.Int32,System.Int32,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Allows you to determine what happens when the tile at the given coordinates is killed or hit with a pickaxe. Fail determines whether the tile is mined, effectOnly makes it so that only dust is created, and noItem stops items from dropping. Use this to clean up extra data such as Chests, Signs, or TileEntities. For tiles larger than 1x1, use <see cref="M:Terraria.ModLoader.ModTile.KillMultiTile(System.Int32,System.Int32,System.Int32,System.Int32)"/>.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="fail">If true, the tile won't be mined</param>
            <param name="effectOnly">If true, only the dust visuals will happen</param>
            <param name="noItem">If true, the corresponding item won't drop</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.KillMultiTile(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This hook is called exactly once whenever a block encompassing multiple tiles is destroyed. Use this to clean up extra data such as Chests, Signs, or TileEntities. For tiles that are 1x1, use <see cref="M:Terraria.ModLoader.ModTile.KillTile(System.Int32,System.Int32,System.Boolean@,System.Boolean@,System.Boolean@)"/>.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="frameX">The TileFrameX of the Tile at the coordinates</param>
            <param name="frameY">The TileFrameY of the Tile at the coordinates</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.NearbyEffects(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Allows you to make things happen when this tile is within a certain range of the player (around the same range water fountains and music boxes work). The closer parameter is whether or not the tile is within the range at which aesthetics like monoliths and music boxes and clocks work. It is false for campfires and heart lanterns.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="closer"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.GetTorchLuck(Terraria.Player)">
            <summary>
            Only called for torches, when there is one nearby. Use this to contribute to vanilla torch luck calculations.
            Typical return values are 1f for a torch in its biome, 0.5f for a weak positive torch, -1f for a torch in an opposing biome, and -0.5f for a weak negative torch.
            </summary>
            <param name="player">Main.LocalPlayer</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.IsTileDangerous(System.Int32,System.Int32,Terraria.Player)">
            <summary>
            Allows you to determine whether this tile glows red when the given player has the Dangersense buff.
            <br/>This is only called on the local client.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="player">Main.LocalPlayer</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.IsTileSpelunkable(System.Int32,System.Int32)">
            <summary>
            Allows you to customize whether this tile can glow yellow while having the Spelunker buff, and is also detected by various pets.
            <br/>This is only called if Main.tileSpelunker[type] is false.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.SetSpriteEffects(System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteEffects@)">
            <summary>
            Allows you to determine whether or not the tile will draw itself flipped in the world.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="spriteEffects"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.SetDrawPositions(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int16@,System.Int16@)">
            <summary>
            Allows you to customize the position in which this tile is drawn. Width refers to the width of one frame of the tile, offsetY refers to how many pixels below its actual position the tile should be drawn, height refers to the height of one frame of the tile.
            <para> By default the values will be set to the values you give this tile's TileObjectData. If this tile has no TileObjectData then they will default to 16, 0, and 16, respectively.</para>
            <para> tileFrameX and tileFrameY allow you to change which frames are drawn, keeping tile.frameX/Y intact for other purposes.</para>
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="width"></param>
            <param name="offsetY"></param>
            <param name="height"></param>
            <param name="tileFrameX"></param>
            <param name="tileFrameY"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.AnimateTile(System.Int32@,System.Int32@)">
             <summary>
             Allows you to animate your tile. Use frameCounter to keep track of how long the current frame has been active, and use frame to change the current frame. This is called once an update. Use AnimateIndividualTile to animate specific tile instances directly.
             </summary>
             <example><code>if (++frameCounter > 8)
            {
            	frameCounter = 0;
            	if (++frame > 5)
            	{
            		frame = 0;
            	}
            }</code>
            	or, to mimic another tile, simply:
            	<code>frame = Main.tileFrame[TileID.FireflyinaBottle];</code></example>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.AnimateIndividualTile(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Animates an individual tile. i and j are the coordinates of the Tile in question. frameXOffset and frameYOffset should be used to specify an offset from the tiles frameX and frameY. "frameYOffset = modTile.animationFrameHeight * Main.tileFrame[type];" will already be set before this hook is called, taking into account the TileID-wide animation set via AnimateTile.
            Use this hook for off-sync animations (lightning bug in a bottle), temporary animations (trap chests), or TileEntities to achieve unique animation behaviors without having to manually draw the tile via PreDraw.
            </summary>
            <param name="type">The tile type.</param>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="frameXOffset">The offset to frameX.</param>
            <param name="frameYOffset">The offset to frameY.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.DrawEffects(System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch,Terraria.DataStructures.TileDrawInfo@)">
            <summary>
            Allows you to make stuff happen whenever the tile at the given coordinates is drawn. For example, creating dust or changing the color the tile is drawn in.
            SpecialDraw will only be called if coordinates are added using Main.instance.TilesRenderer.AddSpecialLegacyPoint here.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="spriteBatch"></param>
            <param name="drawData">Various information about the tile that is being drawn, such as color, framing, glow textures, etc.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.SpecialDraw(System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Special Draw. Only called if coordinates are added using Main.instance.TilesRenderer.AddSpecialLegacyPoint during DrawEffects. Useful for drawing things that would otherwise be impossible to draw due to draw order, such as items in item frames.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="spriteBatch"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.TileFrame(System.Int32,System.Int32,System.Boolean@,System.Boolean@)">
            <summary>
            Called whenever this tile updates due to being placed or being next to a tile that is changed. Return false to stop the game from carrying out its default TileFrame operations. Returns true by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="resetFrame"></param>
            <param name="noBreak"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.RightClick(System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when this tile is right-clicked by the player. Return true to indicate that a tile interaction has occurred, preventing other right click actions like minion targeting from happening. Returns false by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <returns>Return true to indicate that a tile interaction has occurred, preventing other right click actions like minion targeting from happening. Returns false by default.</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.MouseOver(System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when the mouse hovers over this tile. Useful for showing item icons or text on the mouse.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.MouseOverFar(System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when the mouse hovers over this tile, even when the player is far away. Useful for showing what's written on signs, etc.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.AutoSelect(System.Int32,System.Int32,Terraria.Item)">
            <summary>
            Allows you to determine whether the given item can become selected when the cursor is hovering over this tile and the auto selection keybind is pressed.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="item">The inventory item</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.HitWire(System.Int32,System.Int32)">
            <summary>
            Allows you to make something happen when a wire current passes through this tile. Both <see cref="M:Terraria.Wiring.SkipWire(System.Int32,System.Int32)"/> and <see cref="M:Terraria.NetMessage.SendTileSquare(System.Int32,System.Int32,System.Int32,System.Int32,Terraria.ID.TileChangeType)"/> are usually required in the logic used in this method to correctly work.
            <br/>Only called on the server and single player. All wiring happens on the world, not multiplayer clients. 
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.Slope(System.Int32,System.Int32)">
            <summary>
            Allows you to control how hammers slope this tile. Return true to allow it to slope normally. Returns true by default. Called on the local Client and Single Player.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.FloorVisuals(Terraria.Player)">
            <summary>
            Allows you to make something happen when a player stands on this type of tile. For example, you can make the player slide as if on ice.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.HasWalkDust">
            <summary>
            Whether or not this tile creates dust when the player walks on it. Returns false by default.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.WalkDust(System.Int32@,System.Boolean@,Microsoft.Xna.Framework.Color@)">
            <summary>
            Allows you to modify the dust created when the player walks on this tile. The makeDust parameter is whether or not to make dust; you can randomly set this to false to reduce the amount of dust produced.
            </summary>
            <param name="dustType"></param>
            <param name="makeDust"></param>
            <param name="color"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.ChangeWaterfallStyle(System.Int32@)">
            <summary>
            Allows you to change the style of waterfall that passes through or over this type of tile.
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.PostSetupTileMerge">
            <summary>
            Can be used to adjust tile merge related things that are not possible to do in <see cref="M:Terraria.ModLoader.ModBlockType.SetStaticDefaults"/> due to timing.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.IsLockedChest(System.Int32,System.Int32)">
            <summary>
            Return true if this Tile corresponds to a chest that is locked. Prevents Quick Stacking items into the chest.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.UnlockChest(System.Int32,System.Int32,System.Int16@,System.Int32@,System.Boolean@)">
            <summary>
            Allows customization of how a chest unlock is accomplished. By default, frameXAdjustment will be -36, shifting the frameX over to the left
            by 1 chest style. If your chests are in a different order, adjust frameXAdjustment accordingly.
            This hook is called on the client, and if successful will be called on the server and other clients as the action is synced.
            Make sure that the logic is consistent and not dependent on local player data.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="frameXAdjustment">The adjustment made to each Tile.frameX, defaults to -36</param>
            <param name="dustType">The dust spawned, defaults to 11</param>
            <param name="manual">Set this to true to bypass the code playing the unlock sound, adjusting the tile frame, and spawning dust. Network syncing will still happen.</param>
            <returns>Return true if this tile truly is a locked chest and the chest can be unlocked</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.LockChest(System.Int32,System.Int32,System.Int16@,System.Boolean@)">
            <summary>
            Allows customization of how locking a chest is accomplished. By default, frameXAdjustment will be 36, shifting the frameX over to the right
            by 1 chest style. If your chests are in a different order, adjust frameXAdjustment accordingly.
            This hook is called on the client, and if successful will be called on the server and other clients as the action is synced.
            Make sure that the logic is consistent and not dependent on local player data.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="frameXAdjustment">The adjustment made to each Tile.frameX, defaults to 36</param>
            <param name="manual">Set this to true to bypass the code playing the lock sound and adjusting the tile frame. Network syncing will still happen.</param>
            <returns>Return true if this tile truly is an unlocked chest and the chest can be locked</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.DefaultContainerName(System.Int32,System.Int32)">
            <summary>
            Returns the default name for a chest or dresser with the provided FrameX and FrameY values. <br/>
            A typical implementation of a tile with only a single name might return <c>CreateMapEntryName()</c> <br/>
            A container with multiple styles might return <c>this.GetLocalization("MapEntry" + option)</c> where option is determined using similar logic to <see cref="M:Terraria.ModLoader.ModBlockType.GetMapOption(System.Int32,System.Int32)"/> to match the <see cref="M:Terraria.ModLoader.ModTile.AddMapEntry(Microsoft.Xna.Framework.Color,Terraria.Localization.LocalizedText)"/> entries. Another option is using <c>return Lang._mapLegendCache[MapHelper.TileToLookup(Type, option)];</c>, this will reuse the localizations used for the map entries.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTile.CanReplace(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to stop this tile at the given coordinates from being replaced via the block swap feature. The tileTypeBeingPlaced parameter is the tile type that will replace the current tile.
            <br/> This method is called on the local client. This method is only called if the local player has sufficient pickaxe power to mine the existing tile.
            <br/> Return false to block the tile from being replaced. Returns true by default.
            <br/> Use this for dynamic logic. <see cref="F:Terraria.ID.TileID.Sets.DoesntGetReplacedWithTileReplacement"/>, <see cref="F:Terraria.ID.TileID.Sets.DoesntPlaceWithTileReplacement"/>, and <see cref="F:Terraria.ID.TileID.Sets.PreventsTileReplaceIfOnTopOfIt"/> cover the most common use cases and should be used instead if possible.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="tileTypeBeingPlaced"></param>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.ModTileEntity">
            <summary>
            Tile Entities are Entities tightly coupled with tiles, allowing the possibility of tiles to exhibit cool behavior. TileEntity.Update is called in SP and on Server, not on Clients.
            </summary>
            <seealso cref="T:Terraria.DataStructures.TileEntity" />
        </member>
        <member name="P:Terraria.ModLoader.ModTileEntity.Mod">
            <summary>
            The mod that added this ModTileEntity.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTileEntity.Name">
            <summary>
            The internal name of this ModTileEntity.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModTileEntity.Type">
            <summary>
            The numeric type used to identify this kind of tile entity.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.CountInWorld">
            <summary>
            Returns the number of modded tile entities that exist in the world currently being played.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.NetPlaceEntityAttempt(System.Int32,System.Int32)">
            <summary>
            You should never use this. It is only included here for completion's sake.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.ConstructFromType(System.Int32)">
            <summary>
            Returns a new ModTileEntity with the same class, mod, name, and type as the ModTileEntity with the given type. It is very rare that you should have to use this.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.ConstructFromBase(Terraria.ModLoader.ModTileEntity)">
            <summary>
            Returns a new ModTileEntity with the same class, mod, name, and type as the parameter. It is very rare that you should have to use this.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.Place(System.Int32,System.Int32)">
            <summary>
            A helper method that places this kind of tile entity in the given coordinates for you.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.Kill(System.Int32,System.Int32)">
            <summary>
            A helper method that removes this kind of tile entity from the given coordinates for you.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.Find(System.Int32,System.Int32)">
            <summary>
            Returns the entity ID of this kind of tile entity at the given coordinates for you.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.WriteExtraData(System.IO.BinaryWriter,System.Boolean)">
            <summary>
            Should never be called on ModTileEntity. Replaced by NetSend and Save.
            Would make the base method internal if not for patch size
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.ReadExtraData(System.IO.BinaryReader,System.Boolean)">
            <summary>
            Should never be called on ModTileEntity. Replaced by NetReceive and Load
            Would make the base method internal if not for patch size
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.Hook_AfterPlacement(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method does not get called by tModLoader, and is only included for you convenience so you do not have to cast the result of Mod.GetTileEntity.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.OnNetPlace">
            <summary>
            Code that should be run when this tile entity is placed by means of server-syncing. Called on Server only.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.PreGlobalUpdate">
            <summary>
            Code that should be run before all tile entities in the world update.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.PostGlobalUpdate">
            <summary>
            Code that should be run after all tile entities in the world update.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.OnKill">
            <summary>
            This method only gets called in the Kill method. If you plan to use that, you can put code here to make things happen when it is called.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTileEntity.IsTileValidForEntity(System.Int32,System.Int32)">
            <summary>
            Whether or not this tile entity is allowed to survive at the given coordinates. You should check whether the tile is active, as well as the tile's type and frame.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModType">
            <summary>
            The base type for most modded things.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModType.Mod">
            <summary>
             The mod this belongs to.
             </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModType.Name">
            <summary>
            The internal name of this.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModType.FullName">
            <summary>
            The internal name of this, including the mod it is from.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModType.Load">
            <summary>
            Allows you to perform one-time loading tasks. Beware that mod content has not finished loading here, things like ModContent lookup tables or ID Sets are not fully populated.
            <para>Use <see cref="M:Terraria.ModLoader.ModType.SetStaticDefaults"/> when you need to access content.</para>
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModType.IsLoadingEnabled(Terraria.ModLoader.Mod)">
            <summary>
            Allows you to stop <see cref="M:Terraria.ModLoader.Mod.AddContent(Terraria.ModLoader.ILoadable)"/> from actually adding this content. Useful for items that can be disabled by a config.
            </summary>
            <param name="mod">The mod adding this content</param>
        </member>
        <member name="M:Terraria.ModLoader.ModType.Register">
            <summary>
            If you make a new ModType, seal this override.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModType.SetupContent">
            <summary>
            If you make a new ModType, seal this override, and call <see cref="M:Terraria.ModLoader.ModType.SetStaticDefaults"/> in it.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModType.SetStaticDefaults">
            <summary>
            Allows you to modify the properties after initial loading has completed.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModType.Unload">
            <summary>
            Allows you to safely unload things you added in <see cref="M:Terraria.ModLoader.ModType.Load"/>.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModType.InitTemplateInstance">
            <summary>
            Create dummy objects for instanced mod-types
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModType.ValidateType">
            <summary>
            Check for the correct overrides of different hook methods and fields and properties
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModType`2.IsCloneable">
            <summary>
            Whether or not this type is cloneable. Cloning is supported if<br/>
            all reference typed fields in each sub-class which doesn't override Clone are marked with [CloneByReference]
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModType`2.CloneNewInstances">
            <summary>
            Whether to create new instances of this mod type via <see cref="M:Terraria.ModLoader.ModType`2.Clone(`0)"/> or via the default constructor
            Defaults to false (default constructor).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModType`2.Clone(`0)">
            <summary>
            Create a copy of this instanced global. Called when an entity is cloned.
            </summary>
            <param name="newEntity">The new clone of the entity</param>
            <returns>A clone of this mod type</returns>
        </member>
        <member name="M:Terraria.ModLoader.ModType`2.NewInstance(`0)">
            <summary>
            Create a new instance of this ModType for a specific entity
            </summary>
            <param name="entity">The entity instance the mod type is being instantiated for</param>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.ModTypeLookup`1">
            <summary>
            Enables content instances to register with <see cref="M:Terraria.ModLoader.ModTypeLookup`1.Register(`0)"/> towards retrieval via <see cref="M:Terraria.ModLoader.ModContent.Find``1(System.String)"/> and similar methods.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTypeLookup`1.Register(`0)">
            <summary>
            Registers the instance towards lookup via <see cref="M:Terraria.ModLoader.ModContent.Find``1(System.String)"/> and similar methods.
            <br/>Should only be called once per instance. Registers legacy names specified via <see cref="T:Terraria.ModLoader.LegacyNameAttribute"/> on the instance's type automatically.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModTypeLookup`1.RegisterLegacyNames(`0,System.String[])">
            <summary>
            Registers the instance towards lookup via <see cref="M:Terraria.ModLoader.ModContent.Find``1(System.String)"/> and similar methods using any number of specified <paramref name="legacyNames"/>.
            <br/>Also see <seealso cref="T:Terraria.ModLoader.LegacyNameAttribute"/> which may be more convenient.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModWall">
            <summary>
            This class represents a type of wall that can be added by a mod. Only one instance of this class will ever exist for each type of wall that is added. Any hooks that are called will be called by the instance corresponding to the wall type.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWall.AddMapEntry(Microsoft.Xna.Framework.Color,Terraria.Localization.LocalizedText)">
            <summary>
            Adds an entry to the minimap for this wall with the given color and display name. This should be called in SetDefaults.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWall.AddMapEntry(Microsoft.Xna.Framework.Color,Terraria.Localization.LocalizedText,System.Func{System.String,System.Int32,System.Int32,System.String})">
            <summary>
            <inheritdoc cref="M:Terraria.ModLoader.ModWall.AddMapEntry(Microsoft.Xna.Framework.Color,Terraria.Localization.LocalizedText)"/>
            <br/><br/> <b>Overload specific:</b> This overload has an additional <paramref name="nameFunc"/> parameter. This function will be used to dynamically adjust the hover text. The parameters for the function are the default display name, x-coordinate, and y-coordinate.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWall.RegisterItemDrop(System.Int32)">
            <summary>
            Manually registers the item to drop for this wall.<br/>
            Only necessary if there is no item which places this wall, such as with unsafe walls dropping safe variants. Otherwise, the item placing this wall will be dropped automatically.<br/>
            Use <see cref="M:Terraria.ModLoader.ModWall.Drop(System.Int32,System.Int32,System.Int32@)"/> to conditionally prevent or change drops.
            </summary>
            <param name="itemType"></param>
        </member>
        <member name="M:Terraria.ModLoader.ModWall.Drop(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Allows you to customize which items the wall at the given coordinates drops. Return false to stop the game from dropping the tile's default item (the type parameter). Returns true by default.
            <br/> The <paramref name="type"/> passed in is the item type of the loaded item with <see cref="F:Terraria.Item.createWall"/> matching the type of this Wall. If <see cref="M:Terraria.ModLoader.ModWall.RegisterItemDrop(System.Int32)"/> was used, that item will be passed in instead.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWall.KillWall(System.Int32,System.Int32,System.Boolean@)">
            <summary>
            Allows you to determine what happens when the tile at the given coordinates is killed or hit with a hammer. Fail determines whether the tile is mined (whether it is killed).
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWall.AnimateWall(System.Byte@,System.Byte@)">
            <summary>
            Allows you to animate your wall. Use frameCounter to keep track of how long the current frame has been active, and use frame to change the current frame. Walls are drawn every 4 frames.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWall.WallFrame(System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Called whenever this wall updates due to being placed or being next to a wall that is changed. Return false to stop the game from carrying out its default WallFrame operations. If you return false, make sure to set <see cref="P:Terraria.Tile.WallFrameNumber"/>, <see cref="P:Terraria.Tile.WallFrameX"/>, and <see cref="P:Terraria.Tile.WallFrameY"/> according to the your desired custom framing design. Returns true by default.
            </summary>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="randomizeFrame">True if the calling code intends that the frameNumber be randomly changed, such as when placing the wall initially or loading the world, but not when updating due to nearby tile or wall placements</param>
            <param name="style">The style or orientation that will be applied</param>
            <param name="frameNumber">The random style that will be applied</param>
        </member>
        <member name="T:Terraria.ModLoader.ModWaterStyle">
            <summary>
            Represents a style of water that gets drawn, based on factors such as the background. This is used to determine the color of the water, as well as other things as determined by the hooks below.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModWaterStyle.Slot">
            <summary>
            The ID of the water style.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterStyle.ChooseWaterfallStyle">
            <summary>
            The ID of the waterfall style the game should use when this water style is in use.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterStyle.GetSplashDust">
            <summary>
            The ID of the dust that is created when anything splashes in water.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterStyle.GetDropletGore">
            <summary>
            The ID of the gore that represents droplets of water falling down from a block.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterStyle.LightColorMultiplier(System.Single@,System.Single@,System.Single@)">
            <summary>
            Allows you to modify the light levels of the tiles behind the water. The light color components will be multiplied by the parameters.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterStyle.BiomeHairColor">
            <summary>
            Allows you to change the hair color resulting from the biome hair dye when this water style is in use.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterStyle.GetRainTexture">
            <summary>
            Returns the texture to be used when drawing rain of this water type.
            <br/>Default uses the vanilla rain texture.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterStyle.GetRainVariant">
            <summary>
            Return the variant of rain used. Equal to the offset in the rain texture divided by four.
            <br/>Vanilla rain has three variants per biome, and so vanilla variants range from 0 to 3 * Main.maxLiquidTextures.
            <br/>Default is a random number from 0 to 2, which creates normal vanilla forest biome rain.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ModWaterfallStyle">
            <summary>
            Represents a style of waterfalls that gets drawn. This is mostly used to determine the color of the waterfall.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ModWaterfallStyle.Slot">
            <summary>
            The ID of this waterfall style.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterfallStyle.AddLight(System.Int32,System.Int32)">
            <summary>
            Allows you to create light at a tile occupied by a waterfall of this style.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ModWaterfallStyle.ColorMultiplier(System.Single@,System.Single@,System.Single@,System.Single)">
            <summary>
            Allows you to determine the color multiplier acting on waterfalls of this style. Useful for waterfalls whose colors change over time.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.MonoModHooks.Add(System.Reflection.MethodBase,System.Delegate)">
            <summary>
            Adds a hook (implemented by <paramref name="hookDelegate"/>) to <paramref name="method"/>.
            </summary>
            <param name="method">The method to hook.</param>
            <param name="hookDelegate">The hook delegate to use.</param>
        </member>
        <member name="M:Terraria.ModLoader.MonoModHooks.Modify(System.Reflection.MethodBase,MonoMod.Cil.ILContext.Manipulator)">
            <summary>
            Adds an IL hook (implemented by <paramref name="callback"/>) to <paramref name="method"/>.
            </summary>
            <param name="method">The method to hook.</param>
            <param name="callback">The hook delegate to use.</param>
        </member>
        <member name="M:Terraria.ModLoader.MonoModHooks.DumpILHooks">
            <summary>
            Dumps the list of currently registered IL hooks to the console. Useful for checking if a hook has been correctly added.
            </summary>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Terraria.ModLoader.MonoModHooks.DumpOnHooks">
            <summary>
            Dumps the list of currently registered On hooks to the console. Useful for checking if a hook has been correctly added.
            </summary>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Terraria.ModLoader.MonoModHooks.DumpIL(Terraria.ModLoader.Mod,MonoMod.Cil.ILContext)">
            <summary>
            Dumps the information about the given ILContext to a file in Logs/ILDumps/{Mod Name}/{Method Name}.txt<br/>
            It may be useful to use a tool such as <see href="https://www.diffchecker.com/"/> to compare the IL before and after edits
            </summary>
            <param name="mod"></param>
            <param name="il"></param>
        </member>
        <member name="T:Terraria.ModLoader.MountLoader">
            <summary>
            This serves as the central place from which mounts are stored and mount-related functions are carried out.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.MountLoader.GetMount(System.Int32)">
            <summary>
            Gets the ModMount instance corresponding to the given type. Returns null if no ModMount has the given type.
            </summary>
            <param name="type">The type of the mount.</param>
            <returns>Null if not found, otherwise the ModMount associated with the mount.</returns>
        </member>
        <member name="M:Terraria.ModLoader.MountLoader.UseAbility(Terraria.Player,Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            Allows you to make things happen while the mouse is pressed while the mount is active. Called each tick the mouse is pressed.
            </summary>
            <param name="player"></param>
            <param name="mousePosition"></param>
            <param name="toggleOn">Does nothing yet</param>
        </member>
        <member name="M:Terraria.ModLoader.MountLoader.AimAbility(Terraria.Mount,Terraria.Player,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Allows you to make things happen when the mount ability is aiming (while charging).
            </summary>
            <param name="mount"></param>
            <param name="player"></param>
            <param name="mousePosition"></param>
        </member>
        <member name="M:Terraria.ModLoader.MountLoader.SetMount(Terraria.Mount,Terraria.Player,System.Boolean@)">
            <summary>
            Allows you to make things happen when this mount is spawned in. Useful for player-specific initialization, utilizing player.mount._mountSpecificData or a ModPlayer class since ModMount is shared between all players.
            Custom dust spawning logic is also possible via the skipDust parameter.
            </summary>
            <param name="mount"></param>
            <param name="player"></param>
            <param name="skipDust">Set to true to skip the vanilla dust spawning logic</param>
        </member>
        <member name="M:Terraria.ModLoader.MountLoader.Dismount(Terraria.Mount,Terraria.Player,System.Boolean@)">
            <summary>
            Allows you to make things happen when this mount is de-spawned. Useful for player-specific cleanup, see SetMount.
            Custom dust spawning logic is also possible via the skipDust parameter.
            </summary>
            <param name="mount"></param>
            <param name="player"></param>
            <param name="skipDust">Set to true to skip the vanilla dust spawning logic</param>
        </member>
        <member name="M:Terraria.ModLoader.MountLoader.Draw(Terraria.Mount,System.Collections.Generic.List{Terraria.DataStructures.DrawData},System.Int32,Terraria.Player,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Rectangle@,Microsoft.Xna.Framework.Color@,Microsoft.Xna.Framework.Color@,System.Single@,Microsoft.Xna.Framework.Graphics.SpriteEffects@,Microsoft.Xna.Framework.Vector2@,System.Single@,System.Single)">
            <summary>
            See <see cref="M:Terraria.ModLoader.ModMount.Draw(System.Collections.Generic.List{Terraria.DataStructures.DrawData},System.Int32,Terraria.Player,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Graphics.Texture2D@,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Rectangle@,Microsoft.Xna.Framework.Color@,Microsoft.Xna.Framework.Color@,System.Single@,Microsoft.Xna.Framework.Graphics.SpriteEffects@,Microsoft.Xna.Framework.Vector2@,System.Single@,System.Single)"/>
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.MountTextureType">
            <summary>
            This is an enum of all possible types of extra mount textures for custom mounts. Use these as keys in the extraTextures dictionary passed to Mod.AddMount to give your mount front and back textures.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.MusicLoader.musicToItem">
            <summary>Unloaded server side </summary>
        </member>
        <member name="F:Terraria.ModLoader.MusicLoader.itemToMusic">
            <summary>Unloaded server side </summary>
        </member>
        <member name="F:Terraria.ModLoader.MusicLoader.tileToMusic">
            <summary>Only Loads the two keys, Tile type and Tile Y frame server side, the value is set to 0</summary>
        </member>
        <member name="M:Terraria.ModLoader.MusicLoader.GetMusicSlot(Terraria.ModLoader.Mod,System.String)">
            <summary> Gets the music id of the track with the specified mod path. The path must not have a file extension. </summary>
        </member>
        <member name="M:Terraria.ModLoader.MusicLoader.GetMusicSlot(System.String)">
            <summary> Gets the music id of the track with the specified full path. The path must be prefixed with a mod name and must not have a file extension. </summary>
        </member>
        <member name="M:Terraria.ModLoader.MusicLoader.MusicExists(Terraria.ModLoader.Mod,System.String)">
            <summary> Returns whether or not a music track with the specified mod path exists. The path must not have a file extension. </summary>
        </member>
        <member name="M:Terraria.ModLoader.MusicLoader.MusicExists(System.String)">
            <summary> Returns whether or not a music track with the specified path exists. The path must be prefixed with a mod name and must not have a file extension.</summary>
        </member>
        <member name="M:Terraria.ModLoader.MusicLoader.GetMusic(Terraria.ModLoader.Mod,System.String)">
            <summary> Gets the music track with the specified mod path. The path must not have a file extension. </summary>
        </member>
        <member name="M:Terraria.ModLoader.MusicLoader.GetMusic(System.String)">
            <summary> Gets the music track with the specified full path. The path must be prefixed with a mod name and must not have a file extension. </summary>
        </member>
        <member name="M:Terraria.ModLoader.MusicLoader.AddMusic(Terraria.ModLoader.Mod,System.String)">
            <summary>
            Registers a new music track with the provided mod and its local path to the sound file.
            </summary>
            <param name="mod"> The mod that owns the music track. </param>
            <param name="musicPath"> The provided mod's local path to the music track file, case-sensitive and without extensions. </param>
        </member>
        <member name="M:Terraria.ModLoader.MusicLoader.AddMusicBox(Terraria.ModLoader.Mod,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows you to tie a music ID, and item ID, and a tile ID together to form a music box.
            <br/> When music with the given ID is playing, equipped music boxes have a chance to change their ID to the given item type.
            <br/> When an item with the given item type is equipped, it will play the music that has musicSlot as its ID.
            <br/> When a tile with the given type and Y-frame is nearby, if its X-frame is >= 36, it will play the music that has musicSlot as its ID.
            </summary>
            <param name="mod"> The music slot. </param>
            <param name="musicSlot"> The music slot. </param>
            <param name="itemType"> Type of the item. </param>
            <param name="tileType"> Type of the tile. </param>
            <param name="tileFrameY"> The tile frame y. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Cannot assign music box to vanilla music id.
            or
            The provided music id does not exist.
            or
            Cannot assign music box to a vanilla item id.
            or
            The provided item id does not exist.
            or
            Cannot assign music box to a vanilla tile id.
            or
            The provided tile id does not exist
            </exception>
            <exception cref="T:System.ArgumentException">
            The provided music id has already been assigned a music box.
            or
            The provided item id has already been assigned a music.
            or
            Y-frame must be divisible by 36
            </exception>
        </member>
        <member name="T:Terraria.ModLoader.NPCHappiness">
            <summary> This struct provides access to an NPC type's NPC &amp; Biome relationships. </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCHappiness.AffectionLevelToPriceMultiplier">
            <summary> Allows you to modify the shop price multipliers associated with a (biome/npc type) relationship level. </summary>
        </member>
        <member name="T:Terraria.ModLoader.NPCHeadLoader">
            <summary>
            This class serves as a central place from which NPC head slots are stored and NPC head textures are assigned. This can be used to obtain the corresponding slots to head textures.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCHeadLoader.VanillaHeadCount">
            <summary>
            The number of vanilla town NPC head textures that exist.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCHeadLoader.VanillaBossHeadCount">
            <summary>
            The number of vanilla boss head textures that exist.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.NPCHeadLoader.GetHeadSlot(System.String)">
            <summary>
            Gets the index of the head texture corresponding to the given texture path.
            </summary>
            <param name="texture">Relative texture path</param>
            <returns>The index of the texture in the heads array, -1 if not found.</returns>
        </member>
        <member name="M:Terraria.ModLoader.NPCHeadLoader.GetBossHeadSlot(System.String)">
            <summary>
            Gets the index of the boss head texture corresponding to the given texture path.
            </summary>
            <param name="texture"></param>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.NPCLoader">
            <summary>
            This serves as the central class from which NPC-related functions are carried out. It also stores a list of mod NPCs by ID.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCLoader.blockLoot">
            <summary>
            Allows you to stop an NPC from dropping loot by adding item IDs to this list. This list will be cleared whenever NPCLoot ends. Useful for either removing an item or change the drop rate of an item in the NPC's loot table. To change the drop rate of an item, use the PreNPCLoot hook, spawn the item yourself, then add the item's ID to this list.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.NPCLoader.GetNPC(System.Int32)">
            <summary>
            Gets the ModNPC template instance corresponding to the specified type (not the clone/new instance which gets added to NPCs as the game is played).
            </summary>
            <param name="type">The type of the npc</param>
            <returns>The ModNPC instance in the <see cref="F:Terraria.ModLoader.NPCLoader.npcs"/> array, null if not found.</returns>
        </member>
        <member name="T:Terraria.ModLoader.NPCLoot">
            <summary> This readonly struct is a simple shortcut to <see cref="T:Terraria.GameContent.ItemDropRules.ItemDropDatabase"/>'s methods. </summary>
        </member>
        <member name="M:Terraria.ModLoader.AbstractNPCShop.FillShop(System.Collections.Generic.ICollection{Terraria.Item},Terraria.NPC)">
            <summary>
            Unbounded variant of <see cref="M:Terraria.ModLoader.AbstractNPCShop.FillShop(Terraria.Item[],Terraria.NPC,System.Boolean@)"/>, for future forwards compatibility with tabbed or scrolling shops.
            </summary>
            <param name="items">The collection to be filled</param>
            <param name="npc">The NPC the player is talking to</param>
        </member>
        <member name="M:Terraria.ModLoader.AbstractNPCShop.FillShop(Terraria.Item[],Terraria.NPC,System.Boolean@)">
            <summary>
            Fills a shop array with the contents of this shop, evaluating conditions and running callbacks.
            </summary>
            <param name="items">Array to be filled.</param>
            <param name="npc">The NPC the player is talking to</param>
            <param name="overflow">True if some items were unable to fit in the provided array</param>
        </member>
        <member name="M:Terraria.ModLoader.NPCShop.FillShop(Terraria.Item[],Terraria.NPC,System.Boolean@)">
            <summary>
            Fills a shop array with the contents of this shop, evaluating conditions and running callbacks. <br/>
            Does not fill the entire array if there are insufficient entries. <br/>
            The last slot will be kept empty (null) if <see cref="P:Terraria.ModLoader.NPCShop.FillLastSlot"/> is false
            </summary>
            <param name="items">Array to be filled.</param>
            <param name="npc">The NPC the player is talking to, for <see cref="M:Terraria.ModLoader.NPCShop.Entry.OnShopOpen(Terraria.Item,Terraria.NPC)"/> calls.</param>
            <param name="overflow">True if some items were unable to fit in the provided array.</param>
        </member>
        <member name="M:Terraria.ModLoader.NPCShopDatabase.GetShopName(System.Int32,System.String)">
            <summary>
            Gets a shop name (identifier) in the format matching <see cref="P:Terraria.ModLoader.AbstractNPCShop.FullName"/> <br/>
            Can be used with <see cref="M:Terraria.ModLoader.NPCShopDatabase.TryGetNPCShop(System.String,Terraria.ModLoader.AbstractNPCShop@)"/> and <see cref="M:Terraria.ModLoader.GlobalNPC.ModifyActiveShop(Terraria.NPC,System.String,Terraria.Item[])"/>
            </summary>
            <param name="npcType"></param>
            <param name="shopName"></param>
            <returns></returns>
        </member>
        <member name="T:Terraria.ModLoader.NPCSpawnInfo">
            <summary>
            A struct that stores information regarding where an NPC is naturally spawning and the player it is spawning around. This serves to reduce the parameter count for ModNPC.CanSpawn and GlobalNPC.EditSpawnPool.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.SpawnTileX">
            <summary>
            The x-coordinate of the tile the NPC will spawn above.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.SpawnTileY">
            <summary>
            The y-coordinate of the tile the NPC will spawn above.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.Player">
            <summary>
            The player that this NPC is spawning around.
            For convenience, here are the player zones, which are also useful for determining NPC spawn:
            (ZoneGranite, ZoneMarble, ZoneHive, ZoneGemCave are not actually proper spawning related checks, they are for visuals only (RGB), determined by the backwall type)
            <list type="bullet">
            <item><description>ZoneDungeon</description></item>
            <item><description>ZoneCorrupt</description></item>
            <item><description>ZoneHallow</description></item>
            <item><description>ZoneMeteor</description></item>
            <item><description>ZoneJungle</description></item>
            <item><description>ZoneSnow</description></item>
            <item><description>ZoneCrimson</description></item>
            <item><description>ZoneWaterCandle</description></item>
            <item><description>ZonePeaceCandle</description></item>
            <item><description>ZoneTowerSolar</description></item>
            <item><description>ZoneTowerVortex</description></item>
            <item><description>ZoneTowerNebula</description></item>
            <item><description>ZoneTowerStardust</description></item>
            <item><description>ZoneDesert</description></item>
            <item><description>ZoneGlowshroom</description></item>
            <item><description>ZoneUndergroundDesert</description></item>
            <item><description>ZoneSkyHeight</description></item>
            <item><description>ZoneOverworldHeight</description></item>
            <item><description>ZoneDirtLayerHeight</description></item>
            <item><description>ZoneRockLayerHeight</description></item>
            <item><description>ZoneUnderworldHeight</description></item>
            <item><description>ZoneBeach</description></item>
            <item><description>ZoneRain</description></item>
            <item><description>ZoneSandstorm</description></item>
            <item><description>ZoneOldOneArmy</description></item>
            <item><description>ZoneGraveyard</description></item>
            </list>
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.PlayerFloorX">
            <summary>
            The x-coordinate of the tile the player is standing on.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.PlayerFloorY">
            <summary>
            The y-coordinate of the tile the player is standing on.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.Sky">
            <summary>
            Whether or not the player is in the sky biome, where harpies and wyverns spawn.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.Lihzahrd">
            <summary>
            Whether or not the player is inside the jungle temple, where Lihzahrds spawn.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.PlayerSafe">
            <summary>
            Whether or not the player is in front of a player-placed wall or in a large town. If this is true, enemies that can attack through walls should not spawn (unless an invasion is in progress).
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.Invasion">
            <summary>
            Whether or not there is an invasion going on and the player is near it.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.Water">
            <summary>
            Whether or not the tile the NPC will spawn in contains water.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.Granite">
            <summary>
            Whether or not the NPC will spawn on a granite block or the player is near a granite biome.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.Marble">
            <summary>
            Whether or not the NPC will spawn on a marble block or the player is near a marble biome.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.SpiderCave">
            <summary>
            Whether or not the player is in a spider cave or the NPC will spawn near one.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.PlayerInTown">
            <summary>
            Whether or not the player is in a town. This is used for spawning critters instead of monsters.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.DesertCave">
            <summary>
            Whether or not the player is in front of a desert wall or the NPC will spawn near one.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.NPCSpawnInfo.SafeRangeX">
            <summary>
            Whether or not the NPC is horizontally within the range near the player in which NPCs cannot spawn. If this is true, it also means that it is vertically outside of the range near the player in which NPCs cannot spawn.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.PlayerDrawLayer">
            <summary>
            This class represents a DrawLayer for the player, and uses PlayerDrawInfo as its InfoType. Drawing should be done by adding Terraria.DataStructures.DrawData objects to Main.playerDrawData.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PlayerDrawLayer.Transformation.PreDraw(Terraria.DataStructures.PlayerDrawSet@)">
            <summary>
            Add a transformation to the drawInfo
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PlayerDrawLayer.Transformation.PostDraw(Terraria.DataStructures.PlayerDrawSet@)">
            <summary>
            Reverse a transformation from the drawInfo
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.PlayerDrawLayer.IsHeadLayer">
            <summary> Returns whether or not this layer should be rendered for the minimap icon. </summary>
        </member>
        <member name="M:Terraria.ModLoader.PlayerDrawLayer.GetDefaultVisibility(Terraria.DataStructures.PlayerDrawSet)">
            <summary> Returns the layer's default visibility. This is usually called as a layer is queued for drawing, but modders can call it too for information. </summary>
            <returns> Whether or not this layer will be visible by default. Modders can hide layers later, if needed.</returns>
        </member>
        <member name="M:Terraria.ModLoader.PlayerDrawLayer.GetDefaultPosition">
            <summary> Returns the layer's default position in regards to other layers. Make use of e.g <see cref="T:Terraria.ModLoader.PlayerDrawLayer.BeforeParent"/>/<see cref="T:Terraria.ModLoader.PlayerDrawLayer.AfterParent"/>, and provide a layer (usually a vanilla one from <see cref="T:Terraria.DataStructures.PlayerDrawLayers"/>). </summary>
        </member>
        <member name="M:Terraria.ModLoader.PlayerDrawLayer.Draw(Terraria.DataStructures.PlayerDrawSet@)">
            <summary> Draws this layer. This will be called multiple times a frame if a player afterimage is being drawn. If this layer shouldn't draw with each afterimage, check <code>if(drawinfo.shadow == 0f)</code> to only draw for the original player image.</summary>
        </member>
        <member name="M:Terraria.ModLoader.PlayerDrawLayerLoader.GetDrawLayers(Terraria.DataStructures.PlayerDrawSet)">
            <summary>
            Note, not threadsafe
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.PlayerLoader">
            <summary>
            This is where all ModPlayer hooks are gathered and called.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PlayerLoader.ResetMaxStatsToVanilla(Terraria.Player)">
            <summary>
            Resets <see cref="F:Terraria.Player.statLifeMax"/> and <see cref="F:Terraria.Player.statManaMax"/> to their expected values by vanilla
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:Terraria.ModLoader.PlayerLoader.ModifyMaxStats(Terraria.Player)">
            <summary>
            Reset this player's <see cref="F:Terraria.Player.statLifeMax"/> and <see cref="F:Terraria.Player.statManaMax"/> to their vanilla defaults,
            applies <see cref="M:Terraria.ModLoader.ModPlayer.ModifyMaxStats(Terraria.ModLoader.StatModifier@,Terraria.ModLoader.StatModifier@)"/> to them,
            then modifies <see cref="F:Terraria.Player.statLifeMax2"/> and <see cref="F:Terraria.Player.statManaMax2"/>
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:Terraria.ModLoader.PlayerLoader.ModifyWeaponDamage(Terraria.Player,Terraria.Item,Terraria.ModLoader.StatModifier@)">
            <summary>
            Calls ModItem.HookModifyWeaponDamage, then all GlobalItem.HookModifyWeaponDamage hooks.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.PosData`1.OrderedSparseLookupBuilder">
            <summary>
            Efficient builder for <see cref="T:Terraria.ModLoader.PosData`1"/>[] lookups covering the whole world.
            Must add elements in ascending pos order.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PosData`1.OrderedSparseLookupBuilder.#ctor(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Use <paramref name="compressEqualValues"/> to produce a smaller lookup which won't work with <see cref="M:Terraria.ModLoader.PosData.LookupExact``1(Terraria.ModLoader.PosData{``0}[],System.Int32,System.Int32,``0@)"/>
            When using <paramref name="compressEqualValues"/> without <paramref name="insertDefaultEntries"/>,
            unspecified positions will default to the value of the previous specified position
            </summary>
            <param name="capacity">Defaults to 1M entries to reduce reallocations. Final built collection will be smaller. </param>
            <param name="compressEqualValues">Reduces the size of the map, but gives unspecified positions a value.</param>
            <param name="insertDefaultEntries">Ensures unspecified positions are assigned a default value when used with <paramref name="compressEqualValues"/></param>
        </member>
        <member name="M:Terraria.ModLoader.PosData.CoordsToPos(System.Int32,System.Int32)">
            <summary>
            Gets a Position ID based on the x,y position. If using in an order sensitive case, see NextLocation.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.PosData.FindIndex``1(Terraria.ModLoader.PosData{``0}[],System.Int32)">
            <summary>
            Searches for the value i for which <code>posMap[i].pos &lt; pos &lt; posMap[i + 1].pos</code>
            </summary>
            <returns>The index of the nearest entry with <see cref="F:Terraria.ModLoader.PosData`1.pos"/> &lt;= <paramref name="pos"/> or -1 if <paramref name="pos"/> &lt; <paramref name="posMap"/>[0].pos</returns>
        </member>
        <member name="M:Terraria.ModLoader.PosData.Find``1(Terraria.ModLoader.PosData{``0}[],System.Int32)">
            <summary>
            Raw lookup function. Always returns the raw entry in the position map. Use if default values returned are a concern, as negative position returned are ~'null'
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PosData.Lookup``1(Terraria.ModLoader.PosData{``0}[],System.Int32,System.Int32)">
            <summary>
            General purpose lookup function. Always returns a value (even if that value is `default`).
            See <see cref="M:Terraria.ModLoader.PosData`1.OrderedSparseLookupBuilder.#ctor(System.Int32,System.Boolean,System.Boolean)"/>for more info
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PosData.Lookup``1(Terraria.ModLoader.PosData{``0}[],System.Int32)">
            <summary>
            General purpose lookup function. Always returns a value (even if that value is `default`).
            See <see cref="M:Terraria.ModLoader.PosData`1.OrderedSparseLookupBuilder.#ctor(System.Int32,System.Boolean,System.Boolean)"/>for more info
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PosData.LookupExact``1(Terraria.ModLoader.PosData{``0}[],System.Int32,System.Int32,``0@)">
            <summary>
            For use with uncompressed sparse data lookups. Checks that the exact position exists in the lookup table.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PosData.LookupExact``1(Terraria.ModLoader.PosData{``0}[],System.Int32,``0@)">
            <summary>
            For use with uncompressed sparse data lookups. Checks that the exact position exists in the lookup table.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PosData.NearbySearchOrderedPosMap``1(Terraria.ModLoader.PosData{``0}[],Microsoft.Xna.Framework.Point,System.Int32,Terraria.ModLoader.PosData{``0}@)">
            <summary>
            Searches around the provided point to check for the nearest entry in the map for OrdereredSparse data
            Doesn't work with 'compressed' lookups from <see cref="T:Terraria.ModLoader.PosData`1.OrderedSparseLookupBuilder"/>
            </summary>
            <param name="posMap"></param>
            <param name="pt"></param>
            <param name="distance"> The distance between the provided Point and nearby entry </param>
            <param name="entry"></param>
            <returns> True if successfully found an entry nearby </returns>
        </member>
        <member name="M:Terraria.ModLoader.PrefixLoader.GetPrefix(System.Int32)">
            <summary>
            Returns the ModPrefix associated with specified type
            If not a ModPrefix, returns null.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.PrefixLoader.GetPrefixesInCategory(Terraria.ModLoader.PrefixCategory)">
            <summary>
            Returns a list of all modded prefixes of a certain category.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.ProjectileLoader">
            <summary>
            This serves as the central class from which projectile-related functions are carried out. It also stores a list of mod projectiles by ID.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ProjectileLoader.GetProjectile(System.Int32)">
            <summary>
            Gets the ModProjectile template instance corresponding to the specified type (not the clone/new instance which gets added to Projectiles as the game is played).
            </summary>
            <param name="type">The type of the projectile</param>
            <returns>The ModProjectile instance in the projectiles array, null if not found.</returns>
        </member>
        <member name="M:Terraria.ModLoader.PylonLoader.GetModPylon(Terraria.GameContent.TeleportPylonType)">
            <summary>
            Returns the ModPylon associated with the passed in type. Returns null on failure.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.RecipeLoader">
            <summary>
            This is where all Recipe hooks are gathered and called.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.RecipeLoader.ConsumedItems">
            <summary>
            Cloned list of Items consumed when crafting.  Cleared after the OnCreate and OnCraft hooks.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.RecipeLoader.setupRecipes">
            <summary>
            Set when tML sets up modded recipes. Used to detect misuse of CreateRecipe
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.RecipeLoader.CurrentMod">
            <summary>
            The mod currently adding recipes.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.RecipeLoader.OrderRecipes">
            <summary>
            Orders everything in the recipe according to their Ordering.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.RecipeLoader.RecipeAvailable(Terraria.Recipe)">
            <summary>
            Returns whether or not the conditions are met for this recipe to be available for the player to use.
            </summary>
            <param name="recipe">The recipe to check.</param>
            <returns>Whether or not the conditions are met for this recipe.</returns>
        </member>
        <member name="M:Terraria.ModLoader.RecipeLoader.DecraftAvailable(Terraria.Recipe)">
            <summary>
            Returns whether or not the conditions are met for this recipe to be shimmered/decrafted.
            </summary>
            <param name="recipe">The recipe to check.</param>
            <returns>Whether or not the conditions are met for this recipe.</returns>
        </member>
        <member name="M:Terraria.ModLoader.RecipeLoader.OnCraft(Terraria.Item,Terraria.Recipe,System.Collections.Generic.List{Terraria.Item},Terraria.Item)">
            <summary>
            recipe.OnCraftHooks followed by Calls ItemLoader.OnCreate with a RecipeCreationContext
            </summary>
            <param name="item">The item crafted.</param>
            <param name="recipe">The recipe used to craft the item.</param>
            <param name="consumedItems">Materials used to craft the item.</param>
            <param name="destinationStack">The stack that the crafted item will be combined with</param>
        </member>
        <member name="M:Terraria.ModLoader.RecipeLoader.OnCraft(Terraria.Item,Terraria.Recipe,Terraria.Item)">
            <summary>
            Helper version of OnCraft, used in combination with Recipe.Create and the internal ConsumedItems list
            </summary>
            <param name="item"></param>
            <param name="recipe"></param>
            <param name="destinationStack">The stack that the crafted item will be combined with</param>
        </member>
        <member name="M:Terraria.ModLoader.RecipeLoader.ConsumeItem(Terraria.Recipe,System.Int32,System.Int32@)">
            <summary>
            Allows to edit the amount of item the player uses in a recipe.
            </summary>
            <param name="recipe">The recipe used for the craft.</param>
            <param name="type">Type of the ingredient.</param>
            <param name="amount">Modifiable amount of the item consumed.</param>
        </member>
        <member name="F:Terraria.ModLoader.ResourceOverlayDrawContext.snapshot">
            <summary>
            A snapshot of the player's health and mana stats
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.ResourceOverlayDrawContext.resourceNumber">
            <summary>
            Which heart/star/bar/panel is being drawn<br/>
            <b>NOTE:</b> This value usually starts at 0, but it can start at other values
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.ResourceOverlayDrawContext.source">
            <summary>
            The slice of the texture to draw<br/>
            <see langword="null"/> represents the entire texture
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.ResourceOverlayDrawContext.origin">
            <summary>
            The center for rotation and scaling within the source rectangle
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.ResourceOverlayDrawContext.DisplaySet">
            <summary>
            The resource display set that this context is drawing from
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.ResourceOverlayDrawContext.#ctor(Terraria.GameContent.UI.ResourceSets.PlayerStatsSnapshot,Terraria.GameContent.UI.ResourceSets.IPlayerResourcesDisplaySet,System.Int32,ReLogic.Content.Asset{Microsoft.Xna.Framework.Graphics.Texture2D})">
            <summary>
            Creates a context for drawing resources from a display set
            </summary>
            <param name="snapshot">A snapshot of a player's life and mana stats</param>
            <param name="displaySet">The display set that this context is for</param>
            <param name="resourceNumber">The resource number within the resource set</param>
            <param name="texture">The texture being drawn</param>
        </member>
        <member name="M:Terraria.ModLoader.ResourceOverlayLoader.DrawResource(Terraria.ModLoader.ResourceOverlayDrawContext)">
            <summary>
            Draws a resource, typically life or mana
            </summary>
            <param name="drawContext">The drawing context</param>
        </member>
        <member name="T:Terraria.ModLoader.SceneEffectLoader`1">
            <summary>
            This serves as the central class from which SceneEffect functions are supported and carried out.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.SceneEffectPriority">
            <summary>
            This enum dictates from low to high which SceneEffect selections take priority.
            Setting appropriate priority values is important so that your mod works well with other mods and vanilla selections.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.None">
            <summary>Represents no priority</summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.BiomeLow">
            <summary> Will override vanilla SceneEffect for Hallow, Ocean, Desert, Overworld, Night</summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.BiomeMedium">
            <summary> Will override vanilla SceneEffect for Dungeon, Meteor, Jungle, Snow</summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.BiomeHigh">
            <summary> Will override vanilla SceneEffect for Temple, Mushrooms, Corruption, Crimson, </summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.Environment">
            <summary> Will override vanilla SceneEffect for Sandstorm, Hell, Above surface during Eclipse, Space</summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.Event">
            <summary> Will override vanilla SceneEffect for Pirate Invasion, Goblin Invasion, Old Ones Army</summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.BossLow">
            <summary>All other bosses and default modded boss priority</summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.BossMedium">
            <summary>Will override vanilla SceneEffect for Martian Madness, Celestial Towers, Plantera</summary>
        </member>
        <member name="F:Terraria.ModLoader.SceneEffectPriority.BossHigh">
            <summary>Will override SceneEffect of Moon Lord and Torch God</summary>
        </member>
        <member name="F:Terraria.ModLoader.StatModifier.Base">
            <summary>
            An offset to the base value of the stat. Directly applied to the base stat before multipliers are applied.
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.StatModifier.Additive">
            <summary>
            The combination of all additive multipliers. Starts at 1
            </summary>
        </member>
        <member name="P:Terraria.ModLoader.StatModifier.Multiplicative">
            <summary>
            The combination of all multiplicative multipliers. Starts at 1. Applies 'after' all additive bonuses have been accumulated.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.StatModifier.Flat">
            <summary>
            Increase to the final value of the stat. Directly added to the stat after multipliers are applied.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.StatModifier.op_Addition(Terraria.ModLoader.StatModifier,System.Single)">
            <summary>
            By using the add operator, the supplied additive modifier is combined with the existing modifiers. For example, adding 0.12f would be equivalent to a typical 12% damage boost. For 99% of effects used in the game, this approach is used.
            </summary>
            <param name="m"></param>
            <param name="add">The additive modifier to add, where 0.01f is equivalent to 1%</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.StatModifier.op_Subtraction(Terraria.ModLoader.StatModifier,System.Single)">
            <summary>
            By using the subtract operator, the supplied subtractive modifier is combined with the existing modifiers. For example, subtracting 0.12f would be equivalent to a typical 12% damage decrease. For 99% of effects used in the game, this approach is used.
            </summary>
            <param name="m"></param>
            <param name="sub">The additive modifier to subtract, where 0.01f is equivalent to 1%</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.StatModifier.op_Multiply(Terraria.ModLoader.StatModifier,System.Single)">
            <summary>
            The multiply operator applies a multiplicative effect to the resulting multiplicative modifier. This effect is very rarely used, typical effects use the add operator.
            </summary>
            <param name="m"></param>
            <param name="mul">The factor by which the multiplicative modifier is scaled</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.StatModifier.ApplyTo(System.Single)">
            <summary>
            Use this to apply the modifiers of this <see cref="T:Terraria.ModLoader.StatModifier"/> to the <paramref name="baseValue"/>. You should assign
            the value passed in to the return result. For example:
            <para><br><c>damage = CritDamage.ApplyTo(damage)</c></br></para>
            <br></br>could be used to apply a crit damage modifier to a base damage value 
            </summary>
            <remarks>For help understanding the meanings of the applied values please make note of documentation for:
            <list type="bullet">
            <item><description><see cref="F:Terraria.ModLoader.StatModifier.Base"/></description></item>
            <item><description><see cref="P:Terraria.ModLoader.StatModifier.Additive"/></description></item>
            <item><description><see cref="P:Terraria.ModLoader.StatModifier.Multiplicative"/></description></item>
            <item><description><see cref="F:Terraria.ModLoader.StatModifier.Flat"/></description></item>
            </list>
            The order of operations of the modifiers are as follows:
            <list type="number">
            <item><description>The <paramref name="baseValue"/> is added to <see cref="F:Terraria.ModLoader.StatModifier.Base"/></description></item>
            <item><description>That result is multiplied by <see cref="P:Terraria.ModLoader.StatModifier.Additive"/></description></item>
            <item><description>The previous result is then multiplied by <see cref="P:Terraria.ModLoader.StatModifier.Multiplicative"/></description></item>
            <item><description>Finally, <see cref="F:Terraria.ModLoader.StatModifier.Flat"/> as added to the result of all previous calculations</description></item>
            </list>
            </remarks>
            <param name="baseValue">The starting value to apply modifiers to</param>
            <returns>The result of <paramref name="baseValue"/> after all modifiers are applied</returns>
        </member>
        <member name="T:Terraria.ModLoader.SystemLoader">
            <summary>
            This is where all <see cref="T:Terraria.ModLoader.ModSystem"/> hooks are gathered and called.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.TileLoader">
            <summary>
            This serves as the central class from which tile-related functions are supported and carried out.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.TileLoader.tileTypeAndTileStyleToItemType">
            <summary> Maps Tile type and Tile style to the Item type that places the tile with the style. </summary>
        </member>
        <member name="M:Terraria.ModLoader.TileLoader.GetTile(System.Int32)">
            <summary>
            Gets the ModTile instance with the given type. If no ModTile with the given type exists, returns null.
            </summary>
            <param name="type">The type of the ModTile</param>
            <returns>The ModTile instance in the tiles array, null if not found.</returns>
        </member>
        <member name="M:Terraria.ModLoader.TileLoader.IsClosedDoor(Terraria.Tile)">
            <inheritdoc cref="M:Terraria.ModLoader.TileLoader.IsClosedDoor(System.Int32)"/>
        </member>
        <member name="M:Terraria.ModLoader.TileLoader.IsClosedDoor(System.Int32)">
            <summary>
            Returns true if the tile is a vanilla or modded closed door.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.TileLoader.DefaultContainerName(System.Int32,System.Int32,System.Int32)">
            <summary> Returns the default name for a modded chest or dresser with the provided FrameX and FrameY values. </summary>
        </member>
        <member name="M:Terraria.ModLoader.TileLoader.GetItemDropFromTypeAndStyle(System.Int32,System.Int32)">
            <summary>
            Retrieves the item type that would drop from a tile of the specified type and style. This method is only reliable for modded tile types. This method can be used in <see cref="M:Terraria.ModLoader.ModTile.GetItemDrops(System.Int32,System.Int32)"/> for tiles that have custom tile style logic. If the specified style is not found, a fallback item will be returned if one has been registered through <see cref="M:Terraria.ModLoader.ModTile.RegisterItemDrop(System.Int32,System.Int32[])"/> usage.<br/>
            Modders querying modded tile drops should use <see cref="M:Terraria.ModLoader.ModTile.GetItemDrops(System.Int32,System.Int32)"/> directly rather that use this method so that custom drop logic is accounted for.
            <br/> A return of 0 indicates that no item would drop from the tile.
            </summary>
            <param name="type"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.ModLoader.TileLoader.SetAnimationFrame(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Sets the animation frame. Sets frameYOffset = modTile.animationFrameHeight * Main.tileFrame[type]; and then calls ModTile.AnimateIndividualTile
            </summary>
            <param name="type">The tile type.</param>
            <param name="i">The x position in tile coordinates.</param>
            <param name="j">The y position in tile coordinates.</param>
            <param name="frameXOffset">The offset to frameX.</param>
            <param name="frameYOffset">The offset to frameY.</param>
        </member>
        <member name="M:Terraria.ModLoader.TileLoader.SpecialDraw(System.Int32,System.Int32,System.Int32,Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Special Draw calls ModTile and GlobalTile SpecialDraw methods. Special Draw is called at the end of the DrawSpecialTilesLegacy loop, allowing for basically another layer above tiles. Use DrawEffects hook to queue for SpecialDraw.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.TooltipLine">
            <summary>
            This class serves as a way to store information about a line of tooltip for an item. You will create and manipulate objects of this class if you use the ModifyTooltips hook.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.TooltipLine.Mod">
            <summary>
            The name of the mod adding this tooltip line. This will be "Terraria" for all vanilla tooltip lines.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.TooltipLine.Name">
            <summary>
            The name of the tooltip, used to help you identify its function.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.TooltipLine.Text">
            <summary>
            The actual text that this tooltip displays.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.TooltipLine.IsModifier">
            <summary>
            Whether or not this tooltip gives prefix information. This will make it so that the tooltip is colored either green or red.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.TooltipLine.IsModifierBad">
            <summary>
            If isModifier is true, this determines whether the tooltip is colored green or red.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.TooltipLine.OverrideColor">
            <summary>
            This completely overrides the color the tooltip is drawn in. If it is set to null (the default value) then the tooltip's color will not be overridden.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.TooltipLine.#ctor(Terraria.ModLoader.Mod,System.String,System.String)">
            <summary>
            Creates a tooltip line object with the given mod, identifier name, and text.<para />
            These are the names of the vanilla tooltip lines, in the order in which they appear, along with their functions. All of them will have a mod name of "Terraria". Remember that most of these tooltip lines will not exist depending on the item.<para />
            <list type="bullet">
            <item><description>"ItemName" - The name of the item.</description></item>
            <item><description>"Favorite" - Tells if the item is favorited.</description></item>
            <item><description>"FavoriteDesc" - Tells what it means when an item is favorited.</description></item>
            <item><description>"Social" - Tells if the item is in a social slot.</description></item>
            <item><description>"SocialDesc" - Tells what it means for an item to be in a social slot.</description></item>
            <item><description>"Damage" - The damage value and type of the weapon.</description></item>
            <item><description>"CritChance" - The critical strike chance of the weapon.</description></item>
            <item><description>"Speed" - The use speed of the weapon.</description></item>
            <item><description>"Knockback" - The knockback of the weapon.</description></item>
            <item><description>"FishingPower" - Tells the fishing power of the fishing pole.</description></item>
            <item><description>"NeedsBait" - Tells that a fishing pole requires bait.</description></item>
            <item><description>"BaitPower" - The bait power of the bait.</description></item>
            <item><description>"Equipable" - Tells that an item is equipable.</description></item>
            <item><description>"WandConsumes" - Tells what item a tile wand consumes.</description></item>
            <item><description>"Quest" - Tells that this is a quest item.</description></item>
            <item><description>"Vanity" - Tells that this is a vanity item.</description></item>
            <item><description>"Defense" - Tells how much defense the item gives when equipped.</description></item>
            <item><description>"PickPower" - The item's pickaxe power.</description></item>
            <item><description>"AxePower" - The item's axe power.</description></item>
            <item><description>"HammerPower" - The item's hammer power.</description></item>
            <item><description>"TileBoost" - How much farther the item can reach than normal items.</description></item>
            <item><description>"HealLife" - How much health the item recovers when used.</description></item>
            <item><description>"HealMana" - How much mana the item recovers when used.</description></item>
            <item><description>"UseMana" - Tells how much mana the item consumes upon usage.</description></item>
            <item><description>"Placeable" - Tells if the item is placeable.</description></item>
            <item><description>"Ammo" - Tells if the item is ammo.</description></item>
            <item><description>"Consumable" - Tells if the item is consumable.</description></item>
            <item><description>"Material" - Tells if the item can be used to craft something.</description></item>
            <item><description>"Tooltip#" - A tooltip line of the item. # will be 0 for the first line, 1 for the second, etc.</description></item>
            <item><description>"EtherianManaWarning" - Warning about how the item can't be used without Etherian Mana until the Eternia Crystal has been defeated.</description></item>
            <item><description>"WellFedExpert" - In expert mode, tells that food increases life regeneration.</description></item>
            <item><description>"BuffTime" - Tells how long the item's buff lasts.</description></item>
            <item><description>"OneDropLogo" - The One Drop logo for yoyos.This is a specially-marked tooltip line that has no text.</description></item>
            <item><description>"PrefixDamage" - The damage modifier of the prefix.</description></item>
            <item><description>"PrefixSpeed" - The usage speed modifier of the prefix.</description></item>
            <item><description>"PrefixCritChance" - The critical strike chance modifier of the prefix.</description></item>
            <item><description>"PrefixUseMana" - The mana consumption modifier of the prefix.</description></item>
            <item><description>"PrefixSize" - The melee size modifier of the prefix.</description></item>
            <item><description>"PrefixShootSpeed" - The shootSpeed modifier of the prefix.</description></item>
            <item><description>"PrefixKnockback" - The knockback modifier of the prefix.</description></item>
            <item><description>"PrefixAccDefense" - The defense modifier of the accessory prefix.</description></item>
            <item><description>"PrefixAccMaxMana" - The maximum mana modifier of the accessory prefix.</description></item>
            <item><description>"PrefixAccCritChance" - The critical strike chance modifier of the accessory prefix.</description></item>
            <item><description>"PrefixAccDamage" - The damage modifier of the accessory prefix.</description></item>
            <item><description>"PrefixAccMoveSpeed" - The movement speed modifier of the accessory prefix.</description></item>
            <item><description>"PrefixAccMeleeSpeed" - The melee speed modifier of the accessory prefix.</description></item>
            <item><description>"SetBonus" - The set bonus description of the armor set.</description></item>
            <item><description>"Expert" - Tells whether the item is from expert-mode.</description></item>
            <item><description>"SpecialPrice" - Tells the alternate currency price of an item.</description></item>
            <item><description>"Price" - Tells the price of an item.</description></item>
            </list>
            </summary>
            <param name="mod">The mod instance</param>
            <param name="name">The name of the tooltip</param>
            <param name="text">The content of the tooltip</param>
        </member>
        <member name="M:Terraria.ModLoader.UI.DownloadManager.UIWorkshopDownload.DownloadStarted(System.String)">
            <remarks>This will be called from a thread!</remarks>
        </member>
        <member name="M:Terraria.ModLoader.UI.DownloadManager.UIWorkshopDownload.UpdateDownloadProgress(System.Single,System.Int64,System.Int64)">
            <remarks>This will be called from a thread!</remarks>
        </member>
        <member name="T:Terraria.ModLoader.UI.Elements.UIAsyncList`2">
            <remarks>
              Remember to set GenElement is not provided in the constructor and TResource is not a TUIElement.
              DO NOT USE Add/AddRange directly, always use the provider methods.
            </remarks>
        </member>
        <member name="M:Terraria.ModLoader.UI.Elements.UIAsyncList`2.SetProvider(Terraria.ModLoader.AsyncProvider{`0})">
            <remarks>
              SetProvider will delegate all UI actions to next Update,
              so it NOT SAFE to be called out of the main thread,
              because having an assignment to ProviderChanged it CAN
              cause problems in case the list is cleared before the provider
              is swapped and the old provider is partially read giving unwanted
              elements, same if you do the other way around (the provider can be
              partially consumed before the clear)
            </remarks>
        </member>
        <member name="M:Terraria.ModLoader.UI.ModBrowser.UIModBrowser.DownloadModsAndReturnToBrowser(System.Collections.Generic.List{Terraria.Social.Base.ModPubId_t})">
            <summary>
                Enqueues a list of mods, if found on the browser (also used for ModPacks)
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.UI.ModBrowser.UIModBrowser.DownloadMods(System.Collections.Generic.IEnumerable{Terraria.ModLoader.UI.ModBrowser.ModDownloadItem},System.Int32,System.Action,System.Action{Terraria.ModLoader.UI.ModBrowser.ModDownloadItem})">
            <summary>
            Downloads all ModDownloadItems provided.
            </summary>
        </member>
        <member name="M:Terraria.ModLoader.UI.UICommon.TooltipMouseText(System.String)">
            <summary>
            Functions like Main.instance.MouseText, but adds the same background seen in tooltips to the text
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:Terraria.ModLoader.Utilities.SpawnCondition">
            <summary>
            This serves as a central class to help modders spawn their NPCs. It's basically the vanilla spawn code if-else chains condensed into objects. See ExampleMod for usages.
            </summary>
        </member>
        <member name="T:Terraria.ModLoader.WallLoader">
            <summary>
            This serves as the central class from which wall-related functions are supported and carried out.
            </summary>
        </member>
        <member name="F:Terraria.ModLoader.WallLoader.wallTypeToItemType">
            <summary> Maps Wall type to the Item type that places the wall. </summary>
        </member>
        <member name="M:Terraria.ModLoader.WallLoader.GetWall(System.Int32)">
            <summary>
            Gets the ModWall instance with the given type. If no ModWall with the given type exists, returns null.
            </summary>
        </member>
        <member name="M:Terraria.NetMessage.SendStrikeNPC(Terraria.NPC,Terraria.NPC.HitInfo@,System.Int32)">
            <summary>
            Use this to synchronize damage strikes against NPCs!
            </summary>
        </member>
        <member name="F:Terraria.NPC.catchItem">
            <summary>
            The numerical ID of the item that this NPC becomes when caught.<br/>
            Mainly used for critters that can be caught with bug nets, such as butterflies and worms.<br/>
            Bug nets and other catching tools will only work on NPCs with this field set to something greater than 0.
            </summary>
        </member>
        <member name="F:Terraria.NPC.releaseOwner">
            <summary>
            Identifies the player who released this NPC into the world. Used mainly for released critters. Helps limit how many critters a player can release. Default to 255, indicating that the npc was not released by a player.
            </summary>
        </member>
        <member name="F:Terraria.NPC.rarity">
            <summary>
            How rare the NPC is for the Lifeform Analyzer. For example: 4 is for Tim and Mimics, 1 is for bound town NPCs.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.NPC.gfxOffY">
            <summary>
            An offset from the actual position of the npc that will be added to the draw position. Used to fake the effect of NPC smoothly traveling up single block obstacles. 
            </summary>
        </member>
        <member name="F:Terraria.NPC.stepSpeed">
            <summary>
            Has nothing to do with the speed that this NPC travels, that is dictated by AI code adjusting <see cref="F:Terraria.Entity.velocity"/>.
            </summary>
        </member>
        <member name="F:Terraria.NPC.realLife">
            <summary>
            Stores the index (the <see cref="F:Terraria.Entity.whoAmI"/>) of a single NPC. This NPC will then share a health pool with that NPC.<br/>
            Used for the Destroyer's various segments and the Wall of Flesh's eyes and mouth.<br/>
            This is useful for worm enemies. All the segments will point to the same npc, usually the "head" of the npc, and the head and all other non-multi-part NPCs will have the default value of -1 still.
            <br/> Defaults to -1.
            </summary>
        </member>
        <member name="F:Terraria.NPC.npcSlots">
            <summary>
            Represents how much this npc counts towards the npc spawn limit. Small critters like worms or flies have values around 0.1f and 0.25f. Enemies that are more difficult than normal have values higher than 1f, and bosses and mini bosses have values around 6.
            <br/> Proper npcSlots values help balance the game and prevents the player from randomly being overwhelmed by powerful enemies. The <see href="https://terraria.wiki.gg/wiki/NPC_spawning#Spawn_rates">Spawn rates section on the NPC spawning wiki page</see> lists vanilla npcSlots values. Use this as a guide to find a suitable value.
            <br/> Defaults to 1f.
            </summary>
        </member>
        <member name="F:Terraria.NPC.buffImmune">
            <summary>
            Make the NPC immune to buffs/debuffs. Example: <c>NPC.buffImmune[BuffID.OnFire] = true;</c>
            </summary>
        </member>
        <member name="F:Terraria.NPC.combatBookWasUsed">
            <summary>
            Denotes whether or not Advanced Combat Techniques has been used in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedBoss1">
            <summary>
            Denotes whether or not the Eye of Cthulhu has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedBoss2">
            <summary>
            Denotes whether or not the Eater of Worlds OR the Brain of Cthulhu have been defeated at least once in the current world.<br/>
            This does NOT track the two of them separately; you will need to establish your own fields in a <see cref="T:Terraria.ModLoader.ModSystem"/> for that.<br/>
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedBoss3">
            <summary>
            Denotes whether or not Skeletron has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedQueenBee">
            <summary>
            Denotes whether or not at least one Queen Bee has been defeated in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedSlimeKing">
            <summary>
            Denotes whether or not King Slime has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedGoblins">
            <summary>
            Denotes whether or not at least one Goblin Army has been defeated in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedFrost">
            <summary>
            Denotes whether or not the Frost Legion has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedPirates">
            <summary>
            Denotes whether or not at least one Pirate Invasion has been defeated in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedClown">
            <summary>
            Denotes whether or not at least one Clown has been killed in the current world.<br/>
            Only used to make the Clothier sell the Clown set once at least one has been killed.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedPlantBoss">
            <summary>
            Denotes whether or not Plantera has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedGolemBoss">
            <summary>
            Denotes whether or not Golem has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedMartians">
            <summary>
            Denotes whether or not at least one Martian Madness event has been cleared in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedFishron">
            <summary>
            Denotes whether or not Duke Fishron has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedHalloweenTree">
            <summary>
            Denotes whether or not at least one Mourning Wood has been defeated in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedHalloweenKing">
            <summary>
            Denotes whether or not at least one Pumpking has been defeated in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedChristmasIceQueen">
            <summary>
            Denotes whether or not at least one Ice Queen has been defeated in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedChristmasTree">
            <summary>
            Denotes whether or not at least one Everscream has been defeated in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedChristmasSantank">
            <summary>
            Denotes whether or not at least one Santa-NK1 has been defeated in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedAncientCultist">
            <summary>
            Denotes whether or not the Lunatic Cultist has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedMoonlord">
            <summary>
            Denotes whether or not the Moon Lord has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedTowerSolar">
            <summary>
            Denotes whether or not the Solar Pillar has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedTowerVortex">
            <summary>
            Denotes whether or not the Vortex Pillar has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedTowerNebula">
            <summary>
            Denotes whether or not the Nebula Pillar has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedTowerStardust">
            <summary>
            Denotes whether or not the Stardust Pillar has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedEmpressOfLight">
            <summary>
            Denotes whether or not the Empress of Light has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedQueenSlime">
            <summary>
            Denotes whether or not Queen Slime has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedDeerclops">
            <summary>
            Denotes whether or not the Deerclops has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedMechBossAny">
            <summary>
            Denotes whether or not ANY Mechanical Boss has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedMechBoss1">
            <summary>
            Denotes whether or not the Destroyer has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedMechBoss2">
            <summary>
            Denotes whether or not the Twins have been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.downedMechBoss3">
            <summary>
            Denotes whether or not Skeletron Prime has been defeated at least once in the current world.
            </summary>
        </member>
        <member name="F:Terraria.NPC.immune">
            <summary>
            This determines if an NPC can be hit by a item or projectile owned by a particular player (it is an array, each slot corresponds to different players (whoAmI)). It is decremented towards 0 every update. Melee items set immune[Player.whoAmI] to Player.itemAnimation, which starts at item.useAnimation and decrements towards 0. Penetrating projectiles usually set immune to 10, while non-penetrating projectiles do not set immune. <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/Projectiles/ExamplePiercingProjectile.cs">ExamplePiercingProjectile.cs</see> explains more about options for npc and projectile immunity.
            </summary>
        </member>
        <member name="F:Terraria.NPC.type">
            <summary>
            The NPC ID of this NPC. The NPC ID is a unique number assigned to each NPC loaded into the game. This will be equal to either an <see cref="T:Terraria.ID.NPCID"/> entry or <see cref="M:Terraria.ModLoader.ModContent.NPCType``1"/>, for example <see cref="F:Terraria.ID.NPCID.AngryBones"/> or ModContent.NPCType&lt;MyModNPC&gt;(). To check if an NPC instance is a specific NPC, check <c>NPC.type == NPCID.VanillaNPCHere</c> or <c>NPC.type == ModContent.NPCType&lt;ModdedNPCHere&gt;()</c> in an <see langword="if"/> statement.
            <br/><br/><inheritdoc cref="F:Terraria.NPC.type" path="/negativenote/node()"/>
            </summary>
            <negativenote>There are a few NPC that share the same <see cref="F:Terraria.NPC.type"/> number, usually slight variations of enemies. <see cref="F:Terraria.ID.NPCID.GreenSlime"/> and <see cref="F:Terraria.ID.NPCID.RedSlime"/> have values of -3 and -8, respectively, but after they are spawned they will have the type equal to 1, which is the same value as <see cref="F:Terraria.ID.NPCID.BlueSlime"/>. If code logic requires differentiating between these variations, use <see cref="F:Terraria.NPC.netID"/> instead.</negativenote>
        </member>
        <member name="F:Terraria.NPC.ai">
            <summary>
            An array with 4 slots used for any sort of data storage, which is occasionally synced from the server to clients. Each vanilla <see cref="T:Terraria.ID.NPCAIStyleID"/> uses these slots for different purposes. Set <see cref="F:Terraria.NPC.netUpdate"/> to true to manually sync. The advantage of using these 4 floats is that they are synced automatically. Using fields in your <see cref="P:Terraria.NPC.ModNPC"/> class will work just the same, but they might need to be synced via <see cref="M:Terraria.ModLoader.ModNPC.SendExtraAI(System.IO.BinaryWriter)"/> and <see cref="M:Terraria.ModLoader.ModNPC.ReceiveExtraAI(System.IO.BinaryReader)"/> if necessary.
            <br/> Clever use of <see href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/ref#reference-return-values">Reference return values</see> as seen in <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/NPCs/ExampleCustomAISlimeNPC.cs#L36">ExampleCustomAISlimeNPC.cs</see> can be used to reuse the ai array entries with readable names.
            <br/> Defaults to the values passed into <see cref="M:Terraria.NPC.NewNPC(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)"/>, usually [0, 0, 0, 0].
            </summary>
        </member>
        <member name="F:Terraria.NPC.localAI">
            <summary>
            Acts like <see cref="F:Terraria.NPC.ai"/>, but does not sync to the server. Many vanilla <see cref="T:Terraria.ID.NPCAIStyleID"/> use these slots for various purposes.
            <br/> Defaults to [0, 0, 0, 0]
            </summary>
        </member>
        <member name="F:Terraria.NPC.aiStyle">
            <summary>
            Selects which vanilla code to use for the AI method. Vanilla NPC AI styles are enumerated in the <see cref="T:Terraria.ID.NPCAIStyleID"/> class. Modders can use vanilla aiStyle and optionally <see cref="P:Terraria.ModLoader.ModNPC.AIType"/> to mimic AI code already in the game. This is usually only useful as a prototyping tool since it is difficult to customize existing aiStyle code. See <see cref="P:Terraria.ModLoader.ModNPC.AIType"/> and <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/NPCs/PartyZombie.cs">PartyZombie</see> to see how to use vanilla ai. If you are using custom AI code, there is no need to set this field.
            <br/> Customizing an existing aiStyle usually requires following the <see href="https://github.com/tModLoader/tModLoader/wiki/Advanced-Vanilla-Code-Adaption#example-projectile-or-npc-ai-code">Vanilla Code Adaption Guide</see>.
            <br/> If you are using completely custom AI, set this to -1 since an aiStyle of 0 will face the player automatically, which may interfere with your logic.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.NPC.damage">
            <summary>
            The amount of contact damage this NPC deals.<br/>
            Changing this WILL NOT change the amount of damage done by projectiles.<br/>
            Usually damage is scaled by some factor when NPC spawn projectiles with Projectile.NewProjectile in AI code. For example, passing in <c>(int)(NPC.damage * 0.5f)</c> as the Damage parameter.
            <br/> The <see href="https://terraria.wiki.gg/wiki/List_of_NPCs">List of NPCs wiki page</see> can be useful for finding appropriate values.
            </summary>
        </member>
        <member name="F:Terraria.NPC.defense">
            <summary>
            How resistant to damage this NPC is.
            <br/> The <see href="https://terraria.wiki.gg/wiki/List_of_NPCs">List of NPCs wiki page</see> can be useful for finding appropriate values.
            </summary>
        </member>
        <member name="F:Terraria.NPC.defDamage">
            <summary>
            Stores the value of <see cref="F:Terraria.NPC.damage"/> at the end of SetDefaults. Useful for scaling damage in AI code conditionally.
            </summary>
        </member>
        <member name="F:Terraria.NPC.defDefense">
            <summary>
            Stores the value of <see cref="F:Terraria.NPC.defense"/> at the end of SetDefaults. Useful for scaling defense in AI code, like how King Slime changes defense as it gets smaller.
            </summary>
        </member>
        <member name="F:Terraria.NPC.coldDamage">
            <summary>
            Denotes whether or not this NPC counts as dealing cold damage for the purposes of the Warmth Potion.<br/>
            Defaults to false.
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitSound">
            <summary>
            The sound that plays when this npc is hit. Set this to an existing <see cref="T:Terraria.ID.SoundID"/> entry or assign to a new <see cref="T:Terraria.Audio.SoundStyle"/> for a custom sound.
            <br/> The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Sounds">Basic Sounds Guide</see> teaches how to find existing sounds to use, how to use custom sounds, and how to customize the playback properties of the sounds.
            <br/> For example <c>NPC.HitSound = SoundID.NPCHit1;</c> can be used for the typical NPC hit sound.
            <br/> Defaults to null.
            </summary>
        </member>
        <member name="F:Terraria.NPC.DeathSound">
            <summary>
            The sound that plays when this npc dies. Set this to an existing <see cref="T:Terraria.ID.SoundID"/> entry or assign to a new <see cref="T:Terraria.Audio.SoundStyle"/> for a custom sound.
            <br/> The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Sounds">Basic Sounds Guide</see> teaches how to find existing sounds to use, how to use custom sounds, and how to customize the playback properties of the sounds.
            <br/> For example <c>NPC.DeathSound = SoundID.NPCDeath1;</c> can be used for the typical NPC kill sound.
            <br/> Defaults to null.
            </summary>
        </member>
        <member name="F:Terraria.NPC.life">
            <summary>
            The current life of the NPC. Automatically set to the value of <see cref="F:Terraria.NPC.lifeMax"/> at the end of SetDefaults.
            </summary>
        </member>
        <member name="F:Terraria.NPC.lifeMax">
            <summary>
            The maximum life of this NPC.
            </summary>
        </member>
        <member name="F:Terraria.NPC.alpha">
            <summary>
            0 is opaque, and 255 is transparent. Note that this is the opposite of how alpha is typically expressed in computer graphics. Can be used to fade an NPC in and out.
            <br/> Use <see cref="P:Terraria.NPC.Opacity"/> instead for a 0f to 1f scaling that uses the high value for fully opaque, as is more typical in computer graphics.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.NPC.hide">
            <summary>
            Indicates that this NPC is drawn at a specific layer in the render order. Must use in conjunction with <see cref="M:Terraria.ModLoader.ModNPC.DrawBehind(System.Int32)"/>.
            <br/> See <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/NPCs/ExampleDrawBehindNPC.cs">ExampleDrawBehindNPC</see> for examples of how to use this and all available layers to draw in.
            </summary>
        </member>
        <member name="F:Terraria.NPC.scale">
            <summary>
            Makes the NPC bigger or smaller. Bigger than 1f is bigger.
            <br/> Defaults to 1f.
            </summary>
        </member>
        <member name="F:Terraria.NPC.knockBackResist">
            <summary>
            How much of the knockback it receives will actually apply. 1f: full knockback; 0f: no knockback.
            <br/> Defaults to 1f.
            </summary>
        </member>
        <member name="F:Terraria.NPC.noGravity">
            <summary>
            If true, the npc will not be affected by gravity. Demon Eyes and other floating npc use this.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.NPC.noTileCollide">
            <summary>
            If true, the npc does not collide with tiles, making the npc pass through tiles freely. Meteor Head and Worm npc use this.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.NPC.boss">
            <summary>
            Set to true if the NPC is a boss. Prevents off-screen despawn. Bosses also need <c>[AutoloadBossHead]</c> annotated on the ModNPC class itself to fully register as a boss.
            </summary>
        </member>
        <member name="F:Terraria.NPC.behindTiles">
            <summary>
            Indicates that this NPC draws behind solid tiles.
            <br/> See <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/NPCs/ExampleDrawBehindNPC.cs">ExampleDrawBehindNPC</see> for examples of how to use this and other options for layers to draw in.
            </summary>
        </member>
        <member name="F:Terraria.NPC.value">
            <summary>
            How many copper coins the NPC will drop when killed (100 copper coins = 1 silver coin etc.).
            </summary>
        </member>
        <member name="F:Terraria.NPC.netID">
            <summary>
            Similar to <see cref="F:Terraria.NPC.type"/>, but accounts for negative <see cref="T:Terraria.ID.NPCID"/> values. <br/>
            <br/><br/><inheritdoc cref="F:Terraria.NPC.type" path="/negativenote/node()"/>
            </summary>
        </member>
        <member name="F:Terraria.NPC.friendly">
            <summary>
            Indicates that an NPC is friendly to players. If true, a player won't damage the NPC and the NPC won't deal contact damage to players, unless otherwise forced. <br/>
            Mostly set to true for town npc and rescuable town npc. <br/>
            Naturally spawned critter NPC that are <see cref="F:Terraria.Main.npcCatchable"/> will automatically be friendly for 1.5 seconds after spawning. <br/>
            </summary>
        </member>
        <member name="P:Terraria.NPC.TypeName">
            <summary>
            The TYPE name of this NPC.<br/>
            Type names are the base titles given to any NPC, and are typically shared amongst all instances of an NPC. For example, the Stylist's type name will always be "Stylist".<br/>
            To modify the type name of a specific NPC, make use of the ModifyTypeName hooks in <see cref="T:Terraria.ModLoader.GlobalNPC"/> and <see cref="T:Terraria.ModLoader.ModNPC"/>, according to your needs.<br/>
            </summary>
        </member>
        <member name="P:Terraria.NPC.FullName">
            <summary>
            The FULL name of this NPC.<br/>
            If the NPC doesn't have a given name, this will just return the type name. A Stylist without a given name will always return "Stylist" here.<br/>
            If the NPC does have a given name, this will return the NPC's full name; given name first, then type name.<br/>
            Full name with a given name is given in the format of "X the Y", where X is their given name and Y is their type name.<br/>
            For example, a Stylist might return "Scarlett the Stylist" here; with Scarlett being her given name, and Stylist being her type name.<br/>
            </summary>
        </member>
        <member name="P:Terraria.NPC.HasGivenName">
            <summary>
            Whether or not this NPC has a given name.<br/>
            </summary>
        </member>
        <member name="P:Terraria.NPC.GivenOrTypeName">
            <summary>
            If this NPC has a given name, returns their given name; otherwise, returns their type name.<br/>
            </summary>
        </member>
        <member name="P:Terraria.NPC.GivenName">
            <summary>
            The GIVEN name of this NPC. Can be set directly.<br/>
            Given names are unique to each NPC, though two NPCs can have the same given name.<br/>
            Some vanilla examples of given names are Andrew (for the Guide), Yorai (for the Princess), Whitney (for the Steampunker), or Scarlett (for the Stylist).<br/>
            </summary>
        </member>
        <member name="M:Terraria.NPC.GetFullnameByID(System.Int32)">
            <summary>
            Returns the <see cref="P:Terraria.NPC.FullName"/> of the first active NPC of the given type in the world. If not found, the type name is returned instead.
            </summary>
            <param name="npcID"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.NPC.GetFirstNPCNameOrNull(System.Int32)">
            <summary>
            Returns the <see cref="P:Terraria.NPC.GivenOrTypeName"/> of the first active NPC of the given type in the world. If not found, null is returned.
            </summary>
            <param name="npcType"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.NPC.MechSpawn(System.Single,System.Single,System.Int32)">
            <summary>
            Use to check if a mechanism is allowed to spawn an NPC of the provided type at the provided world coordinates. Checks nearby area to see if the <see href="https://terraria.wiki.gg/wiki/Statues#Spawn_limits">Spawn Limits</see> have been reached.
            </summary>
        </member>
        <member name="M:Terraria.NPC.GetNPCInvasionGroup(System.Int32)">
            <summary>
            Gets the <see cref="T:Terraria.ID.InvasionID"/> associated with the given NPC type (<see cref="F:Terraria.NPC.type"/>).
            </summary>
            <param name="npcID">The NPC type to check.</param>
            <returns>
            <c>0</c> for NPCs not affiliated with any invasion.
            <br/> A positive <see cref="T:Terraria.ID.InvasionID"/> for NPCs affiliated with standard events, such as the Goblin Army.
            <br/> A negative <see cref="T:Terraria.ID.InvasionID"/> for NPCs affiliated with a wave-based event, such as the Pumpkin Moon. Wave-based events are prefixed with "Cached" in <see cref="T:Terraria.ID.InvasionID"/>.
            </returns>
        </member>
        <member name="M:Terraria.NPC.NewNPC(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Spawns an NPC into the game world with the given type. <br/>
            This method should not be called on multiplayer clients. <br/>
            The X and Y parameters dictate the centered spawn position. <br/>
            <c>>ai0, ai1, ai2, ai3</c> will initialize the NPC.ai[] array with the supplied values. This can be used to pass in information to the NPC. The NPC AI code will have to be written to utilize those values. <br/>
            </summary>
            <param name="source"></param>
            <param name="X"></param>
            <param name="Y"></param>
            <param name="Type">Either an <see cref="T:Terraria.ID.NPCID"/> entry or <see cref="M:Terraria.ModLoader.ModContent.NPCType``1"/>, for example <see cref="F:Terraria.ID.NPCID.BabySlime"/> or <c>ModContent.NPCType&lt;MyModNPC&gt;()</c></param>
            <param name="Start">The lowest slot in which this NPC can spawn. This can be used to ensure that the spawned NPC draws behind an existing NPC. This is useful for bosses that spawn minions. </param>
            <param name="ai0"></param>
            <param name="ai1"></param>
            <param name="ai2"></param>
            <param name="ai3"></param>
            <param name="Target">Optionally, provide a <c>Player.whoAmI</c> to set <see cref="F:Terraria.NPC.target"/> to a specific Player immediately on spawn.</param>
            <returns>The index of the spawned NPC within the <see cref="F:Terraria.Main.npc"/> array</returns>
        </member>
        <member name="M:Terraria.NPC.GetIncomingStrikeModifiers(Terraria.ModLoader.DamageClass,System.Int32,System.Boolean)">
            <summary>
            Initializes a <see cref="T:Terraria.NPC.HitModifiers"/> calculation with the properties of this NPC, including calling <see cref="M:Terraria.ModLoader.NPCLoader.ModifyIncomingHit(Terraria.NPC,Terraria.NPC.HitModifiers@)"/>
            </summary>
            <param name="damageType">The DamageType of the hit.</param>
            <param name="hitDirection">The direction to apply knockback. If 0, no knockback will be applied.</param>
            <param name="ignoreArmorDebuffs">Ignores <see cref="F:Terraria.NPC.ichor"/> and <see cref="F:Terraria.NPC.betsysCurse"/>. Only used for legacy vanilla codepaths.</param>
            <returns></returns>
        </member>
        <member name="M:Terraria.NPC.CalculateHitInfo(System.Int32,System.Int32,System.Boolean,System.Single,Terraria.ModLoader.DamageClass,System.Boolean,System.Single)">
            <summary>
            Runs <see cref="M:Terraria.ModLoader.NPCLoader.ModifyIncomingHit(Terraria.NPC,Terraria.NPC.HitModifiers@)"/> hooks and and does the full damage calculations. <br/>
            The result <see cref="P:Terraria.NPC.HitInfo.Damage"/> will contain the health the NPC will lose when applied. <br/>
            </summary>
            <param name="damage">The damage to deal to the NPC, before modifications, defense, resistances etc</param>
            <param name="hitDirection">The hit direction of the resulting strike (1 or -1)</param>
            <param name="crit">Defaults to false</param>
            <param name="knockBack">Defaults to 0</param>
            <param name="damageType">Defaults to <see cref="P:Terraria.ModLoader.DamageClass.Default"/></param>
            <param name="damageVariation">Whether to apply damage variation. Defaults to false.</param>
            <param name="luck">Luck modifier to produce weight damageVariation towards higher (positive) or lower (negative) values. Defaults to 0</param>
            <returns>A <see cref="T:Terraria.NPC.HitInfo"/> for use with <see cref="M:Terraria.NPC.StrikeNPC(Terraria.NPC.HitInfo,System.Boolean,System.Boolean)"/> and <see cref="M:Terraria.NetMessage.SendStrikeNPC(Terraria.NPC,Terraria.NPC.HitInfo@,System.Int32)"/></returns>
        </member>
        <member name="M:Terraria.NPC.SimpleStrikeNPC(System.Int32,System.Int32,System.Boolean,System.Single,Terraria.ModLoader.DamageClass,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Calls <see cref="M:Terraria.NPC.CalculateHitInfo(System.Int32,System.Int32,System.Boolean,System.Single,Terraria.ModLoader.DamageClass,System.Boolean,System.Single)"/>, <see cref="M:Terraria.NPC.StrikeNPC(Terraria.NPC.HitInfo,System.Boolean,System.Boolean)"/> and then <see cref="M:Terraria.NetMessage.SendStrikeNPC(Terraria.NPC,Terraria.NPC.HitInfo@,System.Int32)"/> (in multiplayer) <br/>
            </summary>
            <param name="damage">The damage to deal to the NPC, before modifications, defense, resistances etc</param>
            <param name="hitDirection">The hit direction of the resulting strike (1 or -1)</param>
            <param name="crit">Defaults to false</param>
            <param name="knockBack">Defaults to 0</param>
            <param name="damageType">Defaults to <see cref="P:Terraria.ModLoader.DamageClass.Default"/></param>
            <param name="damageVariation">Whether to apply damage variation. Defaults to false.</param>
            <param name="luck">Luck modifier to produce weight damageVariation towards higher (positive) or lower (negative) values. Defaults to 0</param>
            <param name="noPlayerInteraction">Prevents <see cref="M:Terraria.NPC.PlayerInteraction(System.Int32)"/> from being called in single player. In multiplayer, player interaction is handled by the server.</param>
            <returns>The actual health lost by the NPC. Normally this is <see cref="P:Terraria.NPC.HitInfo.Damage"/> but it is capped at the current health of the NPC, and represents the actual damage dealt in the case of <see cref="F:Terraria.NPC.HitInfo.InstantKill"/> </returns>
        </member>
        <member name="M:Terraria.NPC.StrikeInstantKill">
            <summary>
            Helper method for calling <see cref="M:Terraria.NPC.StrikeNPC(Terraria.NPC.HitInfo,System.Boolean,System.Boolean)"/> with a <see cref="F:Terraria.NPC.HitInfo.InstantKill"/> strike. <br/>
            Use to butcher your own NPCs. <br/>
            Not recommended for use on multiplayer clients because the net packet will trigger <see cref="M:Terraria.NPC.PlayerInteraction(System.Int32)"/> on the server.
            </summary>
        </member>
        <member name="M:Terraria.NPC.StrikeNPC(Terraria.NPC.HitInfo,System.Boolean,System.Boolean)">
            <summary>
            Directly deals damage to the NPC, spawns combat text, plays hit sound, deals knockback based on the provided <see cref="T:Terraria.NPC.HitInfo"/><br/>
            Calls <see cref="M:Terraria.NPC.HitEffect(Terraria.NPC.HitInfo)"/> and associated hooks after dealing damage.<br/>
            Calls <see cref="M:Terraria.NPC.checkDead"/><br/>
            Does not automatically send packets. Use <see cref="M:Terraria.NetMessage.SendStrikeNPC(Terraria.NPC,Terraria.NPC.HitInfo@,System.Int32)"/> to synchronize hits.
            </summary>
            <param name="hit">The parameters of the hit. Normally obtained via <see cref="T:Terraria.NPC.HitModifiers"/> or <see cref="M:Terraria.NPC.CalculateHitInfo(System.Int32,System.Int32,System.Boolean,System.Single,Terraria.ModLoader.DamageClass,System.Boolean,System.Single)"/></param>
            <param name="fromNet">true if this strike came from another client over the network. Just changes the combat text to be darker in color.</param>
            <param name="noPlayerInteraction">Prevents <see cref="M:Terraria.NPC.PlayerInteraction(System.Int32)"/> from being called in single player. In multiplayer, player interaction is handled by the server.</param>
            <returns>The actual health lost by the NPC. Normally this is <see cref="P:Terraria.NPC.HitInfo.Damage"/> but it is capped at the current health of the NPC, and represents the actual damage dealt in the case of <see cref="F:Terraria.NPC.HitInfo.InstantKill"/> </returns>
        </member>
        <member name="M:Terraria.NPC.AddBuff(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gives this NPC the provided buff. This accounts for if the NPC is immune to the buff.
            <br/> If the NPC already has the buff, the re-apply logic will happen. Vanilla buff types are found in <see cref="T:Terraria.ID.BuffID"/> and modded buffs are typically retrieved using <see cref="M:Terraria.ModLoader.ModContent.BuffType``1"/>.
            <br/> The quiet parameter will determine if the network sync message should happen. This should always stay false.
            </summary>
            <param name="type">The buff type</param>
            <param name="time">The desired buff time in ticks. 60 ticks is 1 second</param>
            <param name="quiet">If true, the network sync message is skipped.</param>
        </member>
        <member name="M:Terraria.NPC.RequestBuffRemoval(System.Int32)">
            <summary>
            Removes the buff type and shuffles the remaining buff indexes down to fill the gap.
            <br/> Use <see cref="M:Terraria.NPC.DelBuff(System.Int32)"/> if you only know the buff index.
            </summary>
            <param name="buffTypeToRemove">The buff type</param>
        </member>
        <member name="M:Terraria.NPC.DelBuff(System.Int32)">
            <summary>
            Removes the buff at the provided index and shuffles the remaining buff indexes down to fill the gap.
            <br/> Use <see cref="M:Terraria.NPC.RequestBuffRemoval(System.Int32)"/> if you only know the buff type.
            </summary>
            <param name="buffIndex">The index of the buff to remove.</param>
        </member>
        <member name="M:Terraria.NPC.UpdateNPC_UpdateGravity">
            <summary>
            Updates <see cref="P:Terraria.NPC.maxFallSpeed"/> and <see cref="P:Terraria.NPC.gravity"/> in line with vanilla behavior and resets <see cref="F:Terraria.NPC.GravityMultiplier"/>. Behavior can be modified with <see cref="F:Terraria.NPC.GravityIgnoresType"/>, <see cref="F:Terraria.NPC.GravityIgnoresSpace"/>, and <see cref="F:Terraria.NPC.GravityIgnoresLiquid"/>.<br/>
            Certain NPC type ids may also cap velocity, see <see cref="F:Terraria.NPC.GravityIgnoresType"/>.
            </summary>
        </member>
        <member name="M:Terraria.NPC.GetGlobalNPC``1">
            <summary> Gets the instance of the specified GlobalNPC type. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.IndexOutOfRangeException"/>
        </member>
        <member name="M:Terraria.NPC.GetGlobalNPC``1(``0)">
            <summary> Gets the local instance of the type of the specified GlobalNPC instance. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.NullReferenceException"/>
        </member>
        <member name="M:Terraria.NPC.TryGetGlobalNPC``1(``0@)">
            <summary> Gets the instance of the specified GlobalNPC type. </summary>
        </member>
        <member name="M:Terraria.NPC.TryGetGlobalNPC``1(``0,``0@)">
            <summary> Safely attempts to get the local instance of the type of the specified GlobalNPC instance. </summary>
            <returns> Whether or not the requested instance has been found. </returns>
        </member>
        <member name="P:Terraria.NPC.Happiness">
            <summary> Provides access to (static) happiness data associated with this NPC's type. </summary>
        </member>
        <member name="P:Terraria.NPC.SuperArmor">
            <summary>
            Helper property for defense >= 9999. Extremely high defense is interpreted as 'super armor' where attacks will only do 1 damage (or 2 for crits), no matter how strong they are. <br/>
            Passed to <see cref="P:Terraria.NPC.HitModifiers.SuperArmor"/> when doing damage calculations. See the docs there for more info. <br/>
            The only way to bypass super armor is to call <see cref="M:Terraria.NPC.StrikeNPC(Terraria.NPC.HitInfo,System.Boolean,System.Boolean)"/>, or set NPC life directly.
            </summary>
        </member>
        <member name="P:Terraria.NPC.HideStrikeDamage">
            <summary>
            If true, damage combat text will not be shown by <see cref="M:Terraria.NPC.StrikeNPC(Terraria.NPC.HitInfo,System.Boolean,System.Boolean)"/> and dps meter will not record damage against this NPC. <br/>
            Recommended for use with <see cref="F:Terraria.NPC.immortal"/>
            </summary>
        </member>
        <member name="P:Terraria.NPC.BossBar">
            <summary>
            Assign a special boss bar, vanilla or modded. Not used by vanilla.
            <para>To assign a modded boss bar, use NPC.BossBar = ModContent.GetInstance&lt;ExampleBossBar&gt;(); where ExampleBossBar is a ModBossBar</para>
            <para>To assign a vanilla boss bar for whatever reason, fetch it first through the NPC type using Main.BigBossProgressBar.TryGetSpecialVanillaBossBar</para>
            </summary>
        </member>
        <member name="M:Terraria.NPC.HasBuff(System.Int32)">
            <summary> Returns whether or not this NPC currently has a (de)buff of the provided type. </summary>
        </member>
        <member name="M:Terraria.NPC.HasBuff``1">
            <inheritdoc cref="M:Terraria.NPC.HasBuff(System.Int32)" />
        </member>
        <member name="M:Terraria.NPC.NewNPCDirect(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            <inheritdoc cref="M:Terraria.NPC.NewNPC(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)"/>
            <br/><br/>This particular overload returns the actual NPC instance rather than the index of the spawned NPC within the <see cref="F:Terraria.Main.npc"/> array.
            <br/> A short-hand for <code> Main.npc[NPC.NewNPC(...)] </code>
            </summary>
        </member>
        <member name="M:Terraria.NPC.NewNPCDirect(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            <inheritdoc cref="M:Terraria.NPC.NewNPC(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)"/>
            <br/><br/>This particular overload returns the actual NPC instance rather than the index of the spawned NPC within the <see cref="F:Terraria.Main.npc"/> array. It also uses a Vector2 for the spawn position instead of X and Y.
            <br/> A short-hand for <code> Main.npc[NPC.NewNPC(...)] </code>
            </summary>
        </member>
        <member name="M:Terraria.NPC.SitDown(Microsoft.Xna.Framework.Point,System.Int32@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Helper method for getting the parameters for seating a town NPC. Assumes the tile at <paramref name="anchorTilePosition"/> is a valid tile for sitting
            </summary>
        </member>
        <member name="M:Terraria.NPC.CheckCatchNPC(Terraria.NPC,Microsoft.Xna.Framework.Rectangle,Terraria.Item,Terraria.Player,System.Boolean)">
            <summary>
            Runs most code related to the process of checking whether or not an NPC can be caught.<br></br>
            After that, <see cref="M:Terraria.ModLoader.CombinedHooks.OnCatchNPC(Terraria.Player,Terraria.NPC,Terraria.Item,System.Boolean)"/> is run, followed by the code responsible for catching the NPC if applicable.<br></br>
            You will need to call this manually if you want to make an NPC-catching tool which acts differently from vanilla's, such as one that uses a projectile instead of an item.<br></br>
            As a note, if calling this manually, you will need to check <c>npc.active &amp;&amp; npc.catchItem &gt; 0</c> yourself.
            </summary>
            <param name="npc">The NPC which can potentially be caught.</param>
            <param name="catchToolRectangle">The hitbox of the tool being used to catch the NPC --- be it an item, a projectile, or something else entirely.</param>
            <param name="item">The item to be used as a reference for the purposes of <see cref="M:Terraria.ModLoader.CombinedHooks.CanCatchNPC(Terraria.Player,Terraria.NPC,Terraria.Item)"/> and <see cref="M:Terraria.ModLoader.CombinedHooks.OnCatchNPC(Terraria.Player,Terraria.NPC,Terraria.Item,System.Boolean)"/>.</param>
            <param name="player">The player that owns the referenced item.</param>
            <param name="lavaProofTool">Whether or not the tool is lavaproof for the purposes of catching vanilla's Underworld critters. Defaults to false.</param>
            <returns>Whether or not the NPC was successfully caught.</returns>
        </member>
        <member name="M:Terraria.NPC.GetPartyHatGore">
            <summary>
            Returns the gore type of the party hat this NPC is currently wearing. If the NPC isn't wearing a party hat, 0 is returned.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Terraria.NPC.vanillaGravity">
            <summary>
            Used to keep vanilla and modded gravity effects working neatly
            </summary>
        </member>
        <member name="F:Terraria.NPC.GravityMultiplier">
            <summary>
            Multiply this value in order to change the NPCs active gravity, this can be done in AI as gravity values are reset slightly beforehand, and used slightly after.
            </summary>
        </member>
        <member name="P:Terraria.NPC.gravity">
            <summary>
            The current change in velocity due to gravity applied every frame. <br/>
            Multiply <see cref="F:Terraria.NPC.GravityMultiplier"/> to modify this value
            </summary>
        </member>
        <member name="F:Terraria.NPC.vanillaMaxFallSpeed">
            <summary>
            Used to keep vanilla and modded gravity effects working neatly
            </summary>
        </member>
        <member name="F:Terraria.NPC.MaxFallSpeedMultiplier">
            <summary>
            Multiply this value in order to change the NPCs active maxFallSpeed, this can be done in AI as gravity values are reset slightly beforehand
            </summary>
        </member>
        <member name="P:Terraria.NPC.maxFallSpeed">
            <summary>
            The current fall speed cap in velocity applied every frame. <br/>
            Multiply <see cref="F:Terraria.NPC.MaxFallSpeedMultiplier"/> to modify this value
            </summary>
        </member>
        <member name="P:Terraria.NPC.GravityWetMultipliers">
            <summary>
            The effect of different liquids on NPC gravity. Provided for reference only, modifying these will have no effect. <br/>
            Corresponds with wet, lavaWet, honetWet, and shimmerWet.
            </summary>
        </member>
        <member name="P:Terraria.NPC.MaxFallSpeedWetMultipliers">
            <summary>
            The effect of different liquids on NPC maxFallSpeed. Provided for reference only, modifying these will have no effect. <br/>
            Corresponds with wet, lavaWet, honetWet, and shimmerWet.
            </summary>
        </member>
        <member name="F:Terraria.NPC.GravityIgnoresType">
            <summary>
            Set to disable vanilla type and AI based NPC gravity calculations. <br/>
            Affects types 258, 425, 576, 577, 427, 426, 541, and the aiStyle 7. <br/>
            Use with caution
            </summary>
        </member>
        <member name="F:Terraria.NPC.GravityIgnoresSpace">
            <summary>
            Set to disable the effect of being in space on NPC gravity.
            </summary>
        </member>
        <member name="F:Terraria.NPC.GravityIgnoresLiquid">
            <summary>
            Set to disable the effect of being submerged in liquid on NPC gravity. <br/>
            Note that being submerged in liquid overrides both type and space effects.
            </summary>
        </member>
        <member name="T:Terraria.NPC.HitModifiers">
            <summary>
            Represents a damage calculation in the process of being calculated for damage to be applied to an NPC. The final damage calculation will be present in the resulting <see cref="T:Terraria.NPC.HitInfo"/>.
            </summary>
        </member>
        <member name="P:Terraria.NPC.HitModifiers.DamageType">
            <summary>
            The DamageType of the hit.
            </summary>
        </member>
        <member name="P:Terraria.NPC.HitModifiers.HitDirection">
            <summary>
            The direction to apply knockback. If 0, no knockback will be applied. <br/>
            Could potentially be used for directional resistances. <br/>
            Can be overridden by <see cref="P:Terraria.NPC.HitModifiers.HitDirectionOverride"/>
            </summary>
        </member>
        <member name="P:Terraria.NPC.HitModifiers.SuperArmor">
            <summary>
            If true, no amount of damage can get through the defense of this NPC, damage will be reduced to 1. <br/>
            <see cref="F:Terraria.NPC.HitModifiers.CritDamage"/> will still apply, but only Additive and Multiplicative. Maximum crit damage will be capped at 4. <br/>
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitModifiers.SourceDamage">
            <summary>
            Use this to enhance or scale the base damage of the item/projectile/hit. This damage modifier will apply to <see cref="P:Terraria.NPC.HitInfo.SourceDamage"/> and be transferred to on-hit effects. <br/>
            <br/>
            For effects which apply to all damage dealt by the player, or a specific damage type, consider using <see cref="M:Terraria.Player.GetDamage(Terraria.ModLoader.DamageClass)"/> instead. <br/>
            For effects which apply to all damage dealt by an item, consider using <see cref="M:Terraria.ModLoader.GlobalItem.ModifyWeaponDamage(Terraria.Item,Terraria.Player,Terraria.ModLoader.StatModifier@)"/> instead. <br/>
            <br/>
            Used by vanilla for weapons with unique scaling such as jousting lance, ham bat, breaker blade. And for accessories which enhance a projectile (strong bees)
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitModifiers.FlatBonusDamage">
            <summary>
            Use this to add bonus damage to the hit, but not to on-hit effects. <br/>
            <br/>
            Used by vanilla for most summon tag damage.
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitModifiers.ScalingBonusDamage">
            <summary>
            Use this to add bonus <br/>
            Used by vanilla for melee parry buff (+4f) and some summon tag damage.
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitModifiers.TargetDamageMultiplier">
            <summary>
            Not recommended for modded use due to difficulty balancing around defense, consider multiplying <see cref="F:Terraria.NPC.HitModifiers.FinalDamage"/> instead. <br/>
            Used by vanilla for banners, cultist projectile resistances, extra damage for stakes against vampires etc.
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitModifiers.Defense">
            <summary>
            The defense of the receiver, including any temporary modifiers (buffs/debuffs). <br/>
            <br/>
            Increase <see cref="F:Terraria.ModLoader.StatModifier.Base"/> to add extra defense. <br/>
            Add for scaling buffs (eg +0.1f for +10% defense). <br/>
            Multiply for debuffs (eg *0.9f for -10% defense). <br/>
            Decrease <see cref="F:Terraria.ModLoader.StatModifier.Flat"/> to provide flat debuffs like ichor or betsys curse <br/>
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitModifiers.ArmorPenetration">
            <summary>
            Flat defense reduction. Applies after <see cref="F:Terraria.NPC.HitModifiers.ScalingArmorPenetration"/>. <br/>
            Add to give bonus flat armor penetration. <br/>
            Do not subtract or multiply, consider altering <see cref="F:Terraria.NPC.HitModifiers.Defense"/> or <see cref="F:Terraria.NPC.HitModifiers.ScalingArmorPenetration"/> instead.
            <br/>
            Used by the <see cref="P:Terraria.Projectile.ArmorPenetration"/>, <see cref="P:Terraria.Item.ArmorPenetration"/> and <see cref="M:Terraria.Player.GetTotalArmorPenetration(Terraria.ModLoader.DamageClass)"/> stats.
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitModifiers.ScalingArmorPenetration">
            <summary>
            Used to ignore a fraction of enemy armor. Applies before flat <see cref="F:Terraria.NPC.HitModifiers.ArmorPenetration"/>. <br/>
            Recommend only additive buffs, no multiplication or subtraction. <br/>
            <br/>
            At 1f, the attack will completely ignore all defense.
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitModifiers.DefenseEffectiveness">
            <summary>
            The conversion ratio between defense and damage reduction. Defaults to 0.5 for NPCs. Depends on difficulty for players. <br/>
            Increase to make defense more effective and armor penetration more important. <br/>
            <br/>
            Recommend only multiplication, no addition or subtraction. <br/>
            Not recommended to for buffs/debuffs. Use for gamemode tweaks, or if an enemy revolves very heavily around armor penetration.
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitModifiers.CritDamage">
            <summary>
            Applied to the final damage (after defense) result when the hit is a crit. Defaults to +1f additive (+100% damage). <br/>
             <br/>
            Add to give hits extra crit damage (eg +0.1f for 10% extra crit damage (total +110% or 2.1 times base). <br/>
            Add to <see cref="F:Terraria.ModLoader.StatModifier.Flat"/> to give crits extra flat damage. Use with caution as this extra damage will not be reduced by armor. <br/>
            Multiplication not recommended for buffs. Could be used to decrease the effectiveness of crits on an enemy without disabling completely. <br/>
            Use of <see cref="F:Terraria.ModLoader.StatModifier.Base"/> also not recommended. <br/>
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitModifiers.NonCritDamage">
            <summary>
            Applied to damage after defense and before <see cref="F:Terraria.NPC.HitModifiers.FinalDamage"/> when the hit is _not_ a crit. <br/>
            Effectively a compliment for <see cref="F:Terraria.NPC.HitModifiers.CritDamage"/>
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitModifiers.FinalDamage">
            <summary>
            Applied to the final damage result. <br/>
            Used by <see cref="F:Terraria.NPC.takenDamageMultiplier"/> to make enemies extra susceptible/resistant to damage. <br/>
            <br/>
            Multiply to make your enemy more susceptible or resistant to damage. <br/>
            Add to give 'bonus' post-mitigation damage. <br/>
            Add to <see cref="F:Terraria.ModLoader.StatModifier.Base"/> to deal damage which ignores armor, but still respects scaling damage reductions or increases. <br/>
            Adding to <see cref="F:Terraria.ModLoader.StatModifier.Flat"/> will ignore all reductions or increases to deal unconditional damage. Not recommended due to potential compatibility issues with enemy or player damage reduction effects, use <see cref="F:Terraria.ModLoader.StatModifier.Base"/> instead.
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitModifiers.DamageVariationScale">
            <summary>
            Multiply to adjust the damage variation of the hit. <br/>
            Multiply by 0 to disable damage variation.<br/>
            Default damage variation is 15%, so maximum scale is ~6.67 <br/>
            Only affects hits where damage variation is enabled (which is most projectile/item/NPC damage)
            </summary>
        </member>
        <member name="M:Terraria.NPC.HitModifiers.SetMaxDamage(System.Int32)">
            <summary>
            Sets an inclusive upper bound on the final damage of the hit. <br/>
            Can be set by multiple mods, in which case the lowest limit will be used. <br/>
            Cannot be set to less than 1
            </summary>
        </member>
        <member name="M:Terraria.NPC.HitModifiers.DisableCrit">
            <summary>
            Disables <see cref="F:Terraria.NPC.HitModifiers.CritDamage"/> calculations, and clears <see cref="F:Terraria.NPC.HitInfo.Crit"/> flag from the resulting hit.
            </summary>
        </member>
        <member name="M:Terraria.NPC.HitModifiers.SetCrit">
            <summary>
            Sets the hit to be a crit. Does nothing if <see cref="M:Terraria.NPC.HitModifiers.DisableCrit"/> has been called
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitModifiers.Knockback">
            <summary>
            Used by <see cref="F:Terraria.NPC.onFire2"/> buff (additive) and <see cref="F:Terraria.NPC.knockBackResist"/> (multiplicative) <br/>
            <br/>
            Recommend using <see cref="M:Terraria.ModLoader.GlobalItem.ModifyWeaponKnockback(Terraria.Item,Terraria.Player,Terraria.ModLoader.StatModifier@)"/> or <see cref="M:Terraria.Player.GetKnockback(Terraria.ModLoader.DamageClass)"/> instead where possible.<br/>
            <br/>
            Add for knockback buffs. <br/>
            Multiply for knockback resistances. <br/>
            Subtraction not recommended. <br/>
            <br/>
            Knockback falloff still applies after this, so high knockback has diminishing returns. <br/>
            </summary>
        </member>
        <member name="P:Terraria.NPC.HitModifiers.HitDirectionOverride">
            <summary>
            Overrides the direction to apply knockback. <br/>
            Will not affect <see cref="P:Terraria.NPC.HitModifiers.HitDirection"/>, only the final <see cref="F:Terraria.NPC.HitInfo.HitDirection"/><br/>
            If set by multiple mods, only the last override will apply. <br/>
            Intended for use by flails, or other projectiles which need to hit the NPC away from the player, even when striking from behind.
            </summary>
        </member>
        <member name="M:Terraria.NPC.HitModifiers.SetInstantKill">
            <summary>
            Set to make the hit instantly kill the target, dealing as much damage as necessary. <br/>
            Combat text will not be shown.
            </summary>
        </member>
        <member name="M:Terraria.NPC.HitModifiers.HideCombatText">
            <summary>
            Set to hide the damage number popup for this hit.
            </summary>
        </member>
        <member name="E:Terraria.NPC.HitModifiers.ModifyHitInfo">
            <summary>
            Use with caution and consider other alternatives first.<br/>
            Can be used to register a callback to freely modify the <see cref="T:Terraria.NPC.HitInfo"/> produced by <see cref="M:Terraria.NPC.HitModifiers.ToHitInfo(System.Single,System.Boolean,System.Single,System.Boolean,System.Single)"/> before it is returned<br/>
            If multiple mods register different callbacks which modify the hit info in different ways the results could be a mess!
            </summary>
        </member>
        <member name="T:Terraria.NPC.HitInfo">
            <summary>
            Represents a finalized damage calculation for damage about to be applied to an NPC. This is the result of the all modifications done previously in a <see cref="T:Terraria.NPC.HitModifiers"/>.
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitInfo.DamageType">
            <summary>
            The DamageType of the hit.
            </summary>
        </member>
        <member name="P:Terraria.NPC.HitInfo.SourceDamage">
            <summary>
            The amount of damage 'dealt' to the NPC, before incoming damage multipliers, armor, critical strikes etc.<br/>
            Use this to trigger effects which scale based on damage dealt, and also deal damage.<br/>
            Cannot be set to less than 1.<br/>
            <br/>
            Using this instead of <see cref="P:Terraria.NPC.HitInfo.Damage"/> can prevent diminishing returns from NPC defense, double crits, or excessively strong effects if the NPC has a vulnerability to the weapon/projectile (like vampires and stakes).
            <br/>
            Used by vanilla for dryad ward retaliation, and many sword on-hit projectiles like volcano and beekeeper
            </summary>
        </member>
        <member name="P:Terraria.NPC.HitInfo.Damage">
            <summary>
            The amount of damage received by the NPC. How much life the NPC will lose. <br/>
            Is NOT capped at the NPC's current life. <br/>
            Will be 1 if <see cref="F:Terraria.NPC.HitInfo.InstantKill"/> is set. <br/>
            Cannot be set to less than 1.
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitInfo.Crit">
            <summary>
            Whether or not the hit is a crit
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitInfo.HitDirection">
            <summary>
            The direction to apply knockback in.
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitInfo.Knockback">
            <summary>
            The amount of knockback to apply. Should always be >= 0. <br/>
            Note that <see cref="M:Terraria.NPC.StrikeNPC(Terraria.NPC.HitInfo,System.Boolean,System.Boolean)"/> has a staggered knockback falloff, and that critical strikes automatically get extra 40% knockback in excess of this value.
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitInfo.InstantKill">
            <summary>
            If true, as much damage as necessary will be dealt, and damage number popups will not be shown for this hit. <br/>
            Has no effect if the NPC is <see cref="F:Terraria.NPC.immortal"/>
            </summary>
        </member>
        <member name="F:Terraria.NPC.HitInfo.HideCombatText">
            <summary>
            If true, damage number popups will not be shown for this hit.
            </summary>
        </member>
        <member name="F:Terraria.Player.name">
            <summary>
            This player's displayed name.
            <br/> Usually capped at 20 characters.
            </summary>
        </member>
        <member name="F:Terraria.Player.dashType">
            <summary>
            The current vanilla dash that the player is using.<br/>
            The following values correspond to vanilla dashes:<br/>
            1 => Tabi / Master Ninja Gear<br/>
            2 => Shield of Cthulhu<br/>
            3 => Solar Flare armor set bonus<br/>
            4 => Unused, though a dash for this value DOES exist<br/>
            5 => Crystal Assassin set bonus<br/>
            </summary>
        </member>
        <member name="F:Terraria.Player.dash">
            <summary>
            The current vanilla dash that the player is VISIBLY using.<br/>
            Unlike <see cref="F:Terraria.Player.dashType"/>, this does not update if a dash cannot currently be input.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Player.dashTime">
            <summary>
            The amount of time this player has left, in ticks, to input the second keystroke of a standard dash input (double-tap left/right).<br/>
            For vanilla dashes, this window is 15 ticks, or a quarter of a second, in total.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Player.timeSinceLastDashStarted">
            <summary>
            The amount of time that has passed, in ticks, since this player last performed a dash.
            </summary>
        </member>
        <member name="F:Terraria.Player.dashDelay">
            <summary>
            The amount of time that has to pass, in ticks, before a new dash input will be registered.<br/>
            For the first frame of any given dash, this is set to -1. After that frame has passed, it is set to 20 ticks, or 1/3 of a second.<br/>
            For the Tabi dash, and when dashing into an enemy with the Shield of Cthulhu, this is set to 30 ticks, or 1/2 of a second, instead.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Player.meleeEnchant">
            <summary>
            The vanilla flask effect which the player currently has active; these affect all melee weapons and whips.<br/>
            Defaults to 0, which denotes that the player does not currently have a flask active.<br/>
            The following values correspond to vanilla flasks:<br/>
            1 => Flask of Venom (affected weapons proc Acid Venom on hit)<br/>
            2 => Flask of Cursed Flames (affected weapons proc Cursed Inferno on hit)<br/>
            3 => Flask of Fire (affected weapons proc On Fire! on hit)<br/>
            4 => Flask of Gold (affected weapons proc Midas on hit)<br/>
            5 => Flask of Ichor (affected weapons proc Ichor on hit)<br/>
            6 => Flask of Nanites (affected weapons proc Confused on hit)<br/>
            7 => Flask of Party (affected weapons sometimes release confetti explosions on hit)<br/>
            8 => Flask of Poison (affected weapons proc Poisoned on hit)<br/>
            </summary>
        </member>
        <member name="F:Terraria.Player.spikedBoots">
            <summary>
            Used by the Shoe Spikes and Climbing Claws to allow for holding onto walls (of tiles, not to be confused with actual walls).<br/>
            Defaults to 0. Any value higher than 0 allows the player to wall-jump.<br/>
            A value of 1 causes the player to slowly slide down them while holding onto them.<br/>
            A value of 2 or more doesn't give this limitation, allowing the player to stay holding onto a wall indefinitely.
            </summary>
        </member>
        <member name="F:Terraria.Player.endurance">
            <summary>
            The percent of damage this player should resist.
            <br/> Has a soft cap of <c>1f</c>. Cannot reduce taken damage below <c>1</c>.
            </summary>
        </member>
        <member name="F:Terraria.Player.resistCold">
            <summary>
            If <see langword="true"/>, this player will take 30% less damage from any NPC with <see cref="F:Terraria.NPC.coldDamage"/> set and any projectile with <see cref="F:Terraria.Projectile.coldDamage"/> set.
            </summary>
        </member>
        <member name="F:Terraria.Player.accFishingLine">
            <summary>
            If <see langword="true"/>, this player's fishing line will never break.
            </summary>
        </member>
        <member name="F:Terraria.Player.maxMinions">
            <summary>
            The maximum value of minions this player can have summoned at once.
            <br/> A minion's value is stored as <see cref="F:Terraria.Projectile.minionSlots"/>.
            </summary>
        </member>
        <member name="F:Terraria.Player.numMinions">
            <summary>
            The current number of minions this player has summoned. Note that <see cref="F:Terraria.Player.slotsMinions"/> is how the minion limit is tracked, not this.
            </summary>
        </member>
        <member name="F:Terraria.Player.slotsMinions">
            <summary>
            The current total value of minions this player has summoned. Used to limit active minions to <see cref="F:Terraria.Player.maxMinions"/>
            <br/> A minion's value is stored as <see cref="F:Terraria.Projectile.minionSlots"/>.
            </summary>
        </member>
        <member name="F:Terraria.Player.townNPCs">
            <summary>
            The sum of the <see cref="F:Terraria.NPC.npcSlots"/> of all town NPCs near this player.
            <br/> If <c><see cref="F:Terraria.Player.townNPCs"/> &gt; 2f</c>, then this player is in a town.
            </summary>
        </member>
        <member name="F:Terraria.Player.armor">
            <summary>
            The player's armor and accessories. Indexes 0-2 hold head, chest, and legs armor while 10-12 hold the respective social armor items. Indexes 3-9 hold the accessories and 13-19 hold the social accessory items. Modded accessory slots are stored separately.<br/><br/>
            Generally speaking, modders <b>should not be accessing this array</b> to check for specific accessories, that is not how Terraria is designed and is not scalable, especially since modded accessory slots exist and each can have special logic. Modders should be using <see cref="M:Terraria.ModLoader.ModItem.UpdateAccessory(Terraria.Player,System.Boolean)"/> to set fields in a <see cref="T:Terraria.ModLoader.ModPlayer"/> class, then use those values for gameplay effects. <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Old/SimpleModPlayer.cs">SimpleModPlayer.cs</see> shows the proper approach and explains this pattern.<br/><br/>
            The corresponding dye items are found in <see cref="F:Terraria.Player.dye"/>. The player's inventory is <see cref="F:Terraria.Player.inventory"/>. For equipment, see <see cref="F:Terraria.Player.miscEquips"/> and <see cref="F:Terraria.Player.miscDyes"/>. <see cref="F:Terraria.Player.trashItem"/> is the trash slot.<br/><br/>
            </summary>
        </member>
        <member name="F:Terraria.Player.miscEquips">
            <summary>
            The player's equipment items. From indexes 0-4: Pet, Light Pet, Minecart, Mount, and Hook.
            </summary>
        </member>
        <member name="F:Terraria.Player.buffType">
            <summary>
            The <see cref="T:Terraria.ID.BuffID"/>s of all buffs this player has active.
            <br/> A value of <c>0</c> means that buff slot is empty.
            <br/> Buff times are stored with the same index in <see cref="F:Terraria.Player.buffTime"/>.
            <br/> <see cref="M:Terraria.Player.AddBuff(System.Int32,System.Int32,System.Boolean,System.Boolean)"/>, <see cref="M:Terraria.Player.ClearBuff(System.Int32)"/>, and <see cref="M:Terraria.Player.DelBuff(System.Int32)"/> should be used to manipulate player buffs.
            </summary>
        </member>
        <member name="F:Terraria.Player.buffTime">
            <summary>
            The remaining durations in ticks of all buffs this player has active.
            <br/> A value of <c>0</c> means that buff slot is empty.
            <br/> Buff types are stored with the same index in <see cref="F:Terraria.Player.buffType"/>.
            <br/> <see cref="M:Terraria.Player.AddBuff(System.Int32,System.Int32,System.Boolean,System.Boolean)"/>, <see cref="M:Terraria.Player.ClearBuff(System.Int32)"/>, and <see cref="M:Terraria.Player.DelBuff(System.Int32)"/> should be used to manipulate player buffs.
            </summary>
        </member>
        <member name="F:Terraria.Player.buffImmune">
            <summary>
            Indexed by <see cref="T:Terraria.ID.BuffID"/>. If <see langword="true"/> for a given <see cref="T:Terraria.ID.BuffID"/>, then this player cannot be inflicted with that buff.
            <br/> Additionally, if the player is inflicted with that buff and becomes immune to it, the buff will be cleared.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Player.setBonus">
            <summary>
            The text that is shown on armor (<see cref="F:Terraria.Item.wornArmor"/>) with an active set bonus.
            </summary>
        </member>
        <member name="F:Terraria.Player.inventory">
            <summary>
            The player's normal inventory. Indexes 0-9 hold the hotbar items, 10-49 the rest of the main inventory, 50-53 are coin slots, 54-57 are ammo slots. Index 58 is used to store the mouse item in some situations.<br/>
            Additional inventories are found in <see cref="F:Terraria.Player.bank"/> (Piggy Bank), <see cref="F:Terraria.Player.bank2"/> (Safe), <see cref="F:Terraria.Player.bank3"/> (Defender's Forge), and <see cref="F:Terraria.Player.bank4"/> (Void Vault).
            For armor and accessories, see <see cref="F:Terraria.Player.armor"/> and <see cref="F:Terraria.Player.dye"/>. For equipment, see <see cref="F:Terraria.Player.miscEquips"/> and <see cref="F:Terraria.Player.miscDyes"/>. <see cref="F:Terraria.Player.trashItem"/> is the trash slot.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Player.gfxOffY">
            <summary>
            An offset from the actual position of the player that will be added to the draw position. Used to fake the effect of the player smoothly traveling up single block obstacles.
            </summary>
        </member>
        <member name="F:Terraria.Player.manaCost">
            <summary>
            The percent of mana actually used when mana is consumed.
            <br/> Cannot reduce an item's mana cost below <c>0</c>.
            </summary>
        </member>
        <member name="F:Terraria.Player.statDefense">
            <summary>
            The defense value of this player.<br/>
            The <see href="https://terraria.wiki.gg/wiki/Defense#Players">Defense wiki page</see> teaches how player defense affects incoming damage alongside <see cref="F:Terraria.Player.DefenseEffectiveness"/>.<br/>
            The value resets to 0 during <see cref="M:Terraria.Player.ResetEffects"/> and is manipulated throughout <see cref="M:Terraria.Player.Update(System.Int32)"/>.<br/>
            If the final value is needed, <see cref="M:Terraria.ModLoader.ModPlayer.PostUpdate"/> or anytime later is the best place. As such it is not recommended to manipulate the value during PostUpdate or at any time later for compatibility. Failure to follow this guideline will result in inconsistent behavior.<br/>
            Due to this field being a <see cref="T:Terraria.Player.DefenseStat"/>, modders can freely add, subtract, multiply, and divide the value. The final result will properly account for all modifications applied.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Player.DefenseEffectiveness">
            <summary>
            Determines how effective the player's <see cref="F:Terraria.Player.statDefense"/> is at reducing incoming damage.<br/>
            The <see href="https://terraria.wiki.gg/wiki/Defense#Players">Defense wiki page</see> explains the effect, shown in the wiki as "factor".<br/>
            </summary>
        </member>
        <member name="F:Terraria.Player.statLifeMax">
            <summary>
            The maximum health this player can have without adjustment.
            <br/> You should <strong>not</strong> modify this value. If you need to increase max health for equipment, modify <see cref="F:Terraria.Player.statLifeMax2"/>. If you need to increase max health for a permanent stat boost, use <see cref="M:Terraria.ModLoader.ModPlayer.ModifyMaxStats(Terraria.ModLoader.StatModifier@,Terraria.ModLoader.StatModifier@)"/>.
            </summary>
        </member>
        <member name="F:Terraria.Player.statLifeMax2">
            <summary>
            The maximum health this player can have, adjusted by buffs and equipment.
            </summary>
        </member>
        <member name="F:Terraria.Player.statLife">
            <summary>
            The current health of this player. Capped at <see cref="F:Terraria.Player.statLifeMax2"/>.
            <br/> If you increase this value, be sure to respect the cap.
            </summary>
            <remarks>
            If you want to heal the player with the green text effect, use <see cref="M:Terraria.Player.Heal(System.Int32)"/>.
            <br/> If you want to hurt the player, use <see cref="M:Terraria.Player.Hurt(Terraria.DataStructures.PlayerDeathReason,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Single,System.Single,System.Single)"/>.
            </remarks>
        </member>
        <member name="F:Terraria.Player.statMana">
            <summary>
            The current mana of this player. Capped at <see cref="F:Terraria.Player.statManaMax2"/>.
            <br/> If you increase this value, be sure to respect the cap.
            </summary>
            <remarks>
            If you want to use mana, use <see cref="M:Terraria.Player.CheckMana(Terraria.Item,System.Int32,System.Boolean,System.Boolean)"/> or its overload.
            </remarks>
        </member>
        <member name="F:Terraria.Player.statManaMax">
            <summary>
            The maximum mana this player can have without adjustment.
            <br/> You should <strong>not</strong> modify this value. If you need to increase max mana for equipment, modify <see cref="F:Terraria.Player.statManaMax2"/>. If you need to increase max mana for a permanent stat boost, use <see cref="M:Terraria.ModLoader.ModPlayer.ModifyMaxStats(Terraria.ModLoader.StatModifier@,Terraria.ModLoader.StatModifier@)"/>.
            </summary>
        </member>
        <member name="F:Terraria.Player.statManaMax2">
            <summary>
            The maximum mana this player can have, adjusted by buffs and equipment.
            </summary>
        </member>
        <member name="F:Terraria.Player.lifeRegen">
            <summary>
            The rate of this player's life regeneration in health/ticks, divided by <c>120</c>.
            <br/> For example, adding <c>10</c> to this value regenerates <c>10 / 120</c> = <c>1/6</c> health per tick, or 5 health per second.
            <br/> Life regeneration is accumulated every tick in <see cref="F:Terraria.Player.lifeRegenCount"/>.
            <br/> This value should be subtracted from in <see cref="M:Terraria.ModLoader.ModPlayer.UpdateBadLifeRegen"/> and added to in <see cref="M:Terraria.ModLoader.ModPlayer.UpdateLifeRegen"/>.
            </summary>
        </member>
        <member name="F:Terraria.Player.lifeRegenCount">
            <summary>
            This player's accumulated life regeneration.
            <br/> If this value reaches or exceeds <c>120</c>, the player gains <c><see cref="F:Terraria.Player.lifeRegenCount"/> / 120</c> health and this value decreases until it no longer exceeds <c>120</c>.
            <br/> If this value reaches or exceeds <c>-120</c>, the player loses health in the same way.
            </summary>
        </member>
        <member name="F:Terraria.Player.lifeRegenTime">
            <summary>
            How effective this player's natural life regeneration should be. Resets whenever the player is hurt, increases over time.
            <br/> Certain effects increase this value to increase
            </summary>
            <remarks>
            Use <see cref="M:Terraria.ModLoader.ModPlayer.NaturalLifeRegen(System.Single@)"/> to directly modify natural life regeneration.
            </remarks>
        </member>
        <member name="F:Terraria.Player.strongBees">
            <summary>
            If <see langword="true"/>, then the bees created by <see cref="F:Terraria.Player.honeyCombItem"/> have a chance to be stronger.
            </summary>
        </member>
        <member name="F:Terraria.Player.unlockedSuperCart">
            <summary>
            If <see langword="true"/>, then this player has permanently buffed their minecarts. See <see cref="P:Terraria.Player.UsingSuperCart"/> for more info.
            </summary>
        </member>
        <member name="F:Terraria.Player.enabledSuperCart">
            <summary>
            If <see langword="true"/>, then this player has the effects of the Super Cart enabled. See <see cref="P:Terraria.Player.UsingSuperCart"/> for more info.
            </summary>
        </member>
        <member name="F:Terraria.Player.mount">
            <summary>
            This player's <see cref="T:Terraria.Mount"/>.
            <br/> <strong>Do not overwrite this value.</strong> Instead, call <see cref="M:Terraria.Mount.SetMount(System.Int32,Terraria.Player,System.Boolean)"/> or <see cref="M:Terraria.Mount.Dismount(Terraria.Player)"/> on it.
            </summary>
        </member>
        <member name="F:Terraria.Player.moveSpeed">
            <summary>
            The multiplier on this player's <see cref="F:Terraria.Player.maxRunSpeed"/> and <see cref="F:Terraria.Player.runAcceleration"/>.
            </summary>
        </member>
        <member name="F:Terraria.Player.jumpSpeed">
            <summary>
            The speed, in pixels/tick, that this players jumps at.
            </summary>
        </member>
        <member name="F:Terraria.Player.maxRunSpeed">
            <summary>
            The maximum speed, in pixels/tick, that this player can reach by just running.
            </summary>
            <remarks>To apply a global run speed modifier, use <see cref="F:Terraria.Player.moveSpeed"/>.</remarks>
        </member>
        <member name="F:Terraria.Player.runAcceleration">
            <summary>
            The acceleration, in pixels/ticks^2, that this player experiences while running.
            </summary>
            <remarks>To apply a global run speed modifier, use <see cref="F:Terraria.Player.moveSpeed"/>.</remarks>
        </member>
        <member name="F:Terraria.Player.jumpSpeedBoost">
            <summary>
            How much to directly increase <see cref="F:Terraria.Player.jumpSpeed"/>, in pixels/tick.
            </summary>
        </member>
        <member name="F:Terraria.Player.extraFall">
            <summary>
            The number of extra tiles this player can fall before they start taking fall damage.
            </summary>
            <remarks>
            If you want to prevent fall damage entirely, use <see cref="F:Terraria.Player.noFallDmg"/>.
            </remarks>
        </member>
        <member name="F:Terraria.Player.noFallDmg">
            <summary>
            If <see langword="true"/>, this player will take no fall damage.
            </summary>
        </member>
        <member name="F:Terraria.Player.honeyCombItem">
            <summary>
            If not <see langword="null"/>, this player will create damaging bee projectiles when taking damage.
            </summary>
        </member>
        <member name="F:Terraria.Player.chest">
            <summary>
            Represents the chest the player currently has open. If -1, the player has no chest open.<br/>
            Positive values indicate the index of the chest in <see cref="F:Terraria.Main.chest"/> the player currently has open.<br/>
            Negative values are used to indicate additional inventories: Piggy Bank (-2), Safe (-3), Defender's Forge (-4), Void Vault (-5)
            </summary>
        </member>
        <member name="F:Terraria.Player.ownedProjectileCounts">
            <summary>
            Provides efficient access to the number of projectiles of the specified type owned by this player currently active in the game world.<br/>
            Can be used to prevent spawning additional projectiles when a limit is reached.<br/>
            Updated each game update right before Player.UpdateBuffs.<br/>
            For example, <c>return player.ownedProjectileCounts[Item.shoot] &lt; 1;</c> in <see cref="M:Terraria.ModLoader.ModItem.CanUseItem(Terraria.Player)"/> could prevent a player using the item if the projectile the item spawns is already in the game world for the player.
            </summary>
        </member>
        <member name="P:Terraria.Player.MountedCenter">
            <summary>
            Returns the player's center adjusted for mount and step stool usage. Typically used in conjunction with <see cref="M:Terraria.Player.RotatedRelativePoint(Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean)"/> to retrieve a suitable position for positioning items and effects originating from the player.
            </summary>
        </member>
        <member name="P:Terraria.Player.CCed">
            <summary>
            Checks if the player is currently "crowd controlled", meaning the player is <see cref="F:Terraria.Player.frozen"/>, <see cref="F:Terraria.Player.webbed"/>, or <see cref="F:Terraria.Player.stoned"/>. Used in various checks to prevent some player actions that shouldn't be possible while in those states, such as channeling attacks, quick using items, and swapping loadouts.
            </summary>
        </member>
        <member name="P:Terraria.Player.ZoneSkyHeight">
            <summary>
            If <see langword="true"/>, then this player is the top 35% of the world.
            <br/> <strong>NOTE:</strong> Vanilla uses a lot of different conditions for what counts as space. This flag is never used in vanilla, but the logic behind it is used for NPC shops and enemy spawns.
            </summary>
        </member>
        <member name="P:Terraria.Player.ZoneOverworldHeight">
            <summary>
            If <see langword="true"/>, then this player is above ground (<see cref="F:Terraria.Main.worldSurface"/>) but not in space (<see cref="P:Terraria.Player.ZoneSkyHeight"/>).
            </summary>
        </member>
        <member name="P:Terraria.Player.ZoneDirtLayerHeight">
            <summary>
            If <see langword="true"/>, then this player is underground (<see cref="F:Terraria.Main.worldSurface"/>) but above the Caverns layer (<see cref="F:Terraria.Main.rockLayer"/>).
            </summary>
        </member>
        <member name="P:Terraria.Player.ZoneRockLayerHeight">
            <summary>
            If <see langword="true"/>, then this player is in the Caverns layer (<see cref="F:Terraria.Main.rockLayer"/>) but not in the Underworld (<see cref="P:Terraria.Main.UnderworldLayer"/>).
            </summary>
        </member>
        <member name="P:Terraria.Player.ZoneUnderworldHeight">
            <summary>
            If <see langword="true"/>, then this player is in the Underworld (<see cref="P:Terraria.Main.UnderworldLayer"/>).
            </summary>
        </member>
        <member name="P:Terraria.Player.UsingSuperCart">
            <summary>
            If <see langword="true"/>, then any minecart (<see cref="F:Terraria.ID.MountID.Sets.Cart"/>) this player rides in will be significantly faster and fire lasers.
            <br/> Cannot be <see langword="true"/> if <see cref="F:Terraria.Player.unlockedSuperCart"/> is <see langword="false"/>.
            </summary>
        </member>
        <member name="P:Terraria.Player.TalkNPC">
            <summary>
            The NPC instance the player is talking to, or null if <see cref="P:Terraria.Player.talkNPC"/> is -1
            </summary>
        </member>
        <member name="P:Terraria.Player.ItemAnimationJustStarted">
            <summary>
            Returns true if the item animation is in its first frame.
            </summary>
        </member>
        <member name="M:Terraria.Player.RotatedRelativePoint(Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean)">
            <summary>
            Takes an input position and returns the position adjusted to the players visual rotation and offset. This accounts for the player being shifted up or down and rotated while riding a mount, sitting in a chair, and sleeping. <br/>
            </summary>
            <param name="pos"></param>
            <param name="reverseRotation"></param>
            <param name="addGfxOffY"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Player.HealEffect(System.Int32,System.Boolean)">
            <summary>
            Spawns a <see cref="T:Terraria.CombatText"/> indicating the player healed <paramref name="healAmount"/> life and syncs it if <paramref name="broadcast"/> is true. <br/>
            Note that this doesn't actually heal the player, it only spawns the floating text. The <see cref="M:Terraria.Player.Heal(System.Int32)"/> method heals the player and calls this method and is more commonly used.
            </summary>
        </member>
        <member name="M:Terraria.Player.AddBuff(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gives the player the provided buff. This accounts for if the player is immune to the buff. This also accounts for adjusting the buff time for different game modes. If the player already has the buff, the re-apply logic will happen. Vanilla buff types are found in <see cref="T:Terraria.ID.BuffID"/> and modded buffs are typically retrieved using <see cref="M:Terraria.ModLoader.ModContent.BuffType``1"/>. The quiet parameter will determine if the network sync message should happen. This should only be set to false in non-deterministic situations (such as random chance) and code that only runs locally. Other situations run on all clients so the buff should automatically be applied on all clients, keeping the player buff data in sync without burdening the network. When in doubt, consult vanilla source code examples or test your code.
            <br/> If applying a buff to a player other than the local player in pvp, quiet should be false and the buff must be true in <see cref="F:Terraria.Main.pvpBuff"/> to properly sync.
            </summary>
            <param name="type">The buff type</param>
            <param name="timeToAdd">The desired buff time in ticks. 60 ticks is 1 second</param>
            <param name="quiet">If true, the network sync message is skipped.</param>
            <param name="foodHack">unused</param>
        </member>
        <member name="M:Terraria.Player.DelBuff(System.Int32)">
            <summary>
            Removes the buff at the provided index in <see cref="F:Terraria.Player.buffType"/> and <see cref="F:Terraria.Player.buffTime"/> and shuffles the remaining buff indexes down to fill the gap. Use <see cref="M:Terraria.Player.ClearBuff(System.Int32)"/> if you only know the <see cref="T:Terraria.ID.BuffID"/>.
            </summary>
            <param name="b">The index in <see cref="F:Terraria.Player.buffType"/> of the buff to remove.</param>
        </member>
        <member name="M:Terraria.Player.ClearBuff(System.Int32)">
            <summary>
            Removes the provided buff type from the player and shuffles the remaining buff indexes down to fill the gap. Use <see cref="M:Terraria.Player.DelBuff(System.Int32)"/> if you only know the buff index
            </summary>
            <param name="type">The buff type</param>
        </member>
        <member name="M:Terraria.Player.QuickSpawnItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32)">
            <summary>
            Spawns an item into the world at this players position. This is a simpler alternative to <see cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)"/>. This method can be called from multiplayer client code without necessitating manually syncing the item.
            <br/> Use <see cref="M:Terraria.Player.QuickSpawnItem(Terraria.DataStructures.IEntitySource,Terraria.Item,System.Int32)"/> if a specific instance of an Item needs to be spawned into the world to preserve modded data.
            </summary>
            <param name="source"></param>
            <param name="item"></param>
            <param name="stack"></param>
            <returns>The index of the item within <see cref="F:Terraria.Main.item"/></returns>
        </member>
        <member name="M:Terraria.Player.CountItem(System.Int32,System.Int32)">
            <summary>
            Counts the total stack of the specified item type in this players <see cref="F:Terraria.Player.inventory"/>. <br/>
            Does not check Void Bag. <br/>
            Use <see cref="M:Terraria.Player.HasItem(System.Int32)"/> to check if the player has the item at all. <br/>
            </summary>
            <param name="type">The item type to count</param>
            <param name="stopCountingAt">When to stop counting, useful to avoid unnecessary calculations</param>
            <returns>The total amount counted</returns>
        </member>
        <member name="M:Terraria.Player.ConsumeItem(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Use to consume a single item. The item does not have to be <see cref="F:Terraria.Item.consumable"/>. <br/>
            Attempts to reduce the <see cref="F:Terraria.Item.stack"/> of the first <see cref="T:Terraria.Item"/> found in the <see cref="F:Terraria.Player.inventory"/> by 1. <br/>
            Respects <see cref="M:Terraria.ModLoader.ItemLoader.ConsumeItem(Terraria.Item,Terraria.Player)"/>, so the item won't necessarily be consumed. <br/>
            To consume multiple of the item, first check <see cref="M:Terraria.Player.CountItem(System.Int32,System.Int32)"/> to ensure that there are enough of the item, then use a for loop to call this method many times. <br/>
            </summary>
            <param name="type">The item type to consume</param>
            <param name="reverseOrder">If true, the search for the item will start at the end of the player inventory</param>
            <param name="includeVoidBag">If true, the void bag, if open, will also be considered for finding an item to consume</param>
            <returns>True if the item was found and attempted to be consumed</returns>
        </member>
        <member name="M:Terraria.Player.BuffHandle_SpawnPetIfNeededAndSetTime(System.Int32,System.Boolean@,System.Int32,System.Int32)">
            <summary>
            A helper method that handles code common to pet buffs. Can be used during the buff update code.<br/>
            Sets the buff time to the value and spawns the corresponding pet projectile for the player if not yet spawned.<br/>
            </summary>
            <param name="buffIndex"></param>
            <param name="petBool"></param>
            <param name="petProjID"></param>
            <param name="buffTimeToGive"></param>
        </member>
        <member name="M:Terraria.Player.ApplyDamageToNPC(Terraria.NPC,System.Int32,System.Single,System.Int32,System.Boolean,Terraria.ModLoader.DamageClass,System.Boolean)">
            <summary>
            Deals damage to an NPC (and syncs the hit in multiplayer). <br/>
            The damage will be affected by modifiers, armor pen, enemy resistances etc. <br/>
            Will not apply damage class modifiers/knockback. Use <see cref="M:Terraria.Player.GetTotalDamage``1"/> to adjust the damage before calling if necessary. <br/>
            Will apply damage class based armor penetration. <br/>
            Will exit early with no effect if <see cref="M:Terraria.ModLoader.PlayerLoader.CanHitNPC(Terraria.Player,Terraria.NPC)"/> returns false.
            </summary>
            <param name="npc">The NPC to strike</param>
            <param name="damage">The damage to deal to the NPC, before modifications, defense, resistances etc</param>
            <param name="knockback">The amount of knockback to apply</param>
            <param name="direction">The hit direction of the resulting strike (1 or -1)</param>
            <param name="crit">Whether or not the strike is a crit</param>
            <param name="damageType">Defaults to <see cref="P:Terraria.ModLoader.DamageClass.Default"/></param>
            <param name="damageVariation">Whether to apply damage variation. Defaults to false.</param>
        </member>
        <member name="M:Terraria.Player.StrikeNPCDirect(Terraria.NPC,Terraria.NPC.HitInfo)">
            <summary>
            Applies a hit to an NPC via <see cref="M:Terraria.NPC.StrikeNPC(Terraria.NPC.HitInfo,System.Boolean,System.Boolean)"/>. <br/>
            Also calls player based OnHit and OnKill hooks, tracks dps and net syncs the strike
            </summary>
            <param name="npc">The NPC to strike</param>
            <param name="hit">The hit to apply</param>
        </member>
        <member name="M:Terraria.Player.OpenChest(System.Int32,System.Int32,System.Int32)">
            <summary>
            Handles boilerplate for gamepad and UI when opening or closing a container.
            <br/>Sets <see cref="F:Terraria.Player.chestX"/>, and <see cref="F:Terraria.Player.chestY"/>, and <see cref="F:Terraria.Player.chest"/> to the given coordinates.
            </summary>
            <param name="x">The top-left X coordinate of the container.</param>
            <param name="y">The top-left Y coordinate of the container.</param>
            <param name="newChest">The container index in <see cref="F:Terraria.Main.chest"/> if opening, or -1 if closing.</param>
        </member>
        <member name="M:Terraria.Player.Heal(System.Int32)">
            <summary>
            Heals the player for a certain amount.
            </summary>
            <param name="amount">The amount to heal the player by.</param>
        </member>
        <member name="M:Terraria.Player.GetItemGrabRange(Terraria.Item)">
            <summary>
            Fetches the range at which the given item begins to gravitate towards the player.<br/>
            This range, referred to as item grab range, is measured in pixels.
            </summary>
            <param name="item">The item whose grab range is being evaluated.</param>
            <returns>The item grab range of the player, in pixels.</returns>
        </member>
        <member name="M:Terraria.Player.BuyItem(System.Int64,System.Int32)">
            <summary>
            Attempts to "purchase" something that costs the given <paramref name="price"/>.<br/>
            Items will be taken from all of the player inventories and banks combined.<br/>
            If <paramref name="customCurrency"/> is provided, the price will be in terms of the custom currency instead of coins.<br/>
            If the player has enough currency, the currency will be taken from the inventories.<br/>
            </summary>
            <param name="price"></param>
            <param name="customCurrency"></param>
            <returns>true if the player had enough currency to pay the price.</returns>
        </member>
        <member name="M:Terraria.Player.GetAdjustedItemScale(Terraria.Item)">
            <summary>
            Used to determine what the overall scale of an item should be.<br></br>
            <see cref="M:Terraria.ModLoader.CombinedHooks.ModifyItemScale(Terraria.Player,Terraria.Item,System.Single@)"/> is called here.
            </summary>
            <param name="item">The item to fetch the adjusted scale of.</param>
            <returns>
            The final scale of the item, after the Titan Glove effect and all modded calculations.
            </returns>
        </member>
        <member name="M:Terraria.Player.UpdateMaxTurrets">
            <summary>
            Kills <see cref="F:Terraria.Projectile.sentry"/> projectiles exceeding the players current <see cref="F:Terraria.Player.maxTurrets"/>. The oldest projectiles, determined by <see cref="F:Terraria.Projectile.timeLeft"/>, are killed. <br/>
            Call this method immediately after spawning a <see cref="F:Terraria.Projectile.sentry"/> projectile.<br/>
            </summary>
        </member>
        <member name="M:Terraria.Player.HasAmmo(Terraria.Item)">
            <summary>
            Whether or not the player has ammunition available for the given weapon.
            </summary>
            <param name="sItem">The weapon for which to try to find ammunition.</param>
            <returns>True if the player has ammo available; false otherwise.</returns>
        </member>
        <member name="M:Terraria.Player.PickAmmo(Terraria.Item,System.Int32@,System.Single@,System.Int32@,System.Single@,System.Int32@,System.Boolean)">
            <summary>
            A more-convenient-to-call variant of the vanilla PickAmmo method, which handles most vanilla ammunition logic to decide various common stats related to ammunition-consuming weapons.<br></br>
            The stats output by this method take into account any extra stats which the ammunition it finds may provide (read: it accounts for ammo damage and knockback).<br></br>
            </summary>
            <param name="weapon">The weapon for which to handle ammunition logic.</param>
            <param name="projToShoot">The projectile that should be shot based on the given weapon and the located ammunition.</param>
            <param name="speed">The speed at which the projectile that would be made by the given weapon and located ammunition should move.</param>
            <param name="damage">The damage value that the projectile shot should have, based on the given weapon and the located ammunition.</param>
            <param name="knockBack">The knockback value that the projectile shot should have, based on the given weapon and the located ammunition.</param>
            <param name="usedAmmoItemId">The numerical ID of the located ammunition.</param>
            <param name="dontConsume">
            Whether or not ammo consumption logic should be called upon.<br></br>
            This defaults to false, and if it is true for any reason, ammo will not be consumed at the end of the method.<br></br>
            This is useful for gathering the data needed based on PickAmmo's calculations without incidentally consuming any ammunition in the process.
            </param>
            <returns>True if ammo was found/chosen, and false otherwise.</returns>
        </member>
        <member name="M:Terraria.Player.ChooseAmmo(Terraria.Item)">
            <summary>
            Attempts to select an ammo item stack from this player's inventory to shoot with the given weapon.
            </summary>
            <param name="weapon">The weapon for which this call should try to find ammo.</param>
            <returns>Null if no suitable ammo is found; otherwise, returns the first ammo item found.</returns>
        </member>
        <member name="M:Terraria.Player.IsAmmoFreeThisShot(Terraria.Item,Terraria.Item,System.Int32)">
            <summary>
            Determines whether or not the given ammunition should be conserved, based on the given weapon as wielded by this player.
            </summary>
            <param name="weapon">The weapon attempting to consume the ammo.</param>
            <param name="ammo">The ammo attempting to be conserved (i.e. not consumed).</param>
            <param name="projToShoot">The projectile that should be shot by the given weapon/ammo combination.</param>
            <returns>True if the ammo should be conserved on the given shot; false otherwise.</returns>
        </member>
        <member name="M:Terraria.Player.HasItem(System.Int32)">
            <summary>
            Checks if the player has the specified item in their <see cref="F:Terraria.Player.inventory"/>. <br/>
            Does not check Void Bag. <br/>
            Use <see cref="M:Terraria.Player.CountItem(System.Int32,System.Int32)"/> instead to count the total amount if needed. <br/>
            </summary>
            <param name="type">The item type to count</param>
            <returns>True if the player has the item</returns>
        </member>
        <member name="M:Terraria.Player.HasItem(System.Int32,Terraria.Item[])">
            <summary>
            Similar to <see cref="M:Terraria.Player.HasItem(System.Int32)"/>, but checks the provided Item[] <paramref name="collection"/> for items instead. Useful for checking other Item arrays, such as <see cref="F:Terraria.Player.armor"/> or <see cref="F:Terraria.Player.bank"/>.
            </summary>
        </member>
        <member name="M:Terraria.Player.HasItemInInventoryOrOpenVoidBag(System.Int32)">
            <summary>
            Similar to <see cref="M:Terraria.Player.HasItem(System.Int32)"/>, but also checks the Void Bag.
            </summary>
        </member>
        <member name="P:Terraria.Player.ConsumedLifeCrystals">
            <summary>
            How many Life Crystals this player has consumed
            </summary>
        </member>
        <member name="F:Terraria.Player.LifeCrystalMax">
            <summary>
            The maximum amount of Life Crystals this player is allowed to consume total
            </summary>
        </member>
        <member name="P:Terraria.Player.ConsumedLifeFruit">
            <summary>
            How many Life Fruit this player has consumed
            </summary>
        </member>
        <member name="F:Terraria.Player.LifeFruitMax">
            <summary>
            The maximum amount of Life Fruit this player is allowed to consume total
            </summary>
        </member>
        <member name="P:Terraria.Player.ConsumedManaCrystals">
            <summary>
            How many Mana Crystals this player has consumed
            </summary>
        </member>
        <member name="F:Terraria.Player.ManaCrystalMax">
            <summary>
            The maximum amount of Mana Crystals this player is allowed to consume total
            </summary>
        </member>
        <member name="M:Terraria.Player.GetModPlayer``1">
            <summary> Gets the instance of the specified ModPlayer type. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.IndexOutOfRangeException"/>
        </member>
        <member name="M:Terraria.Player.GetModPlayer``1(``0)">
            <summary> Gets the local instance of the type of the specified ModPlayer instance. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.IndexOutOfRangeException"/>
            <exception cref="T:System.NullReferenceException"/>
        </member>
        <member name="M:Terraria.Player.TryGetModPlayer``1(``0@)">
            <summary> Gets the instance of the specified ModPlayer type. </summary>
        </member>
        <member name="M:Terraria.Player.TryGetModPlayer``1(``0,``0@)">
            <summary> Safely attempts to get the local instance of the type of the specified ModPlayer instance. </summary>
            <returns> Whether or not the requested instance has been found. </returns>
        </member>
        <member name="M:Terraria.Player.QuickSpawnClonedItem(Terraria.DataStructures.IEntitySource,Terraria.Item,System.Int32)">
            <summary>
            Will spawn an item like <see cref="M:Terraria.Player.QuickSpawnItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32)"/>, but clones it (handy when you need to retain item infos)
            </summary>
            <param name="source">The spawn context</param>
            <param name="item">The item you want to be cloned</param>
            <param name="stack">The stack to give the item. Note that this will override maxStack if it's higher.</param>
        </member>
        <member name="M:Terraria.Player.QuickSpawnItem(Terraria.DataStructures.IEntitySource,Terraria.Item,System.Int32)">
            <inheritdoc cref="M:Terraria.Player.QuickSpawnClonedItem(Terraria.DataStructures.IEntitySource,Terraria.Item,System.Int32)"/>
        </member>
        <member name="M:Terraria.Player.QuickSpawnClonedItemDirect(Terraria.DataStructures.IEntitySource,Terraria.Item,System.Int32)">
            <summary><inheritdoc cref="M:Terraria.Player.QuickSpawnClonedItem(Terraria.DataStructures.IEntitySource,Terraria.Item,System.Int32)"/></summary>
            <returns>Returns the Item instance</returns>
        </member>
        <member name="M:Terraria.Player.QuickSpawnItemDirect(Terraria.DataStructures.IEntitySource,Terraria.Item,System.Int32)">
            <summary><inheritdoc cref="M:Terraria.Player.QuickSpawnClonedItem(Terraria.DataStructures.IEntitySource,Terraria.Item,System.Int32)"/></summary>
            <returns>Returns the Item instance</returns>
        </member>
        <member name="M:Terraria.Player.QuickSpawnItemDirect(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32)">
            <summary><inheritdoc cref="M:Terraria.Player.QuickSpawnItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32)"/></summary>
            <returns>Returns the Item instance</returns>
        </member>
        <member name="M:Terraria.Player.HasBuff(System.Int32)">
            <summary> Returns whether or not this Player currently has a (de)buff of the provided type. </summary>
        </member>
        <member name="M:Terraria.Player.HasBuff``1">
            <inheritdoc cref="M:Terraria.Player.HasBuff(System.Int32)" />
        </member>
        <member name="M:Terraria.Player.GetDamage``1">
            <summary>
            Gets the damage modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return value with operators.
            </summary>
        </member>
        <member name="M:Terraria.Player.GetDamage(Terraria.ModLoader.DamageClass)">
            <summary>
            Gets the damage modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return value with operators.
            </summary>
        </member>
        <member name="M:Terraria.Player.GetCritChance``1">
            <summary>
            Gets the crit chance modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return value with operators.
            </summary>
        </member>
        <member name="M:Terraria.Player.GetCritChance(Terraria.ModLoader.DamageClass)">
            <summary>
            Gets the crit chance modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return value with operators.
            </summary>
        </member>
        <member name="M:Terraria.Player.GetAttackSpeed``1">
            <summary>
            Gets the attack speed modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return values with operators.
            Setting this such that it results in zero or a negative value will throw an exception.
            NOTE: Due to the nature of attack speed modifiers, modifications to Flat will do nothing for this modifier.
            </summary>
        </member>
        <member name="M:Terraria.Player.GetAttackSpeed(Terraria.ModLoader.DamageClass)">
            <summary>
            Gets the attack speed modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return values with operators.
            </summary>
        </member>
        <member name="M:Terraria.Player.GetArmorPenetration``1">
            <summary>
            Gets the armor penetration modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return value with operators.
            </summary>
        </member>
        <member name="M:Terraria.Player.GetArmorPenetration(Terraria.ModLoader.DamageClass)">
            <summary>
            Gets the armor penetration modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return value with operators.
            </summary>
        </member>
        <member name="M:Terraria.Player.GetKnockback``1">
            <summary>
            Gets the knockback modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return value with operators.
            </summary>
        </member>
        <member name="M:Terraria.Player.GetKnockback(Terraria.ModLoader.DamageClass)">
            <summary>
            Gets the knockback modifier for this damage type on this player.
            This returns a reference, and as such, you can freely modify this method's return value with operators.
            </summary>
        </member>
        <member name="M:Terraria.Player.GetTotalDamage``1">
            <inheritdoc cref="M:Terraria.Player.GetTotalDamage(Terraria.ModLoader.DamageClass)"/>
        </member>
        <member name="M:Terraria.Player.GetTotalDamage(Terraria.ModLoader.DamageClass)">
            <summary>
            Calculates a total damage modifier for the player for the provided <see cref="T:Terraria.ModLoader.DamageClass"/>.<br/>
            Use in conjunction with <see cref="M:Terraria.ModLoader.StatModifier.ApplyTo(System.Single)"/> to calculate a final damage value for a given <see cref="T:Terraria.ModLoader.DamageClass"/> and base damage: <c>int finalDamage = (int)player.GetTotalDamage(item.DamageType).ApplyTo(30);</c>
            </summary>
            <remarks>The modifiers calculated here are important due to the possibility of
            damage classes inheriting modifiers from other damage classes. For instance, an attack
            can be classified as multiple damage types and each could have different modifiers to apply to the damage
            </remarks>
            <param name="damageClass">The <see cref="T:Terraria.ModLoader.DamageClass"/> to use for total damage calculation</param>
            <returns>All modifiers combined</returns>
        </member>
        <member name="P:Terraria.Player.ThrownVelocity">
            <summary>
            Multiplier to shot projectile velocity before throwing. Result will be capped to 16f.
            <br/>Only applies to items counted as the <see cref="P:Terraria.ModLoader.DamageClass.Throwing"/> damage type
            </summary>
        </member>
        <member name="P:Terraria.Player.ThrownCost33">
            <summary>
            If true, player has a 33% chance of not consuming the thrown item.
            <br/>Only applies to consumable items and projectiles counted as the <see cref="P:Terraria.ModLoader.DamageClass.Throwing"/> damage type.
            <br/>Projectiles spawned from a player who holds such item will set <see cref="F:Terraria.Projectile.noDropItem"/> to prevent duplication.
            <br/>Stacks with <see cref="P:Terraria.Player.ThrownCost50"/> multiplicatively
            </summary>
        </member>
        <member name="P:Terraria.Player.ThrownCost50">
            <summary>
            If true, player has a 50% chance of not consuming the thrown item.
            <br/>Only applies to consumable items counted as the <see cref="P:Terraria.ModLoader.DamageClass.Throwing"/> damage type.
            <br/>Projectiles spawned from a player who holds such item will set <see cref="F:Terraria.Projectile.noDropItem"/> to prevent duplication.
            <br/>Stacks with <see cref="P:Terraria.Player.ThrownCost33"/> multiplicatively
            </summary>
        </member>
        <member name="P:Terraria.Player.AnyThrownCostReduction">
            <summary>
            Returns true if either <see cref="P:Terraria.Player.ThrownCost33"/> or <see cref="P:Terraria.Player.ThrownCost50"/> are true
            </summary>
        </member>
        <member name="P:Terraria.Player.CurrentSceneEffect">
            <summary>
            Container for current SceneEffect client properties such as: Backgrounds, music, and water styling
            </summary>
        </member>
        <member name="F:Terraria.Player.modBiomeFlags">
            <summary>
            Stores whether or not the player is in a modbiome using boolean bits.
            </summary>
        </member>
        <member name="M:Terraria.Player.InModBiome(Terraria.ModLoader.ModBiome)">
            <summary>
            Determines if the player is in specified ModBiome. This will throw exceptions on failure.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException"/>
            <exception cref="T:System.NullReferenceException"/>
        </member>
        <member name="M:Terraria.Player.InModBiome``1">
            <inheritdoc cref="M:Terraria.Player.InModBiome(Terraria.ModLoader.ModBiome)"/>
        </member>
        <member name="P:Terraria.Player.ZonePurity">
            <summary>
            The zone property storing if the player is not in any particular biome. Updated in <see cref="M:Terraria.Player.UpdateBiomes"/>
            Does NOT account for height. Please use ZoneForest / ZoneNormalX for height based derivatives.
            </summary>
        </member>
        <member name="M:Terraria.Player.InZonePurity">
            <summary>
            Calculates whether or not the player is in the purity/forest biome.
            </summary>
        </member>
        <member name="P:Terraria.Player.ZoneForest">
            <summary> Shorthand for <code>ZonePurity &amp;&amp; ZoneOverworldHeight</code></summary>
        </member>
        <member name="P:Terraria.Player.ZoneNormalCaverns">
            <summary> Shorthand for <code>ZonePurity &amp;&amp; ZoneRockLayerHeight</code></summary>
        </member>
        <member name="P:Terraria.Player.ZoneNormalUnderground">
            <summary> Shorthand for <code>ZonePurity &amp;&amp; ZoneDirtLayerHeight</code></summary>
        </member>
        <member name="P:Terraria.Player.ZoneNormalSpace">
            <summary> Shorthand for <code>ZonePurity &amp;&amp; ZoneSkyHeight</code></summary>
        </member>
        <member name="M:Terraria.Player.UpdateVisibleAccessories(Terraria.Item,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Invoked in UpdateVisibleAccessories. Runs common code for both modded slots and vanilla slots based on provided Items.
            </summary>
        </member>
        <member name="M:Terraria.Player.DropItem(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,Terraria.Item@)">
            <summary>
            Drops the ref'd item from the player at the position, and than turns the ref'd Item to air.
            </summary>
        </member>
        <member name="M:Terraria.Player.GetManaCost(Terraria.Item)">
            <summary>
            Calculates the mana needed to use the given item.
            </summary>
            <param name="item">The item to check.</param>
            <returns>The amount of mana needed to use <paramref name="item"/>. Cannot be less than <c>0</c>.</returns>
        </member>
        <member name="M:Terraria.Player.CheckMana(Terraria.Item,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Determines if this player has enough mana to use an item.
            <br/> If the player doesn't have enough mana and <paramref name="blockQuickMana"/> is <see langword="false"/>, the player will activate any missing mana effects they have and try again.
            <br/> The <paramref name="pay"/> parameter can be used to consume the mana amount.
            </summary>
            <param name="item">The item to use.</param>
            <param name="amount">The amount of mana needed. If <c>-1</c>, calculate using <see cref="M:Terraria.Player.GetManaCost(Terraria.Item)"/>.</param>
            <param name="pay">If <see langword="true"/>, actually use the mana requested.</param>
            <param name="blockQuickMana">If <see langword="true"/>, prevent on missing mana effects like the Mana Flower from activating if the player doesn't have enough mana.</param>
            <returns><see langword="true"/> if the player has enough mana to use the item, <see langword="false"/> otherwise.</returns>
        </member>
        <member name="P:Terraria.Player.ItemAnimationActive">
            <summary>
            Returns true if an item animation is currently running.
            </summary>
        </member>
        <member name="P:Terraria.Player.ItemAnimationEndingOrEnded">
            <summary>
            Returns true if the item animation is on or after its last frame. Meaning it could (if the player clicks etc) start again next frame. <br/>
            Vanilla uses it to despawn spears, but it's not recommended because it will desync in multiplayer <br/>
            (a remote player could get the packet for a new projectile just as they're finishing a swing). <br/>
            It is recommended to use ai counters for the lifetime of animation bound projectiles instead.
            </summary>
        </member>
        <member name="P:Terraria.Player.ItemUsesThisAnimation">
            <summary>
            The number of times the item has been used/fired this animation (swing)
            </summary>
        </member>
        <member name="M:Terraria.Player.AddImmuneTime(System.Int32,System.Int32)">
            <summary>
            Adds to either Player.immuneTime or Player.hurtCooldowns based on the cooldownCounterId
            </summary>
            <param name="cooldownCounterId">See <see cref="T:Terraria.ID.ImmunityCooldownID"/> for valid ids.</param>
            <param name="immuneTime">Extra immunity time to add</param>
        </member>
        <member name="P:Terraria.Player.HurtModifiers.DamageSource">
            <summary>
            The source of the strike. <br/>
            Use <see cref="M:Terraria.DataStructures.PlayerDeathReason.TryGetCausingEntity(Terraria.Entity@)"/> to get the source of the strike (only safe to do when the target is the local player).
            </summary>
        </member>
        <member name="P:Terraria.Player.HurtModifiers.PvP">
            <summary>
            Whether or not this strike came from another player. <br/>
            Note that PvP support in Terraria is rudimentary and inconsistent, so careful research and testing may be required.
            </summary>
        </member>
        <member name="P:Terraria.Player.HurtModifiers.CooldownCounter">
            <summary>
            The <see cref="T:Terraria.ID.ImmunityCooldownID"/> of the strike
            </summary>
        </member>
        <member name="P:Terraria.Player.HurtModifiers.Dodgeable">
            <summary>
            Whether or not this strike was dodgeable.
            </summary>
        </member>
        <member name="P:Terraria.Player.HurtModifiers.HitDirection">
            <summary>
            The direction to apply knockback. If 0, no knockback will be applied. <br/>
            Could potentially be used for directional resistances. <br/>
            Can be overridden by <see cref="P:Terraria.Player.HurtModifiers.HitDirectionOverride"/>
            </summary>
        </member>
        <member name="F:Terraria.Player.HurtModifiers.SourceDamage">
            <summary>
            Use this to enhance or scale the base damage of the NPC/projectile/hit. <br/>
            <br/>
            Not used by vanilla due to lack of proper pvp support. <br/>
            Use cases are similar to <see cref="F:Terraria.NPC.HitModifiers.SourceDamage"/> <br/>
            </summary>
        </member>
        <member name="F:Terraria.Player.HurtModifiers.IncomingDamageMultiplier">
            <summary>
            Use this to reduce damage from certain sources before applying defense. <br/>
            Used by vanilla for coldResist and banner damage reduction.
            </summary>
        </member>
        <member name="F:Terraria.Player.HurtModifiers.FinalDamage">
            <summary>
            Applied to the final damage result. <br/>
            Used by <see cref="F:Terraria.Player.endurance" /> to reduce overall incoming damage. <br/>
            <br/>
            Multiply to grant damage reduction buffs (eg *0.9f for -10% damage taken). <br/>
            Add to <see cref="F:Terraria.ModLoader.StatModifier.Base"/> to deal damage which ignores armor, but still respects scaling damage reduction like endurance or paladins shield. <br/>
            Adding to <see cref="F:Terraria.ModLoader.StatModifier.Flat"/> will ignore all reductions or increases to deal unconditional damage. Not recommended due to potential compatibility issues with accessories like paladin's shield, use <see cref="F:Terraria.ModLoader.StatModifier.Base"/> instead.
            </summary>
        </member>
        <member name="F:Terraria.Player.HurtModifiers.ArmorPenetration">
            <summary>
            Flat defense reduction. Applies after <see cref="F:Terraria.Player.HurtModifiers.ScalingArmorPenetration"/>. <br/>
            <br/>
            Consider supplying armorPenetration as an argument to <see cref="M:Terraria.Player.Hurt(Terraria.DataStructures.PlayerDeathReason,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Single,System.Single,System.Single)"/> instead if possible.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Player.HurtModifiers.ScalingArmorPenetration">
            <summary>
            Used to ignore a fraction of player defense. Applies before flat <see cref="F:Terraria.Player.HurtModifiers.ArmorPenetration"/>. <br/>
            <br/>
            At 1f, the attack will completely ignore all defense.
            </summary>
        </member>
        <member name="M:Terraria.Player.HurtModifiers.SetMaxDamage(System.Int32)">
            <summary>
            Sets an inclusive upper bound on the final damage of the hit. <br/>
            Can be set by multiple mods, in which case the lowest limit will be used. <br/>
            Cannot be set to less than 1
            </summary>
        </member>
        <member name="F:Terraria.Player.HurtModifiers.Knockback">
            <summary>
            Modifiers to apply to the knockback.
            Add to <see cref="F:Terraria.ModLoader.StatModifier.Base"/> to increase the knockback of the strike.
            Multiply to decrease or increase overall knockback susceptibility.
            </summary>
        </member>
        <member name="P:Terraria.Player.HurtModifiers.HitDirectionOverride">
            <summary>
            Overrides the direction to apply knockback. <br/>
            Will not affect <see cref="P:Terraria.Player.HurtModifiers.HitDirection"/>, only the final <see cref="F:Terraria.Player.HurtInfo.HitDirection"/><br/>
            If set by multiple mods, only the last override will apply. <br/>
            Intended for use by attacks which want to hit the player towards the source of the attack.
            </summary>
        </member>
        <member name="F:Terraria.Player.HurtModifiers.KnockbackImmunityEffectiveness">
            <summary>
            Use this to reduce the effectiveness of <see cref="F:Terraria.Player.noKnockback"/> (cobalt shield accessory). <br/>
            Eg, *0.8f to reduce knockback to 20% when cobalt shield is equipped. <br/>
            Defaults to 1f (knockback immunity is 100% effective by default). <br/>
            Used by vanilla for the ogre's launching attack. <br/>
            </summary>
        </member>
        <member name="M:Terraria.Player.HurtModifiers.DisableDust">
            <summary>
            Prevents dust from spawning
            </summary>
        </member>
        <member name="M:Terraria.Player.HurtModifiers.DisableSound">
            <summary>
            Prevents the hurt sound from playing
            </summary>
        </member>
        <member name="E:Terraria.Player.HurtModifiers.ModifyHurtInfo">
            <summary>
            Use with caution and consider other alternatives first.<br/>
            Can be used to register a callback to freely modify the <see cref="T:Terraria.Player.HurtInfo"/> produced by <see cref="M:Terraria.Player.HurtModifiers.ToHurtInfo(System.Int32,System.Int32,System.Single,System.Single,System.Boolean)"/> before it is returned<br/>
            If multiple mods register different callbacks which modify the hurt info in different ways the results could be a mess!
            </summary>
        </member>
        <member name="F:Terraria.Player.HurtInfo.DamageSource">
            <summary>
            <inheritdoc cref="P:Terraria.Player.HurtModifiers.DamageSource"/>
            </summary>
        </member>
        <member name="F:Terraria.Player.HurtInfo.PvP">
            <summary>
            <inheritdoc cref="P:Terraria.Player.HurtModifiers.PvP"/>
            </summary>
        </member>
        <member name="F:Terraria.Player.HurtInfo.CooldownCounter">
            <summary>
            <inheritdoc cref="P:Terraria.Player.HurtModifiers.CooldownCounter"/>
            </summary>
        </member>
        <member name="F:Terraria.Player.HurtInfo.Dodgeable">
            <summary>
            <inheritdoc cref="P:Terraria.Player.HurtModifiers.Dodgeable"/>
            </summary>
        </member>
        <member name="P:Terraria.Player.HurtInfo.SourceDamage">
            <summary>
            The amount of damage 'dealt' to the player, before incoming damage multipliers, armor, damage reduction.<br/>
            Use this to trigger effects which scale based on how 'hard' the player was hit rather than how much life was lost.<br/>
            Cannot be set to less than 1.<br/>
            <br/>
            Using this instead of <see cref="P:Terraria.Player.HurtInfo.Damage"/> can prevent diminishing returns damage mitigation, when adding beneficial effects like retaliatory damage.
            </summary>
        </member>
        <member name="P:Terraria.Player.HurtInfo.Damage">
            <summary>
            The amount of damage received by the player. How much life the player will lose. <br/>
            Is NOT capped at the player's current life.<br/>
            Cannot be set to less than 1.
            </summary>
        </member>
        <member name="F:Terraria.Player.HurtInfo.HitDirection">
            <summary>
            <inheritdoc cref="P:Terraria.Player.HurtModifiers.HitDirection"/>
            </summary>
        </member>
        <member name="F:Terraria.Player.HurtInfo.Knockback">
            <summary>
            The amount of knockback to apply. Should always be >= 0.
            </summary>
        </member>
        <member name="F:Terraria.Player.HurtInfo.DustDisabled">
            <summary>
            If true, dust will not spawn
            </summary>
        </member>
        <member name="F:Terraria.Player.HurtInfo.SoundDisabled">
            <summary>
            If true, sound will not play
            </summary>
        </member>
        <member name="T:Terraria.PopupText">
            <summary>
            Represents an in-world floating text object. <br />
            <VariousTextOptionsSummary>
        <br />Summary of options to display text to the user:<br />
        • <see cref="M:Terraria.Main.NewText(System.String,System.Byte,System.Byte,System.Byte)" /> to display a message in chat. <br />
        • <see cref="T:Terraria.CombatText" /> to display floating damage numbers in-game. Used for damage and healing numbers. <br />
        • <see cref="T:Terraria.PopupText" /> to display non-overlapping floating in-game text. Used for reforge and item pickup messages. <br />
    </VariousTextOptionsSummary>
            </summary>
        </member>
        <member name="F:Terraria.PopupText.position">
            <summary>
            The position of this <see cref="T:Terraria.PopupText"/> in world coordinates.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.velocity">
            <summary>
            The velocity of this <see cref="T:Terraria.PopupText"/> in world coordinates per tick.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.alpha">
            <summary>
            The opacity of this <see cref="T:Terraria.PopupText"/> in the range [0f, 1f], where <c>0f</c> is transparent and <c>1f</c> is opaque.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.alphaDir">
            <summary>
            The direction this <see cref="T:Terraria.PopupText"/>'s <see cref="F:Terraria.PopupText.alpha"/> changes in.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.name">
            <summary>
            The text displayed by this <see cref="T:Terraria.PopupText"/>.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.stack">
            <summary>
            The optional stack size appended to <see cref="F:Terraria.PopupText.name"/>.
            <br/> Will only be displayed is <c><see cref="F:Terraria.PopupText.stack"/> &gt; 1</c>.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.scale">
            <summary>
            The scale this <see cref="T:Terraria.PopupText"/> draws at.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.rotation">
            <summary>
            The clockwise rotation of this <see cref="T:Terraria.PopupText"/> in radians.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.color">
            <summary>
            The color of this <see cref="T:Terraria.PopupText"/>'s text.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.active">
            <summary>
            If <see langword="true"/>, this <see cref="T:Terraria.PopupText"/> is visible in the world.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.lifeTime">
            <summary>
            The time in ticks this <see cref="T:Terraria.PopupText"/> will remain for until it starts to disappear.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.activeTime">
            <summary>
            The default <see cref="F:Terraria.PopupText.lifeTime"/> of a <see cref="T:Terraria.PopupText"/>.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.numActive">
            <summary>
            The number of <see cref="F:Terraria.PopupText.active"/> <see cref="T:Terraria.PopupText"/>s in <see cref="F:Terraria.Main.popupText"/>.
            <br/> Assigned after <see cref="M:Terraria.PopupText.UpdateItemText"/> runs.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.NoStack">
            <summary>
            If <see langword="true"/>, this <see cref="T:Terraria.PopupText"/> can't be modified when creating a new item <see cref="T:Terraria.PopupText"/>.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.coinText">
            <summary>
            If <see langword="true"/>, this <see cref="T:Terraria.PopupText"/> is specifically for coins.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.coinValue">
            <summary>
            The value of coins this <see cref="T:Terraria.PopupText"/> represents in the range [0, 999999999].
            </summary>
        </member>
        <member name="F:Terraria.PopupText.sonarText">
            <summary>
            The index in <see cref="F:Terraria.Main.popupText"/> of the last known sonar text.
            <br/> Assign and clear using <see cref="M:Terraria.PopupText.AssignAsSonarText(System.Int32)"/> and <see cref="M:Terraria.PopupText.ClearSonarText"/>.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.expert">
            <summary>
            If <see langword="true"/>, this <see cref="T:Terraria.PopupText"/> will draw in the Expert Mode rarity color.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.master">
            <summary>
            If <see langword="true"/>, this <see cref="T:Terraria.PopupText"/> will draw in the Master Mode rarity color.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.sonar">
            <summary>
            Marks this <see cref="T:Terraria.PopupText"/> as this player's Sonar Potion text.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.context">
            <summary>
            The context in which this <see cref="T:Terraria.PopupText"/> was created.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.npcNetID">
            <summary>
            The NPC type (<see cref="F:Terraria.NPC.type"/>) this <see cref="T:Terraria.PopupText"/> is bound to, or <c>0</c> if not bound to an NPC.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.freeAdvanced">
            <summary>
            If <see langword="true"/>, this <see cref="T:Terraria.PopupText"/> is not bound to an item or NPC.
            </summary>
        </member>
        <member name="F:Terraria.PopupText.rarity">
            <summary>
            The <see cref="T:Terraria.ID.ItemRarityID"/> this <see cref="T:Terraria.PopupText"/> uses for its main color.
            </summary>
        </member>
        <member name="P:Terraria.PopupText.notActuallyAnItem">
            <summary>
            If <see langword="true"/>, this <see cref="T:Terraria.PopupText"/> is not for an item.
            </summary>
        </member>
        <member name="M:Terraria.PopupText.ClearSonarText">
            <summary>
            Destroys the <see cref="T:Terraria.PopupText"/> in <see cref="F:Terraria.Main.popupText"/> at the index <see cref="F:Terraria.PopupText.sonarText"/> if that text has <see cref="F:Terraria.PopupText.sonar"/> set to <see langword="true"/>.
            </summary>
        </member>
        <member name="M:Terraria.PopupText.ResetText(Terraria.PopupText)">
            <summary>
            Resets a <see cref="T:Terraria.PopupText"/> to its default values.
            </summary>
            <param name="text">The <see cref="T:Terraria.PopupText"/> to reset.</param>
        </member>
        <member name="M:Terraria.PopupText.NewText(Terraria.AdvancedPopupRequest,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Creates a new <see cref="T:Terraria.PopupText"/> in <see cref="F:Terraria.Main.popupText"/> at <paramref name="position"/> using the settings from <paramref name="request"/>.
            <br/> The new <see cref="T:Terraria.PopupText"/> is not bound to a specific <see cref="T:Terraria.Item"/> or <see cref="T:Terraria.ID.NPCID"/>.
            <br/> All <see cref="T:Terraria.PopupText"/>s created using this method have <c><see cref="F:Terraria.PopupText.context"/> == <see cref="F:Terraria.PopupTextContext.Advanced"/></c> and <see cref="F:Terraria.PopupText.freeAdvanced"/> set to <see langword="true"/>.
            </summary>
            <param name="request">The settings for the new <see cref="T:Terraria.PopupText"/>.</param>
            <param name="position">The position of the new <see cref="T:Terraria.PopupText"/> in world coordinates.</param>
            <returns>
            <c>-1</c> if a new <see cref="T:Terraria.PopupText"/> could not be made, if <c><see cref="F:Terraria.Main.netMode"/> == <see cref="F:Terraria.ID.NetmodeID.Server"/></c>, or if the current player has item text disabled (<see cref="F:Terraria.Main.showItemText"/>).
            <br/> Otherwise, return the index in <see cref="F:Terraria.Main.popupText"/> of the new <see cref="T:Terraria.PopupText"/>
            </returns>
        </member>
        <member name="M:Terraria.PopupText.NewText(Terraria.PopupTextContext,System.Int32,Microsoft.Xna.Framework.Vector2,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Terraria.PopupText"/> in <see cref="F:Terraria.Main.popupText"/> at <paramref name="position"/> bound to a given <paramref name="npcNetID"/>.
            </summary>
            <param name="context">
            The <see cref="T:Terraria.PopupTextContext"/> in which this <see cref="T:Terraria.PopupText"/> was created.
            <br/> If <c><paramref name="context"/> == <see cref="F:Terraria.PopupTextContext.SonarAlert"/></c>, then <see cref="F:Terraria.PopupText.color"/> will be a shade of red.
            </param>
            <param name="npcNetID">The <see cref="T:Terraria.ID.NPCID"/> this <see cref="T:Terraria.PopupText"/> represents.</param>
            <param name="position"></param>
            <param name="stay5TimesLonger">If <see langword="true"/>, then this <see cref="T:Terraria.PopupText"/> will spawn with <c><see cref="F:Terraria.PopupText.lifeTime"/> == 5 * 60</c>.</param>
            <returns>
            <inheritdoc cref="M:Terraria.PopupText.NewText(Terraria.AdvancedPopupRequest,Microsoft.Xna.Framework.Vector2)"/>
            <br/> Also returns <c>-1</c> if <c><paramref name="npcNetID"/> == 0</c>.
            </returns>
        </member>
        <member name="M:Terraria.PopupText.NewText(Terraria.PopupTextContext,Terraria.Item,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Terraria.PopupText"/> in <see cref="F:Terraria.Main.popupText"/> at the center of the picked-up <paramref name="newItem"/>.
            <br/> If a <see cref="T:Terraria.PopupText"/> already exists with the <see cref="M:Terraria.Item.AffixName"/> of <paramref name="newItem"/>, that text will instead be modified unless <paramref name="noStack"/> is <see langword="true"/>.
            </summary>
            <param name="context">The <see cref="T:Terraria.PopupTextContext"/> in which this <see cref="T:Terraria.PopupText"/> was created.</param>
            <param name="newItem">The <see cref="T:Terraria.Item"/> to ceate the new text from.</param>
            <param name="stack">The stack of <paramref name="newItem"/>.</param>
            <param name="noStack">If <see langword="true"/>, always create a new <see cref="T:Terraria.PopupText"/> instead of modifying an existing one.</param>
            <param name="longText">If <see langword="true"/>, then this <see cref="T:Terraria.PopupText"/> will spawn with <c><see cref="F:Terraria.PopupText.lifeTime"/> == 5 * 60</c>.</param>
            <returns>
            <inheritdoc cref="M:Terraria.PopupText.NewText(Terraria.AdvancedPopupRequest,Microsoft.Xna.Framework.Vector2)"/>
            <br/> Also returns <c>-1</c> if <see cref="P:Terraria.Item.Name"/> is <see langword="null"/>.
            </returns>
        </member>
        <member name="M:Terraria.PopupText.AssignAsSonarText(System.Int32)">
            <summary>
            Marks the <see cref="T:Terraria.PopupText"/> in <see cref="F:Terraria.Main.popupText"/> at <paramref name="sonarTextIndex"/> as sonar text, assigning <see cref="F:Terraria.PopupText.sonarText"/> and setting <see cref="F:Terraria.PopupText.sonar"/> to <see langword="true"/>.
            </summary>
            <param name="sonarTextIndex"></param>
        </member>
        <member name="M:Terraria.PopupText.ValueToName(System.Int64)">
            <summary>
            Converts a value in copper coins to a formatted string.
            </summary>
            <param name="coinValue">The value to format in copper coins.</param>
            <returns>The formatted text.</returns>
        </member>
        <member name="M:Terraria.PopupText.Update(System.Int32)">
            <summary>
            Updates this <see cref="T:Terraria.PopupText"/>.
            </summary>
            <param name="whoAmI">The index in <see cref="F:Terraria.Main.popupText"/> of this <see cref="T:Terraria.PopupText"/>.</param>
        </member>
        <member name="M:Terraria.PopupText.UpdateItemText">
            <summary>
            Calls <see cref="M:Terraria.PopupText.Update(System.Int32)"/> on all <see cref="F:Terraria.PopupText.active"/> <see cref="T:Terraria.PopupText"/>s in <see cref="F:Terraria.Main.popupText"/> and assigns  <see cref="F:Terraria.PopupText.numActive"/>.
            </summary>
        </member>
        <member name="M:Terraria.PopupText.ClearAll">
            <summary>
            Sets all <see cref="T:Terraria.PopupText"/>s in <see cref="F:Terraria.Main.popupText"/> to a new instance and assigns <see cref="F:Terraria.PopupText.numActive"/> to <c>0</c>.
            </summary>
        </member>
        <member name="T:Terraria.PopupTextContext">
            <summary>
            A context for a generated <see cref="T:Terraria.PopupText"/>.
            </summary>
        </member>
        <member name="F:Terraria.PopupTextContext.RegularItemPickup">
            <summary>
            Used when a player picks up an <see cref="T:Terraria.Item"/> and it goes into their inventory.
            </summary>
        </member>
        <member name="F:Terraria.PopupTextContext.ItemPickupToVoidContainer">
            <summary>
            Used when a player picks up an <see cref="T:Terraria.Item"/> and it goes into their Void Bag.
            </summary>
        </member>
        <member name="F:Terraria.PopupTextContext.SonarAlert">
            <summary>
            Used for fishing alerts for Sonar Potions.
            </summary>
        </member>
        <member name="F:Terraria.PopupTextContext.ItemReforge">
            <summary>
            Used when a player reforges an <see cref="T:Terraria.Item"/>.
            </summary>
        </member>
        <member name="F:Terraria.PopupTextContext.ItemCraft">
            <summary>
            Used when a player crafts an <see cref="T:Terraria.Item"/>.
            </summary>
        </member>
        <member name="F:Terraria.PopupTextContext.Advanced">
            <summary>
            Used for all other <see cref="T:Terraria.PopupText"/>s.
            </summary>
        </member>
        <member name="M:Terraria.Program.PortFilesFromXtoY(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Super Save Path is the parent directory containing both folders. Usually Program.SavePath or Steam Cloud
            Source is of variety StableFolder, PreviewFolder... etc
            Destination is of variety StableFolder, PreviewFolder... etc
            maxVersionOfSource is used to determine if we even should port the files. Example: 1.4.3-Legacy has maxVersion of 2022.9
            isAtomicLockable could be expressed as CopyToNewlyCreatedDestinationFolderViaTempFolder if that makes more sense to the reader.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.netImportant">
            <summary>
            Indicates that this projectile will be synced to a joining player (by default, any projectiles active before the player joins (besides projectiles with type in <see cref="F:Terraria.Main.projPet"/>) are not synced over). Example: glowsticks
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.noDropItem">
            <summary>
            Set to true if you don't want this projectile to have a chance to recover the ammo item that shot this. For example, if you shoot the <see cref="F:Terraria.ID.ProjectileID.WoodenArrowFriendly"/> projectile, it will sometimes drop the <see cref="F:Terraria.ID.ItemID.WoodenArrow"/>  item. If your weapon shoots multiple arrows for 1 ammo, you might want to consider setting this field to prevent infinite ammo glitches.
            <br/> In <see cref="M:Terraria.ModLoader.ModProjectile.Kill(System.Int32)"/>, check this and <see cref="F:Terraria.Projectile.owner"/> to decide if the item should drop: <code>if (Projectile.owner == Main.myPlayer &amp;&amp; !Projectile.noDropItem)</code> See <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/Projectiles/ExamplePaperAirplaneProjectile.cs#L142">ExamplePaperAirplaneProjectile</see> for an example of this logic.
            <br/> Set directly on the projectile instance returned from <see cref="M:Terraria.Projectile.NewProjectile(Terraria.DataStructures.IEntitySource,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Single)"/>, not in <see cref="M:Terraria.ModLoader.ModProjectile.SetDefaults"/>. This ensures that the weapon spawning the projectile decides if the ammo item will spawn, which is more compatible.
            <br/> Set automatically when shot from a weapon that counts as <see cref="P:Terraria.ModLoader.DamageClass.Throwing"/> and <see cref="P:Terraria.Player.AnyThrownCostReduction"/> is <see langword="true"/>.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.scale">
            <summary>
            Scales the projectile drawing, but not the hitbox, making this not suitable for affecting hitbox. Avoid large values.
            <br/> Defaults to 1f.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.rotation">
            <summary>
            Rotation of the projectile. Radians not Degrees. Use <see cref="T:Microsoft.Xna.Framework.MathHelper"/> if you want to convert degrees to radians. 0 is facing right, <see cref="F:Microsoft.Xna.Framework.MathHelper.PiOver2"/> is facing down, and so on. Note that hitboxes do not rotate.
            <br/> The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Projectile#rotation">Basic Projectile Guide</see> teaches more about projectile rotation.
            <br/> Defaults to 0f.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.type">
            <summary>
            The Projectile ID of this projectile. The Projectile ID is a unique number assigned to each Projectile loaded into the game. This will be equal to either an <see cref="T:Terraria.ID.ProjectileID"/> entry or <see cref="M:Terraria.ModLoader.ModContent.ProjectileType``1"/>, for example <see cref="F:Terraria.ID.ProjectileID.WoodenArrowFriendly"/> or ModContent.ProjectileType&lt;MyModProjectile&gt;(). To check if a Projectile instance is a specific Projectile, check <c>Projectile.type == ProjectileID.VanillaProjectileHere</c> or <c>Projectile.type == ModContent.ProjectileType&lt;ModdedProjectileHere&gt;()</c> in an <see langword="if"/> statement.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.alpha">
            <summary>
            How transparent to draw this projectile. 0 to 255. 255 is completely transparent.
            <br/> <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/Projectiles/ExampleBullet.cs">ExampleBullet</see> sets this to 255, and the projectile aiStyle of <see cref="F:Terraria.ID.ProjAIStyleID.Arrow"/> automatically decreases alpha each tick, letting the projectile fade in quickly after being spawned. Useful for projectiles that look odd when initially spawned on the weapon because of texture overlap.
            <br/> The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Projectile#fade-inout">Basic Projectile Guide</see> teaches more about projectile fade in and out.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.sentry">
            <summary>
            Indicates that this projectile is a sentry
            <br/> Defaults to <see langword="false"/>.
            <br/> All sentries should set <see cref="F:Terraria.Projectile.timeLeft"/> to <see cref="F:Terraria.Projectile.SentryLifeTime"/>.
            <br/> When a sentry is spawned, <see cref="M:Terraria.Player.UpdateMaxTurrets"/> should be called immediately after.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.owner">
            <summary>
            The index of the player who owns this projectile. In Multiplayer, Clients "own" projectiles that they shoot, while the Server "owns" projectiles spawned by NPCs and the World.
            <br/> NPC <b>never</b> own projectiles, do not use owner to index into <see cref="F:Terraria.Main.npc"/>. 
            <br/> It is very important to check <c>if (Projectile.owner == Main.myPlayer)</c> for things like dropping items or spawning projectiles in <see cref="M:Terraria.ModLoader.ModProjectile.AI"/> and some other methods because AI runs simultaneously on all Clients and the Server. This check gates some of the code that should only run on the owners computer. <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/Projectiles/ExamplePaperAirplaneProjectile.cs#L142">ExamplePaperAirplaneProjectile</see> checks owner for spawning the recovered ammo item. If you don't do this, you will run into desync bugs in your mod.
            <br/> Defaults to the owner parameter of Projectile.NewProjectile, which should always be set to <see cref="F:Terraria.Main.myPlayer"/> to correspond to the client that owns the projectile..
            </summary>
        </member>
        <member name="F:Terraria.Projectile.ai">
            <summary>
            An array with 3 slots used for any sort of data storage, which is occasionally synced to the server. Each vanilla <see cref="T:Terraria.ID.ProjAIStyleID"/> uses these slots for different purposes. Set <see cref="F:Terraria.Projectile.netUpdate"/> to true during AI methods to manually sync. The advantage of using these 3 floats is that they are synced automatically. Using fields in your <see cref="P:Terraria.Projectile.ModProjectile"/> class will work just the same, but they might need to be synced via <see cref="M:Terraria.ModLoader.ModProjectile.SendExtraAI(System.IO.BinaryWriter)"/> and <see cref="M:Terraria.ModLoader.ModProjectile.ReceiveExtraAI(System.IO.BinaryReader)"/> if necessary.
            <br/> Clever use of <see href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/ref#reference-return-values">Reference return values</see> as seen in <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/Pets/ExampleLightPet/ExampleLightPetProjectile.cs#L22">ExampleLightPetProjectile.cs</see> can be used to reuse the ai array entries with readable names.
            <br/> Defaults to the values passed into <see cref="M:Terraria.Projectile.NewProjectile(Terraria.DataStructures.IEntitySource,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Single)"/>, usually [0, 0, 0].
            </summary>
        </member>
        <member name="F:Terraria.Projectile.localAI">
            <summary>
            Acts like <see cref="F:Terraria.Projectile.ai"/>, but does not sync to the server. Many vanilla <see cref="T:Terraria.ID.ProjAIStyleID"/> use these slots for various purposes.
            <br/> Defaults to [0, 0, 0]
            </summary>
        </member>
        <member name="F:Terraria.Projectile.gfxOffY">
            <summary>
            An offset from the actual position of the projectile that will be added to the draw position. Used to offset some held projectiles to match the players <see cref="F:Terraria.Player.gfxOffY"/>, thereby keeping the projectile visually in sync with the player. <see cref="F:Terraria.ID.ProjectileID.Sets.HeldProjDoesNotUsePlayerGfxOffY"/> can be used to ignore that usage.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.stepSpeed">
            <summary>
            Has nothing to do with the speed that this projectile travels, that is dictated by AI code adjusting <see cref="F:Terraria.Entity.velocity"/>.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.aiStyle">
            <summary>
            Selects which vanilla code to use for the AI method. Vanilla projectile AI styles are enumerated in the <see cref="T:Terraria.ID.ProjAIStyleID"/> class. Modders can use vanilla aiStyle and optionally <see cref="P:Terraria.ModLoader.ModProjectile.AIType"/> to mimic AI code already in the game. This is usually only useful as a prototyping tool since it is difficult to customize existing aiStyle code. See <see cref="P:Terraria.ModLoader.ModProjectile.AIType"/> and <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/Projectiles/ExampleCloneProjectile.cs">ExampleCloneProjectile</see> to see how to use vanilla ai. If you are using custom AI code, there is no need to set this field.
            <br/> The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Projectile#what-is-ai">Basic Projectile Guide</see> teaches how to use an existing aiStyle.
            <br/> Customizing an existing aiStyle usually requires following the <see href="https://github.com/tModLoader/tModLoader/wiki/Advanced-Vanilla-Code-Adaption#example-projectile-or-npc-ai-code">Vanilla Code Adaption Guide</see>.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.timeLeft">
            <summary>
            Time in ticks before this projectile will naturally despawn.
            <br/> Each update timeLeft is decreased by 1. Once timeLeft hits 0, the Projectile will naturally despawn. The default value, 3600, is measured in ticks, which are usually 60 per seconds, so the default despawn time is about 60 seconds. Adjust this if you want the projectile to fizzle early rather than travel infinitely. Note that <see cref="F:Terraria.Projectile.extraUpdates"/> will cause it to decrease faster than normal time because Update is being called more often.
            <br/> Defaults to 3600.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.damage">
            <summary>
            This will always be set in Projectile.NewProjectile based on the weapons damage and player stat modifiers. Modders should not set this in <see cref="M:Terraria.ModLoader.ModProjectile.SetDefaults"/> as it will be overwritten.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.hostile">
            <summary>
            If True, this projectile will hurt players and friendly NPCs (<see cref="F:Terraria.NPC.friendly"/>)
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.knockBack">
            <summary>
            This will always be set in Projectile.NewProjectile based on the weapons knockback and player stat modifiers. Modders should not set this in <see cref="M:Terraria.ModLoader.ModProjectile.SetDefaults"/> as it will be overwritten.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.friendly">
            <summary>
            If True, this projectile will hurt enemies (!<see cref="F:Terraria.NPC.friendly"/>)
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.penetrate">
            <summary>
            The remaining number of npc can this projectile hit before dying. (Or tile bounces). Assign this field in SetDefaults and use it in ModProjectile logic if needed. A value of -1 means the projectile will penetrate infinitely. See <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/Projectiles/ExamplePiercingProjectile.cs">ExamplePiercingProjectile</see> for more information on how penetrate influences NPC immunity frames.
            <br/> Defaults to 1. Used to automatically assigned a value to <see cref="F:Terraria.Projectile.maxPenetrate"/> at the end of SetDefaults.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.usesLocalNPCImmunity">
            <summary>
            If true, this projectile manages it's own immunity timers for each npc.<br/>
            Use this rather than <see cref="F:Terraria.Projectile.usesIDStaticNPCImmunity"/> if you want multiple projectiles of the same type to have a chance to attack rapidly, but don't want a single projectile to hit rapidly.<br/>
            <see cref="F:Terraria.Projectile.localNPCHitCooldown"/> controls the cooldown timing and must be assigned a suitable value to work properly.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Projectile.usesIDStaticNPCImmunity">
            <summary>
            If true, all projectiles of this type share an immunity cooldown for each npc.<br/>
            Use this rather than <see cref="F:Terraria.Projectile.usesLocalNPCImmunity"/> if you want other projectile types a chance to attack the npc, but don't want projectile of the same projectile type to hit an npc rapidly.<br/>
            <see cref="F:Terraria.Projectile.idStaticNPCHitCooldown"/> controls the cooldown timing and must be assigned a suitable value to work properly.<br/>
            </summary>
        </member>
        <member name="F:Terraria.Projectile.appliesImmunityTimeOnSingleHits">
            <summary>
            If true, this projectile will apply immunity to an npc despite having a <see cref="F:Terraria.Projectile.penetrate"/> value of 1. Used only for firework rockets in Terraria content.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.maxPenetrate">
            <summary>
            How many npc can this projectile hit before dying. (Or tile bounces)
            <br/> Automatically set at the end of SetDefaults to the value of <see cref="F:Terraria.Projectile.penetrate"/>.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.identity">
            <summary>
            The projectile's universal unique identifier, which is the same on all clients and the server. Usually used to find the same projectile on multiple clients and/or the server, e.g. <c>Projectile match = Main.projectile.FirstOrDefault(x => x.identity == identity);</c>
            <br/> Projectile.whoAmI indexes are not consistent between clients.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.light">
            <summary>
            Set to a value above 0f to make this projectile emit a white light (higher number: more intensive light. 1f being stronger than a torch))
            <br/> The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Projectile#lighting">Basic Projectile Guide</see> teaches more about lighting, including non-white lighting, dust light, and glow behavior.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.netUpdate">
            <summary>
            Set manually to true in <see cref="M:Terraria.ModLoader.ModProjectile.AI"/> once to make it sync its current <see cref="F:Terraria.Projectile.ai"/>[] array to the server and other clients (depending on what the <see cref="F:Terraria.Main.netMode"/> is where this is set to true)
            </summary>
        </member>
        <member name="F:Terraria.Projectile.netUpdate2">
            <summary>
            Used internally to check for projectiles that spam <see cref="F:Terraria.Projectile.netUpdate"/>. Don't use it yourself manually
            </summary>
        </member>
        <member name="F:Terraria.Projectile.oldPos">
            <summary>
            Holds the value of <see cref="F:Terraria.Entity.position"/> from previous updates from newest to oldest. Use for drawing trails. Must be used with <see cref="F:Terraria.ID.ProjectileID.Sets.TrailCacheLength"/> and <see cref="F:Terraria.ID.ProjectileID.Sets.TrailingMode"/> to be used properly.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.oldRot">
            <summary>
            Holds the value of <see cref="F:Terraria.Projectile.rotation"/> from previous updates from newest to oldest. Use for drawing trails. Must be used with <see cref="F:Terraria.ID.ProjectileID.Sets.TrailCacheLength"/> and <see cref="F:Terraria.ID.ProjectileID.Sets.TrailingMode"/> to be used properly.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.oldSpriteDirection">
            <summary>
            Holds the value of <see cref="F:Terraria.Projectile.spriteDirection"/> from previous updates from newest to oldest. Use for drawing trails. Must be used with <see cref="F:Terraria.ID.ProjectileID.Sets.TrailCacheLength"/> and <see cref="F:Terraria.ID.ProjectileID.Sets.TrailingMode"/> to be used properly.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.minion">
            <summary>
            Indicates that this projectile is a minion
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.minionSlots">
            <summary>
            Set to 1f on a minion to count it towards the minion limit of the summoning player (Optic Staff summons two minions at once with 0.5f each)
            <br/> Make sure to set <see cref="F:Terraria.ID.ItemID.Sets.StaffMinionSlotsRequired"/> for the minion summoning item to the sum of the minionSlots values of the minions that will be spawned.
            <br/> Defaults to 0f.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.minionPos">
            <summary>
            A number indicating the order of minions. Minion AI code typically uses this value to determine a suitable idle position that results in minions lining up neatly in relation to the player without bunching up.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.tileCollide">
            <summary>
            If true, the projectile will collide with tiles, usually bouncing or killing the tile depending on <see cref="M:Terraria.ModLoader.ModProjectile.OnTileCollide(Microsoft.Xna.Framework.Vector2)"/>. <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/Projectiles/ExampleBullet.cs#L37">ExampleBullet</see> shows how to implement bounce.
            <br/> Defaults to <see langword="true"/>.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.extraUpdates">
            <summary>
            Additional update steps per tick. Useful for really fast projectiles such as <see href="https://github.com/tModLoader/tModLoader/wiki/Advanced-Vanilla-Code-Adaption#example-item-and-projectile-shadowbeam-staff-clone">Shadowbeam Staff</see>. If your projectile is mistakenly occasionally traveling through tiles, you may need to increase this to prevent that.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.ignoreWater">
            <summary>
            The projectile will not be affected by water.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.hide">
            <summary>
            Projectile is not drawn normally. Held projectiles (<see cref="F:Terraria.Player.heldProj"/>) and projectiles specified to be drawn at specific layers (<see cref="M:Terraria.ModLoader.ModProjectile.DrawBehind(System.Int32,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32})"/>)  use this.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.ownerHitCheck">
            <summary>
            If <see langword="true"/>, then this projectile will only deal damage if its owner has line of sight to the hit.
            <br/> Useful for melee projectiles, such as spears and shortswords.
            <br/> Defaults to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.trap">
            <summary>
            If true, this projectile was spawned by a trap tile.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.npcProj">
            <summary>
            If true, this projectile was spawned by a friendly Town NPC.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.frameCounter">
            <summary>
            Used as a timer to decide when to change <see cref="F:Terraria.Projectile.frame"/>.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.frame">
            <summary>
            The frame number in the spritesheet that this projectile will be drawn with. Assign in <see cref="M:Terraria.ModLoader.ModProjectile.AI"/> based on the state of the projectile and <see cref="F:Terraria.Projectile.frameCounter"/>.
            <br/> <see cref="F:Terraria.Main.projFrames"/> must be set in ModProjectile.SetStaticDefaults as well.
            <br/> Example: projectile has 4 frames, then frame can have values between 0 and 3
            <br/> The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Projectile#animationmultiple-frames">Basic Projectile Guide</see> teaches how to animate projectiles.
            <br/> Defaults to 0.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.localNPCHitCooldown">
            <summary>
            When used in conjunction with <see cref="F:Terraria.Projectile.usesLocalNPCImmunity"/>, determines how many ticks must pass before this projectile can deal damage again to the same npc. A value of -1 indicates that it can only hit a specific npc once. The default value of -2 has no effect, so this must be assigned if usesLocalNPCImmunity is true.
            </summary>
        </member>
        <member name="F:Terraria.Projectile.idStaticNPCHitCooldown">
            <summary>
            When used in conjunction with <see cref="F:Terraria.Projectile.usesIDStaticNPCImmunity"/>, determines how many ticks must pass before any projectile of the same type can deal damage again to the same npc. This must be assigned a suitable value if usesIDStaticNPCImmunity is true.
            </summary>
        </member>
        <member name="M:Terraria.Projectile.NewProjectile(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            <inheritdoc cref="M:Terraria.Projectile.NewProjectile(Terraria.DataStructures.IEntitySource,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Single)"/>
            <br/><br/>This particular overload uses a Vector2 instead of X and Y to determine the actual spawn position and a Vector2 to dictate the initial velocity.
            </summary>
        </member>
        <member name="M:Terraria.Projectile.NewProjectile(Terraria.DataStructures.IEntitySource,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Spawns a projectile into the game world with the given type. The spawn position is given in world coordinates by the X and Y parameters. SpeedX and SpeedY dictate the initial velocity. Damage and KnockBack are self-explanatory. Owner is the player who spawned the projectile, almost always Main.myPlayer. ai0, ai1, and ai2 will initialize the Projectile.ai[] array with the supplied values. This can be used to pass in information to the Projectile. The Projectile AI code will have to be written to utilize those values. The return value is the index of the spawned Projectile within the <see cref="F:Terraria.Main.projectile"/> array.
            <br/> Make sure that this method is called only by the client in charge of the source causing this projectile to spawn. Failure to do this will result in the projectile spawning once for each player in the world. For example, if Player code uses this method, make sure to first check <code>if(Main.myPlayer == Player.whoAmI)</code> to ensure that only the local player spawns the projectile.
            <br/> Projectiles spawning other projectiles should check <code>if(Main.myPlayer == Projectile.owner)</code>
            <br/> If the source is an NPC or non-player owned projectile, checking <code>if (Main.netMode != NetmodeID.MultiplayerClient)</code> will ensure that clients don't attempt to spawn the projectile.
            </summary>
            <param name="spawnSource"></param>
            <param name="X"></param>
            <param name="Y"></param>
            <param name="SpeedX"></param>
            <param name="SpeedY"></param>
            <param name="Type">Either a <see cref="T:Terraria.ID.ProjectileID"/> entry or <see cref="M:Terraria.ModLoader.ModContent.ProjectileType``1"/>, for example <see cref="F:Terraria.ID.ProjectileID.FireArrow"/> or ModContent.ProjectileType&lt;MyModProjectile&gt;()</param>
            <param name="Damage"></param>
            <param name="KnockBack"></param>
            <param name="Owner"></param>
            <param name="ai0"></param>
            <param name="ai1"></param>
            <param name="ai2"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Projectile.Resize(System.Int32,System.Int32)">
            <summary>
            Changes the <see cref="F:Terraria.Entity.width"/> and <see cref="F:Terraria.Entity.height"/> of the projectile while preserving the <see cref="P:Terraria.Entity.Center"/>. Useful for explosive projectiles that expand their hitbox while exploding.
            </summary>
        </member>
        <member name="M:Terraria.Projectile.FindTargetWithLineOfSight(System.Single)">
            <summary>
            Finds the closest NPC to this projectile which can be targeted and which it has line of sight to.
            </summary>
            <param name="maxRange">
            The maximum range at which this projectile should search out a target, measured in pixels.<br/>
            Defaults to 800 (50 tiles). Each tile, for reference, measures out to be 16x16 pixels.
            </param>
            <returns>The index, in <see cref="F:Terraria.Main.npc"/>, of the closest targetable NPC.</returns>
        </member>
        <member name="M:Terraria.Projectile.ShouldWallExplode(Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Determines if walls should be exploded by checking if there is an empty wall within the specified radius and bounds. Use in conjunction with <see cref="M:Terraria.Projectile.ExplodeTiles(Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:Terraria.Projectile.ExplodeTiles(Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Explodes tiles within a radius of the given position and within the bounds passed in. The <paramref name="wallSplode"/> parameter should be the result of <see cref="M:Terraria.Projectile.ShouldWallExplode(Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"/> and dictates if walls will also be destroyed. This method honors the tile and wall explosion conditions.
            </summary>
        </member>
        <member name="P:Terraria.Projectile.ModProjectile">
            <summary>
            The ModProjectile instance that controls the behavior of this projectile. This property is null if this is not a modded projectile.
            </summary>
        </member>
        <member name="M:Terraria.Projectile.GetGlobalProjectile``1">
            <summary> Gets the instance of the specified GlobalProjectile type. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.IndexOutOfRangeException"/>
        </member>
        <member name="M:Terraria.Projectile.GetGlobalProjectile``1(``0)">
            <summary> Gets the local instance of the type of the specified GlobalProjectile instance. This will throw exceptions on failure. </summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.NullReferenceException"/>
        </member>
        <member name="M:Terraria.Projectile.TryGetGlobalProjectile``1(``0@)">
            <summary> Gets the instance of the specified GlobalProjectile type. </summary>
        </member>
        <member name="M:Terraria.Projectile.TryGetGlobalProjectile``1(``0,``0@)">
            <summary> Safely attempts to get the local instance of the type of the specified GlobalProjectile instance. </summary>
            <returns> Whether or not the requested instance has been found. </returns>
        </member>
        <member name="M:Terraria.Projectile.NewProjectileDirect(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            <inheritdoc cref="M:Terraria.Projectile.NewProjectile(Terraria.DataStructures.IEntitySource,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Single)"/>
            <br/><br/>This particular overload uses a Vector2 instead of X and Y to determine the actual spawn position and a Vector2 to dictate the initial velocity. The return value is the actual Projectile instance rather than the index of the spawned Projectile within the <see cref="F:Terraria.Main.projectile"/> array.
            <br/> A short-hand for <code> Main.projectile[Projectile.NewProjectile(...)] </code>
            </summary>
        </member>
        <member name="P:Terraria.Projectile.DamageType">
            <summary>
            The damage type assigned to this projectile, represented as a DamageClass.
            Leave blank or use DamageClass.Default to prevent damage type scaling of any kind for this projectile.
            Use DamageClass.Generic/Melee/Ranged/Magic/Summon/Throwing for vanilla damage types.
            Refer to ExampleMod for more information on how to create and use your own damage types.
            </summary>
        </member>
        <member name="P:Terraria.Projectile.ArmorPenetration">
            <summary>
            The number of defense points that this projectile can ignore on its own. Cannot be set to negative values. Defaults to 0.
            On spawn, if this projectile was fired from a weapon, this value has the total armor penetration of the weapon that made the projectile added to itself.
            </summary>
        </member>
        <member name="P:Terraria.Projectile.CritChance">
            <summary>
            The critical strike chance modifier of this projectile. Cannot be set to negative values. Defaults to 0.
            On spawn, if this projectile was fired from a weapon, this value has the total critical strike chance of the weapon that made the projectile added to itself.
            </summary>
        </member>
        <member name="P:Terraria.Projectile.OriginalCritChance">
            <summary>
            The crit chance of this projectile, without any player bonuses, similar to <see cref="F:Terraria.Projectile.originalDamage"/><br/>
            Used by <see cref="P:Terraria.Projectile.ContinuouslyUpdateDamageStats"/> to recalculate <see cref="P:Terraria.Projectile.CritChance"/> in combination with <see cref="M:Terraria.Player.GetTotalCritChance(Terraria.ModLoader.DamageClass)"/>
            </summary>
        </member>
        <member name="P:Terraria.Projectile.OriginalArmorPenetration">
            <summary>
            The crit chance of this projectile, without any player bonuses, similar to <see cref="F:Terraria.Projectile.originalDamage"/><br/>
            Used by <see cref="P:Terraria.Projectile.ContinuouslyUpdateDamageStats"/> to recalculate <see cref="P:Terraria.Projectile.ArmorPenetration"/> in combination with <see cref="M:Terraria.Player.GetTotalArmorPenetration(Terraria.ModLoader.DamageClass)"/>
            </summary>
        </member>
        <member name="P:Terraria.Projectile.ContinuouslyUpdateDamageStats">
            <summary>
            If set <see cref="F:Terraria.Projectile.damage"/> will be recalculated based on <see cref="F:Terraria.Projectile.originalDamage"/>, <see cref="P:Terraria.Projectile.DamageType"/> and the <see cref="F:Terraria.Projectile.owner"/> player, just like minions and sentries. <br/>
            Similarly for <see cref="P:Terraria.Projectile.CritChance"/> and <see cref="P:Terraria.Projectile.ArmorPenetration"/>.
            
            No need to set this if <see cref="F:Terraria.Projectile.minion"/> or <see cref="F:Terraria.Projectile.sentry"/> is set.
            </summary>
        </member>
        <member name="M:Terraria.Projectile.ApplyStatsFromSource(Terraria.DataStructures.IEntitySource)">
            <summary>
            Transfers stat modifiers from the spawn source to the projectile. <br/>
            Adds <see cref="P:Terraria.Projectile.CritChance"/> and <see cref="P:Terraria.Projectile.ArmorPenetration"/> bonuses from players (<see cref="T:Terraria.DataStructures.EntitySource_Parent"/>), weapons (<see cref="T:Terraria.DataStructures.EntitySource_ItemUse"/>)<br/>
            If the source is a <see cref="T:Terraria.DataStructures.EntitySource_Parent"/> projectile, <c>CritChance</c> and <c>ArmorPenetration</c> from the parent will be added, in order to transfer the original item/player bonus values.<br/><br/>
            <br/>
            To support minions, sentries and <see cref="P:Terraria.Projectile.ContinuouslyUpdateDamageStats"/>, <see cref="P:Terraria.Projectile.OriginalCritChance"/> and <see cref="P:Terraria.Projectile.OriginalArmorPenetration"/> are also copied from item sources and parent projectiles.
            </summary>
            <param name="spawnSource"></param>
        </member>
        <member name="M:Terraria.Projectile.DropGeodeLoot(Terraria.Entity)">
            <summary>
            Will drop loot the same way as when <see cref="F:Terraria.ID.ProjectileID.Geode"/> is cracked open.
            </summary>
            <param name="entity">The entity the loot originates from</param>
        </member>
        <member name="M:Terraria.Projectile.CountsAsClass``1">
            <inheritdoc cref="M:Terraria.Projectile.CountsAsClass(Terraria.ModLoader.DamageClass)"/>
        </member>
        <member name="M:Terraria.Projectile.CountsAsClass(Terraria.ModLoader.DamageClass)">
            <summary>
            This is used to check if the projectile is considered to be a member of a specified <see cref="T:Terraria.ModLoader.DamageClass"/>.
            </summary>
            <param name="damageClass">The DamageClass to compare with the one assigned to this projectile.</param>
            <returns><see langword="true"/> if this projectiles's <see cref="T:Terraria.ModLoader.DamageClass"/> matches <paramref name="damageClass"/>, <see langword="false"/> otherwise</returns>
            <seealso cref="M:Terraria.Projectile.CountsAsClass``1"/>
        </member>
        <member name="P:Terraria.Projectile.IsMinionOrSentryRelated">
            <summary>
            Checks if the projectile is a minion, sentry, minion shot, or sentry shot. <br/>
            </summary>
        </member>
        <member name="T:Terraria.Recipe">
            <summary>
            A Recipe is a collection of ingredients, tiles, and a resulting Item. This is how players can craft items in the game.<br/>
            The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Recipes">Basic Recipes Guide</see> teaches how to add new recipes to the game and how to manipulate existing recipes.<br/>
            Use <see cref="M:Terraria.Recipe.Create(System.Int32,System.Int32)"/> to create a Recipe instance resulting in the specified item. Use <see cref="M:Terraria.Recipe.AddIngredient(System.Int32,System.Int32)"/> to add ingredients and <see cref="M:Terraria.Recipe.AddTile(System.Int32)"/> to add crafting stations. Finally, use <see cref="M:Terraria.Recipe.Register"/> to complete the recipe and register it to the game.<br/>
            Recipes can only be added in <see cref="M:Terraria.ModLoader.ModSystem.AddRecipes"/>, <see cref="M:Terraria.ModLoader.ModItem.AddRecipes"/>, and <see cref="M:Terraria.ModLoader.GlobalItem.AddRecipes"/>.<br/>
            Recipes should be edited only in <see cref="M:Terraria.ModLoader.ModSystem.PostAddRecipes"/>.
            </summary>
        </member>
        <member name="F:Terraria.Recipe.ConsumptionRules.Alchemy">
            <summary> Gives 1/3 chance for every ingredient to not be consumed, if used at an alchemy table. (!) This behavior is already automatically given to all items that can be made at a placed bottle tile. </summary>
        </member>
        <member name="P:Terraria.Recipe.RecipeIndex">
            <summary>
            The index of the recipe in the Main.recipe array.
            </summary>
        </member>
        <member name="P:Terraria.Recipe.Disabled">
            <summary>
            Any recipe with this flag won't be shown in game.
            </summary>
        </member>
        <member name="M:Terraria.Recipe.AddIngredient(System.Int32,System.Int32)">
            <summary>
            Adds an ingredient to this recipe with the given item type and stack size. Ex: <c>recipe.AddIngredient(ItemID.IronAxe)</c>
            </summary>
            <param name="itemID">The item identifier.</param>
            <param name="stack">The stack.</param>
        </member>
        <member name="M:Terraria.Recipe.AddIngredient(Terraria.ModLoader.Mod,System.String,System.Int32)">
            <summary>
            Adds an ingredient to this recipe with the given item name from the given mod, and with the given stack stack. If the mod parameter is null, then it will automatically use an item from the mod creating this recipe.
            </summary>
            <param name="mod">The mod.</param>
            <param name="itemName">Name of the item.</param>
            <param name="stack">The stack.</param>
            <exception cref="T:Terraria.ModLoader.Exceptions.RecipeException">The item " + itemName + " does not exist in mod " + mod.Name + ". If you are trying to use a vanilla item, try removing the first argument.</exception>
        </member>
        <member name="M:Terraria.Recipe.AddIngredient(Terraria.ModLoader.ModItem,System.Int32)">
            <summary>
            Adds an ingredient to this recipe of the given type of item and stack size.
            </summary>
            <param name="item">The item.</param>
            <param name="stack">The stack.</param>
        </member>
        <member name="M:Terraria.Recipe.AddIngredient``1(System.Int32)">
            <summary>
            Adds an ingredient to this recipe of the given type of item and stack size.
            </summary>
            <param name="stack">The stack.</param>
        </member>
        <member name="M:Terraria.Recipe.AddRecipeGroup(System.String,System.Int32)">
            <summary>
            Adds a recipe group ingredient to this recipe with the given RecipeGroup name and stack size.
            <br/> Recipe groups allow a recipe to use alternate ingredients without making multiple recipes. For example the "IronBar" group accepts either <see cref="F:Terraria.ID.ItemID.IronBar"/> or <see cref="F:Terraria.ID.ItemID.LeadBar"/>. The <see href="https://github.com/tModLoader/tModLoader/wiki/Intermediate-Recipes#recipe-groups">Recipe Groups wiki guide</see> has more information.
            <br/> To use a vanilla recipe group, use <see cref="M:Terraria.Recipe.AddRecipeGroup(System.Int32,System.Int32)"/> using a <see cref="T:Terraria.ID.RecipeGroupID"/> entry instead.
            </summary>
            <param name="name">The name.</param>
            <param name="stack">The stack.</param>
            <exception cref="T:Terraria.ModLoader.Exceptions.RecipeException">A recipe group with the name " + name + " does not exist.</exception>
        </member>
        <member name="M:Terraria.Recipe.AddRecipeGroup(System.Int32,System.Int32)">
            <summary>
            Adds a recipe group ingredient to this recipe with the given RecipeGroupID and stack size.
            <br/> Recipe groups allow a recipe to use alternate ingredients without making multiple recipes. For example the <see cref="F:Terraria.ID.RecipeGroupID.IronBar"/> group accepts either <see cref="F:Terraria.ID.ItemID.IronBar"/> or <see cref="F:Terraria.ID.ItemID.LeadBar"/>. The <see href="https://github.com/tModLoader/tModLoader/wiki/Intermediate-Recipes#recipe-groups">Recipe Groups wiki guide</see> has more information.
            <br/> Vanilla recipe group IDs can be found in <see cref="T:Terraria.ID.RecipeGroupID"/> and modded recipe group IDs will be returned from <see cref="M:Terraria.RecipeGroup.RegisterGroup(System.String,Terraria.RecipeGroup)"/>. <see cref="M:Terraria.Recipe.AddRecipeGroup(System.String,System.Int32)"/> can be used instead if the ID number is not known but the name is known.
            </summary>
            <param name="recipeGroupId">The RecipeGroupID.</param>
            <param name="stack">The stack.</param>
            <exception cref="T:Terraria.ModLoader.Exceptions.RecipeException">A recipe group with the ID " + recipeGroupID + " does not exist.</exception>
        </member>
        <member name="M:Terraria.Recipe.AddRecipeGroup(Terraria.RecipeGroup,System.Int32)">
            <summary>
            Adds a recipe group ingredient to this recipe with the given RecipeGroup.
            </summary>
            <param name="recipeGroup">The RecipeGroup.</param>
            <param name="stack"></param>
        </member>
        <member name="M:Terraria.Recipe.AddTile(System.Int32)">
            <summary>
            Adds a required crafting station with the given tile type to this recipe. Ex: <c>recipe.AddTile(TileID.WorkBenches)</c>
            </summary>
            <param name="tileID">The tile identifier.</param>
            <exception cref="T:Terraria.ModLoader.Exceptions.RecipeException">No tile has ID " + tileID</exception>
        </member>
        <member name="M:Terraria.Recipe.AddTile(Terraria.ModLoader.Mod,System.String)">
            <summary>
            Adds a required crafting station to this recipe with the given tile name from the given mod. If the mod parameter is null, then it will automatically use a tile from the mod creating this recipe.
            </summary>
            <param name="mod">The mod.</param>
            <param name="tileName">Name of the tile.</param>
            <exception cref="T:Terraria.ModLoader.Exceptions.RecipeException">The tile " + tileName + " does not exist in mod " + mod.Name + ". If you are trying to use a vanilla tile, try using Recipe.AddTile(tileID).</exception>
        </member>
        <member name="M:Terraria.Recipe.AddTile(Terraria.ModLoader.ModTile)">
            <summary>
            Adds a required crafting station to this recipe of the given type of tile.
            </summary>
            <param name="tile">The tile.</param>
        </member>
        <member name="M:Terraria.Recipe.AddTile``1">
            <summary>
            Adds a required crafting station to this recipe of the given type of tile.
            </summary>
        </member>
        <member name="M:Terraria.Recipe.AddCondition(Terraria.Localization.LocalizedText,System.Func{System.Boolean})">
            <summary>
            Sets a condition delegate that will determine whether or not the recipe will be to be available for the player to use. The condition can be unrelated to items or tiles (for example, biome or time).
            </summary>
            <param name="description">A description of this condition.</param>
            <param name="condition">A function returning whether the condition is met.</param>
        </member>
        <member name="M:Terraria.Recipe.AddCondition(Terraria.Condition[])">
            <summary>
            Adds an array of conditions that will determine whether or not the recipe will be to be available for the player to use. The conditions can be unrelated to items or tiles (for example, biome or time).
            </summary>
            <param name="conditions">An array of conditions.</param>
        </member>
        <member name="M:Terraria.Recipe.AddCondition(System.Collections.Generic.IEnumerable{Terraria.Condition})">
            <summary>
            Adds a collection of conditions that will determine whether or not the recipe will be to be available for the player to use. The conditions can be unrelated to items or tiles (for example, biome or time).
            </summary>
            <param name="conditions">A collection of conditions.</param>
        </member>
        <member name="M:Terraria.Recipe.AddDecraftCondition(Terraria.Localization.LocalizedText,System.Func{System.Boolean})">
            <summary>
            Sets a condition delegate that will determine whether or not the recipe can be shimmered/decrafted. The condition can be unrelated to items or tiles (for example, biome or time).
            </summary>
            <param name="description">A description of this condition.</param>
            <param name="condition">The predicate delegate condition.</param>
        </member>
        <member name="M:Terraria.Recipe.AddDecraftCondition(Terraria.Condition[])">
            <summary>
            Adds an array of conditions that will determine whether or not the recipe can be shimmered/decrafted. The conditions can be unrelated to items or tiles (for example, biome or time).
            </summary>
            <param name="conditions">An array of conditions.</param>
        </member>
        <member name="M:Terraria.Recipe.AddDecraftCondition(System.Collections.Generic.IEnumerable{Terraria.Condition})">
            <summary>
            Adds a collection of conditions that will determine whether or not the recipe can be shimmered/decrafted. The conditions can be unrelated to items or tiles (for example, biome or time).
            </summary>
            <param name="conditions">A collection of conditions.</param>
        </member>
        <member name="M:Terraria.Recipe.ApplyConditionsAsDecraftConditions">
            <summary>
            Adds every condition from Recipe.Conditions to Recipe.DecraftConditions, checking for duplicates.
            </summary>
        </member>
        <member name="M:Terraria.Recipe.DisableDecraft">
            <summary>
            Sets a check that is used during load to prevent this being shimmered/decrafted.
            </summary>
            <exception cref="T:Terraria.ModLoader.Exceptions.RecipeException">A Recipe can only be disabled inside Recipe related methods.</exception>
        </member>
        <member name="M:Terraria.Recipe.AddOnCraftCallback(Terraria.Recipe.OnCraftCallback)">
            <summary>
            Sets a callback that will allow you to make anything happen when the recipe is used to create an item.
            </summary>
        </member>
        <member name="M:Terraria.Recipe.AddConsumeItemCallback(Terraria.Recipe.ConsumeItemCallback)">
            <summary>
            Sets a callback that allows you to determine how many of a certain ingredient is consumed when this recipe is used. Return the number of ingredients that will actually be consumed. By default returns numRequired.
            </summary>
        </member>
        <member name="M:Terraria.Recipe.SetOrdering(Terraria.Recipe,System.Boolean)">
            <summary>
            Sets the Ordering of this recipe. This recipe can't already have one.
            </summary>
        </member>
        <member name="M:Terraria.Recipe.SortBeforeFirstRecipesOf(System.Int32)">
            <summary>
            Sorts the recipe before the first one creating the item of the ID given as parameter.
            </summary>
        </member>
        <member name="M:Terraria.Recipe.SortBefore(Terraria.Recipe)">
            <summary>
            Sorts the recipe before the one given as parameter. Both recipes must already be registered.
            </summary>
        </member>
        <member name="M:Terraria.Recipe.SortAfterFirstRecipesOf(System.Int32)">
            <summary>
            Sorts the recipe after the first one creating the item of the ID given as parameter.
            </summary>
        </member>
        <member name="M:Terraria.Recipe.SortAfter(Terraria.Recipe)">
            <summary>
            Sorts the recipe after the one given as parameter. Both recipes must already be registered.
            </summary>
        </member>
        <member name="M:Terraria.Recipe.Clone">
            <summary>
            Returns a clone of this recipe except the source mod of the Recipe will the currently loading mod.
            <br/> The clone will have to be registered after being tweaked.
            </summary>
        </member>
        <member name="M:Terraria.Recipe.Register">
            <summary>
            Adds this recipe to the game. Call this after you have finished setting the result, ingredients, etc.
            </summary>
            <exception cref="T:Terraria.ModLoader.Exceptions.RecipeException">A recipe without any result has been added.</exception>
        </member>
        <member name="M:Terraria.Recipe.Create(System.Int32,System.Int32)">
            <summary>
            Creates a recipe resulting in the given item and amount but does not yet register it into the game. Call this at the very beginning when creating a new craft.
            </summary>
            <param name="result">What item will be given when the craft has been completed</param>
            <param name="amount">The stack -> how many result items given when the recipe is crafted. (eg. 1 wood -> 4 wood platform)</param>
            <exception cref="T:Terraria.ModLoader.Exceptions.RecipeException">A Recipe can only be created inside recipe related methods</exception>
        </member>
        <member name="M:Terraria.Social.Steam.SteamedWraps.Download(Steamworks.PublishedFileId_t,Terraria.ModLoader.UI.DownloadManager.IDownloadProgress,System.Boolean)">
            <summary>
            Updates and/or Downloads the Item specified by publishId
            </summary>
        </member>
        <member name="M:Terraria.Social.Steam.WorkshopBrowserModule.QueryBrowser(Terraria.Social.Base.QueryParameters,System.Threading.CancellationToken)">
            <summary>
            Assumes Intialize has been run prior to use.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Terraria.Social.Steam.WorkshopHelper.GetWorkshopFolder(Steamworks.AppId_t)" -->
        <member name="M:Terraria.Social.Steam.WorkshopHelper.QueryHelper.AQueryInstance.ReleaseWorkshopQuery">
            <summary>
            Ought be called to release the existing query when we are done with it. Frees memory associated with the handle.
            </summary>
        </member>
        <member name="M:Terraria.Social.Steam.WorkshopHelper.QueryHelper.AQueryInstance.QueryItemsSynchronously(System.Collections.Generic.List{System.String}@)">
            <summary>
            For direct information gathering of particular mod/workshop items. Synchronous.
            Note that the List size is 1 to 1 with the provided array.
            If the Mod is not found, the space is filled with a null.
            </summary>
        </member>
        <member name="M:Terraria.Social.Steam.WorkshopHelper.QueryHelper.AQueryInstance.TrySearchByInternalName(System.Collections.Generic.List{Terraria.ModLoader.UI.ModBrowser.ModDownloadItem}@)">
            <summary>
            Only Use if we don't have a PublishID source.
            Outputs a List of ModDownloadItems of equal length to QueryParameters.SearchModSlugs
            Uses null entries to fill gaps to ensure length consistency
            </summary>
        </member>
        <member name="T:Terraria.Tile">
            <summary>
            A data structure used for accessing information about tiles, walls, wires, and liquids at a single position in the world.<para/>
            Vanilla tile code and a mods tile code will be quite different, since tModLoader reworked how tiles function to improve performance. This means that copying vanilla code will leave you with many errors. Running the code through tModPorter will fix most of the issues, however.<para/>
            For your sanity, all of the changes are well documented to make it easier to port vanilla code.
            </summary>
        </member>
        <member name="M:Terraria.Tile.ClearEverything">
            <summary>
            Resets all of the data at this position.<br/>
            To only remove the tile data, use <see cref="M:Terraria.Tile.ClearTile"/>.
            </summary>
        </member>
        <member name="M:Terraria.Tile.ClearTile">
            <summary>
            Resets the tile data at this position.<br/>
            Sets <see cref="P:Terraria.Tile.HasTile"/> and <see cref="P:Terraria.Tile.IsActuated"/> to <see langword="false"/> and sets the <see cref="P:Terraria.Tile.BlockType"/> to <see cref="F:Terraria.ID.BlockType.Solid"/>.
            </summary>
            <remarks>
            Does not reset data related to walls, wires, or anything else. For that, use <see cref="M:Terraria.Tile.ClearEverything"/>.
            </remarks>
        </member>
        <member name="M:Terraria.Tile.CopyFrom(Terraria.Tile)">
            <summary>
            Copies all data from the given position to this position.
            </summary>
            <param name="from">The position to copy the data from.</param>
        </member>
        <member name="M:Terraria.Tile.isTheSameAs(Terraria.Tile)">
            <summary>
            Legacy code, consider the data you want to compare directly.
            </summary>
            <param name="compTile"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.blockType">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.BlockType"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.ResetToType(System.UInt16)">
            <summary>
            Resets all of the data at this position except for the <see cref="P:Terraria.Tile.WallType"/>, and sets <see cref="P:Terraria.Tile.TileType"/> to <paramref name="type"/>. 
            </summary>
            <param name="type">The <see cref="T:Terraria.ID.TileID"/> to set this tile to.</param>
        </member>
        <member name="M:Terraria.Tile.topSlope">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.TopSlope"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.bottomSlope">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.BottomSlope"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.leftSlope">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.LeftSlope"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.rightSlope">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.RightSlope"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.Clear(Terraria.DataStructures.TileDataType)">
            <summary>
            Clears the specified data at this position based on the given <see cref="T:Terraria.DataStructures.TileDataType"/>.
            </summary>
            <param name="types">The <see cref="T:Terraria.DataStructures.TileDataType"/> to clear.</param>
        </member>
        <member name="M:Terraria.Tile.SmoothSlope(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Slopes a tile based on the tiles adjacent to it.
            </summary>
            <param name="x">The X coordinate of the tile.</param>
            <param name="y">The Y coordinate of the tile.</param>
            <param name="applyToNeighbors">Whether the adjacent tiles should be automatically smoothed.</param>
            <param name="sync">Whether the changes should automatically be synced to multiplayer.</param>
        </member>
        <member name="M:Terraria.Tile.CopyPaintAndCoating(Terraria.Tile)">
            <summary>
            Copies the paint and coating data from the specified tile to this tile.<br/>
            Does not copy wall paint and coating data.
            </summary>
            <param name="other">The <see cref="T:Terraria.Tile"/> to copy the data from.</param>
        </member>
        <member name="M:Terraria.Tile.BlockColorAndCoating">
            <summary>
            Gets the paint and coating information from the tile at this position as a <see cref="T:Terraria.TileColorCache"/>.
            </summary>
            <returns>A <see cref="T:Terraria.TileColorCache"/> representing the paint and coatings on the tile at this position.</returns>
        </member>
        <member name="M:Terraria.Tile.WallColorAndCoating">
            <summary>
            Gets the paint and coating information from the wall at this position as a <see cref="T:Terraria.TileColorCache"/>.
            </summary>
            <returns>A <see cref="T:Terraria.TileColorCache"/> representing the paint and coatings on the wall at this position.</returns>
        </member>
        <member name="M:Terraria.Tile.UseBlockColors(Terraria.TileColorCache)">
            <summary>
            Sets the paint and coating of the tile at this position based on the given <see cref="T:Terraria.TileColorCache"/>.
            </summary>
            <param name="cache">The <see cref="T:Terraria.TileColorCache"/> to apply.</param>
        </member>
        <member name="M:Terraria.Tile.UseWallColors(Terraria.TileColorCache)">
            <summary>
            Sets the paint and coating of the wall at this position based on the given <see cref="T:Terraria.TileColorCache"/>.
            </summary>
            <param name="cache">The <see cref="T:Terraria.TileColorCache"/> to apply.</param>
        </member>
        <member name="M:Terraria.Tile.ClearBlockPaintAndCoating">
            <summary>
            Clears any paint or coating on the tile at this position.
            </summary>
        </member>
        <member name="M:Terraria.Tile.ClearWallPaintAndCoating">
            <summary>
            Clears any paint or coating on the wall at this position.
            </summary>
        </member>
        <member name="P:Terraria.Tile.TileType">
            <summary>
            The <see cref="T:Terraria.ID.TileID"/> of the tile at this position.<br/>
            This value is only valid if <see cref="P:Terraria.Tile.HasTile"/> is true.<br/>
            Legacy/vanilla equivalent is <see cref="P:Terraria.Tile.type"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.WallType">
            <summary>
            The <see cref="T:Terraria.ID.WallID"/> of the wall at this position.<br/>
            A value of 0 indicates no wall.<br/>
            Legacy/vanilla equivalent is <see cref="P:Terraria.Tile.wall"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.HasTile">
            <summary>
            Whether there is a tile at this position. Check this whenever you are accessing data from a tile to avoid getting data from an empty tile.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.active"/> or <see cref="M:Terraria.Tile.active(System.Boolean)"/>.
            </summary>
            <remarks>
            Actuated tiles are not solid, so use <see cref="P:Terraria.Tile.HasUnactuatedTile"/> instead of <see cref="P:Terraria.Tile.HasTile"/> for collision checks.<br/>
            This only corresponds to whether a tile exists, however, a wall can exist without a tile. To check if a wall exists, use <c>tile.WallType != WallID.None</c>.
            </remarks>
        </member>
        <member name="P:Terraria.Tile.IsActuated">
            <summary>
            Whether the tile at this position is actuated by an actuator.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.inActive"/> or <see cref="M:Terraria.Tile.inActive(System.Boolean)"/>.
            </summary>
            <remarks>
            Actuated tiles are <strong>not</strong> solid.
            </remarks>
        </member>
        <member name="P:Terraria.Tile.HasActuator">
            <summary>
            Whether there is an actuator at this position.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.actuator"/> or <see cref="M:Terraria.Tile.actuator(System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.HasUnactuatedTile">
            <summary>
            Whether there is a tile at this position that isn't actuated.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.nactive"/>.
            </summary>
            <remarks>
            Actuated tiles are not solid, so use <see cref="P:Terraria.Tile.HasUnactuatedTile"/> instead of <see cref="P:Terraria.Tile.HasTile"/> for collision checks.<br/>
            When checking if a tile exists, use <see cref="P:Terraria.Tile.HasTile"/> instead of <see cref="P:Terraria.Tile.HasUnactuatedTile"/>.
            </remarks>
        </member>
        <member name="P:Terraria.Tile.Slope">
            <summary>
            The slope shape of the tile, which can be changed by hammering.<br/>
            Used by <see cref="M:Terraria.WorldGen.SlopeTile(System.Int32,System.Int32,System.Int32,System.Boolean)"/> and <see cref="P:Terraria.Tile.BlockType"/>.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.slope"/> or <see cref="M:Terraria.Tile.slope(System.Byte)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.BlockType">
            <summary>
            The <see cref="P:Terraria.Tile.Slope"/> and <see cref="P:Terraria.Tile.IsHalfBlock"/> of this tile combined, which can be changed by hammering.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.blockType"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.IsHalfBlock">
            <summary>
            Whether a tile is a half block shape, which can be changed by hammering.<br/>
            Used by <see cref="M:Terraria.WorldGen.PoundTile(System.Int32,System.Int32)"/> and <see cref="P:Terraria.Tile.BlockType"/>.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.halfBrick"/> or <see cref="M:Terraria.Tile.halfBrick(System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.TopSlope">
            <summary>
            Whether a tile's <see cref="P:Terraria.Tile.Slope"/> has a solid top side (<see cref="F:Terraria.ID.SlopeType.SlopeDownLeft"/> or <see cref="F:Terraria.ID.SlopeType.SlopeDownRight"/>).<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.topSlope"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.BottomSlope">
            <summary>
            Whether a tile's <see cref="P:Terraria.Tile.Slope"/> has a solid bottom side (<see cref="F:Terraria.ID.SlopeType.SlopeUpLeft"/> or <see cref="F:Terraria.ID.SlopeType.SlopeUpRight"/>).<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.bottomSlope"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.LeftSlope">
            <summary>
            Whether a tile's <see cref="P:Terraria.Tile.Slope"/> has a solid left side (<see cref="F:Terraria.ID.SlopeType.SlopeDownRight"/> or <see cref="F:Terraria.ID.SlopeType.SlopeUpRight"/>).<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.leftSlope"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.RightSlope">
            <summary>
            Whether a tile's <see cref="P:Terraria.Tile.Slope"/> has a solid right side (<see cref="F:Terraria.ID.SlopeType.SlopeDownLeft"/> or <see cref="F:Terraria.ID.SlopeType.SlopeUpLeft"/>).<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.rightSlope"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.TileFrameX">
            <summary>
            The X coordinate of the top left corner of the area in the spritesheet for the <see cref="P:Terraria.Tile.TileType"/> to be used to draw the tile at this position.<para/>
            For a Framed tile, this value is set automatically according to the framing logic as the world loads or other tiles are placed or mined nearby. See <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Tile#framed-vs-frameimportant-tiles">Framed vs FrameImportant</see> for more info. For <see cref="F:Terraria.Main.tileFrameImportant"/> tiles, this value will not change due to tile framing and will be saved and synced in Multiplayer. In either case, <see cref="P:Terraria.Tile.TileFrameX"/> and <see cref="P:Terraria.Tile.TileFrameY"/> correspond to the coordinates of the top left corner of the area in the spritesheet corresponding to the <see cref="P:Terraria.Tile.TileType"/> that should be drawn at this position. Custom drawing logic can adjust these values.<para/>
            Some tiles such as Christmas Tree and Weapon Rack use the higher bits of these fields to do tile-specific behaviors. Modders should not attempt to do similar approaches, but should use <see cref="T:Terraria.ModLoader.ModTileEntity"/>s.<para/>
            Legacy/vanilla equivalent is <see cref="P:Terraria.Tile.frameX"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.TileFrameY">
            <summary>
            The Y coordinate of the top left corner of the area in the spritesheet for the <see cref="P:Terraria.Tile.TileType"/> to be used to draw the tile at this position.<para/>
            For a Framed tile, this value is set automatically according to the framing logic as the world loads or other tiles are placed or mined nearby. See <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Tile#framed-vs-frameimportant-tiles">Framed vs FrameImportant</see> for more info. For <see cref="F:Terraria.Main.tileFrameImportant"/> tiles, this value will not change due to tile framing and will be saved and synced in Multiplayer. In either case, <see cref="P:Terraria.Tile.TileFrameX"/> and <see cref="P:Terraria.Tile.TileFrameY"/> correspond to the coordinates of the top left corner of the area in the spritesheet corresponding to the <see cref="P:Terraria.Tile.TileType"/> that should be drawn at this position. Custom drawing logic can adjust these values.<para/>
            Some tiles such as Christmas Tree and Weapon Rack use the higher bits of these fields to do tile-specific behaviors. Modders should not attempt to do similar approaches, but should use <see cref="T:Terraria.ModLoader.ModTileEntity"/>s.<para/>
            Legacy/vanilla equivalent is <see cref="P:Terraria.Tile.frameY"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.WallFrameX">
            <summary>
            The X coordinate of the top left corner of the area in the spritesheet for the <see cref="P:Terraria.Tile.WallType"/> to be used to draw the wall at this position.<para/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.wallFrameX"/> or <see cref="M:Terraria.Tile.wallFrameX(System.Int32)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.WallFrameY">
            <summary>
            The Y coordinate of the top left corner of the area in the spritesheet for the <see cref="P:Terraria.Tile.WallType"/> to be used to draw the wall at this position.<para/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.wallFrameY"/> or <see cref="M:Terraria.Tile.wallFrameY(System.Int32)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.TileFrameNumber">
            <summary>
            The random style number the tile at this position has, which is random number between 0 and 2 (inclusive).<br/>
            This is used in non-<see cref="F:Terraria.Main.tileFrameImportant"/> tiles (aka "Terrain" tiles) to provide visual variation and is not synced in multiplayer nor will it be preserved when saving and loading the world.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.frameNumber"/> or <see cref="M:Terraria.Tile.frameNumber(System.Byte)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.WallFrameNumber">
            <summary>
            The random style number the wall at this position has, which is a random number between 0 and 2 (inclusive).<br/>
            This is used to provide visual variation and is not synced in multiplayer nor will it be preserved when saving and loading the world.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.wallFrameNumber"/> or <see cref="M:Terraria.Tile.wallFrameNumber(System.Byte)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.TileColor">
            <summary>
            The <see cref="T:Terraria.ID.PaintID"/> the tile at this position is painted with. Is <see cref="F:Terraria.ID.PaintID.None"/> if not painted.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.color"/> or <see cref="M:Terraria.Tile.color(System.Byte)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.WallColor">
            <summary>
            The <see cref="T:Terraria.ID.PaintID"/> the wall at this position is painted with. Is <see cref="F:Terraria.ID.PaintID.None"/> if not painted.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.wallColor"/> or <see cref="M:Terraria.Tile.wallColor(System.Byte)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.LiquidAmount">
            <summary>
            The amount of liquid at this position.<br/>
            Ranges from 0, no liquid, to 255, filled with liquid.<br/>
            Legacy/vanilla equivalent is <see cref="P:Terraria.Tile.liquid"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.LiquidType">
            <summary>
            The <see cref="T:Terraria.ID.LiquidID"/> of the liquid at this position.<br/>
            Make sure to check that <see cref="P:Terraria.Tile.LiquidAmount"/> is greater than 0.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.liquidType"/> or <see cref="M:Terraria.Tile.liquidType(System.Int32)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.SkipLiquid">
            <summary>
            Whether the liquid at this position should skip updating for 1 tick.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.skipLiquid"/> or <see cref="M:Terraria.Tile.skipLiquid(System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.CheckingLiquid">
            <summary>
            Whether there is liquid at this position.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.checkingLiquid"/> or <see cref="M:Terraria.Tile.checkingLiquid(System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.RedWire">
            <summary>
            Whether there is red wire at this position.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.wire"/> or <see cref="M:Terraria.Tile.wire(System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.GreenWire">
            <summary>
            Whether there is green wire at this position.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.wire3"/> or <see cref="M:Terraria.Tile.wire3(System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.BlueWire">
            <summary>
            Whether there is blue wire at this position.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.wire2"/> or <see cref="M:Terraria.Tile.wire2(System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.YellowWire">
            <summary>
            Whether there is yellow wire at this position.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.wire4"/> or <see cref="M:Terraria.Tile.wire4(System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.IsTileInvisible">
            <summary>
            Whether the tile at this position is invisible. Used by <see cref="F:Terraria.ID.ItemID.EchoCoating"/>.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.invisibleBlock"/> or <see cref="M:Terraria.Tile.invisibleBlock(System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.IsWallInvisible">
            <summary>
            Whether the wall at this position is invisible. Used by <see cref="F:Terraria.ID.ItemID.EchoCoating"/>.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.invisibleWall"/> or <see cref="M:Terraria.Tile.invisibleWall(System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.IsTileFullbright">
            <summary>
            Whether the tile at this position is fully illuminated. Used by <see cref="F:Terraria.ID.ItemID.GlowPaint"/>.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.fullbrightBlock"/> or <see cref="M:Terraria.Tile.fullbrightBlock(System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:Terraria.Tile.IsWallFullbright">
            <summary>
            Whether the wall at this position is fully illuminated. Used by <see cref="F:Terraria.ID.ItemID.GlowPaint"/>.<br/>
            Legacy/vanilla equivalent is <see cref="M:Terraria.Tile.fullbrightWall"/> or <see cref="M:Terraria.Tile.fullbrightWall(System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:Terraria.Tile.Get``1">
            <summary>
            Used to get a reference to the <see cref="T:Terraria.ITileData"/> at this position.
            </summary>
            <typeparam name="T">The <see cref="T:Terraria.ITileData"/> to get.</typeparam>
            <returns>The <see cref="T:Terraria.ITileData"/> of type <typeparamref name="T"/> at this position.</returns>
        </member>
        <member name="P:Terraria.Tile.type">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.TileType"/> instead.
            </summary>
        </member>
        <member name="P:Terraria.Tile.wall">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.WallType"/> instead.
            </summary>
        </member>
        <member name="M:Terraria.Tile.active">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.HasTile"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.active(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.active"/>
        </member>
        <member name="M:Terraria.Tile.inActive">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.IsActuated"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.inActive(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.inActive"/>
        </member>
        <member name="M:Terraria.Tile.actuator">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.HasActuator"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.actuator(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.actuator"/>
        </member>
        <member name="M:Terraria.Tile.nactive">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.HasUnactuatedTile"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.slope">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.Slope"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.slope(System.Byte)">
            <inheritdoc cref="M:Terraria.Tile.slope"/>
        </member>
        <member name="M:Terraria.Tile.halfBrick">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.IsHalfBlock"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.halfBrick(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.halfBrick"/>
        </member>
        <member name="M:Terraria.Tile.HasSameSlope(Terraria.Tile)">
            <summary>
            Legacy code, use <c>tile1.Slope == tile2.Slope</c> instead.
            </summary>
            <param name="tile"></param>
            <returns></returns>
        </member>
        <member name="P:Terraria.Tile.frameX">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.TileFrameX"/> instead.
            </summary>
        </member>
        <member name="P:Terraria.Tile.frameY">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.TileFrameY"/> instead.
            </summary>
        </member>
        <member name="M:Terraria.Tile.wallFrameX">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.WallFrameX"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.wallFrameX(System.Int32)">
            <inheritdoc cref="M:Terraria.Tile.wallFrameX"/>
        </member>
        <member name="M:Terraria.Tile.wallFrameY">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.WallFrameY"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.wallFrameY(System.Int32)">
            <inheritdoc cref="M:Terraria.Tile.wallFrameY"/>
        </member>
        <member name="M:Terraria.Tile.frameNumber">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.TileFrameNumber"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.frameNumber(System.Byte)">
            <inheritdoc cref="M:Terraria.Tile.frameNumber"/>
        </member>
        <member name="M:Terraria.Tile.wallFrameNumber">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.WallFrameNumber"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.wallFrameNumber(System.Byte)">
            <inheritdoc cref="M:Terraria.Tile.wallFrameNumber"/>
        </member>
        <member name="M:Terraria.Tile.color">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.TileColor"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.color(System.Byte)">
            <inheritdoc cref="M:Terraria.Tile.color"/>
        </member>
        <member name="M:Terraria.Tile.wallColor">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.WallColor"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.wallColor(System.Byte)">
            <inheritdoc cref="M:Terraria.Tile.wallColor"/>
        </member>
        <member name="P:Terraria.Tile.liquid">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.LiquidAmount"/> instead.
            </summary>
        </member>
        <member name="M:Terraria.Tile.liquidType">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.LiquidType"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.liquidType(System.Int32)">
            <inheritdoc cref="M:Terraria.Tile.liquidType"/>
        </member>
        <member name="M:Terraria.Tile.lava">
            <summary>
            Legacy code, use <c>tile.LiquidType == LiquidID.Lava</c> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.lava(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.lava"/>
        </member>
        <member name="M:Terraria.Tile.honey">
            <summary>
            Legacy code, use <c>tile.LiquidType == LiquidID.Honey</c> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.honey(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.honey"/>
        </member>
        <member name="M:Terraria.Tile.shimmer">
            <summary>
            Legacy code, use <c>tile.LiquidType == LiquidID.Shimmer</c> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.shimmer(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.shimmer"/>
        </member>
        <member name="M:Terraria.Tile.skipLiquid">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.SkipLiquid"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.skipLiquid(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.skipLiquid"/>
        </member>
        <member name="M:Terraria.Tile.checkingLiquid">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.CheckingLiquid"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.checkingLiquid(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.checkingLiquid"/>
        </member>
        <member name="M:Terraria.Tile.wire">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.RedWire"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.wire(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.wire"/>
        </member>
        <member name="M:Terraria.Tile.wire2">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.BlueWire"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.wire2(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.wire2"/>
        </member>
        <member name="M:Terraria.Tile.wire3">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.GreenWire"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.wire3(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.wire3"/>
        </member>
        <member name="M:Terraria.Tile.wire4">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.YellowWire"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.wire4(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.wire4"/>
        </member>
        <member name="M:Terraria.Tile.invisibleBlock">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.IsTileInvisible"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.invisibleBlock(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.invisibleBlock"/>
        </member>
        <member name="M:Terraria.Tile.invisibleWall">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.IsWallInvisible"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.invisibleWall(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.invisibleWall"/>
        </member>
        <member name="M:Terraria.Tile.fullbrightBlock">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.IsTileFullbright"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.fullbrightBlock(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.fullbrightBlock"/>
        </member>
        <member name="M:Terraria.Tile.fullbrightWall">
            <summary>
            Legacy code, use <see cref="P:Terraria.Tile.IsWallFullbright"/> instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terraria.Tile.fullbrightWall(System.Boolean)">
            <inheritdoc cref="M:Terraria.Tile.fullbrightWall"/>
        </member>
        <member name="M:Terraria.TileWallWireStateData.SetAllBitsClearFrame(System.Int32)">
            <summary>
            Intended to be used to set all the persistent data about a tile. For example, when loading a schematic from serialized NonFrameBits.
            </summary>
        </member>
        <member name="M:Terraria.UI.ItemSlot.ModSlotDyeSwap(Terraria.Item,System.Boolean@)">
            <summary>
            Alters the ItemSlot.DyeSwap method for modded slots;
            Unfortunately, I (Solxan) couldn't ever get ItemSlot.DyeSwap invoked so pretty sure this and its vanilla code is defunct.
            Here in case someone proves my statement wrong later.
            </summary>
        </member>
        <member name="M:Terraria.Utilities.FileUtilities.ConvertToRelativePath(System.String,System.String)">
            <summary>
            Converts the full 'path' to remove the base path component.
            Example: C://My Documents//Help Me I'm Hungry.txt is full 'path'
            	basePath is C://My Documents
            	Thus returns 'Help Me I'm Hungry.txt'
            </summary>
        </member>
        <member name="M:Terraria.Utilities.FileUtilities.DetermineIfShouldOverwrite(System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            DEtermines if should overwrite the file at Destination with the file at Source
            </summary>
        </member>
        <member name="M:Terraria.Utilities.UnifiedRandom.Next(System.Int32,System.Int32)">
            <summary>
            Generates a random value between <paramref name="minValue"/> (inclusive) and <paramref name="maxValue"/> (exclusive). <br/>For example <c>Next(4, 8)</c> can return 4, 5, 6, or 7. It will not return 8.
            </summary>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Terraria.Utilities.UnifiedRandom.Next(System.Int32)">
            <summary>
            Generates a random value between 0 (inclusive) and <paramref name="maxValue"/> (exclusive). <br/>For example <c>Next(4)</c> can return one of 4 values: 0, 1, 2, or 3. It will not return 4.
            </summary>
            <param name="maxValue"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Terraria.Utils.NextFloat(Terraria.Utilities.UnifiedRandom)">
            <summary>
            Generates a random value between 0f (inclusive) and 1f (exclusive). <br/>It will not return 1f.
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Utils.Next``1(Terraria.Utilities.UnifiedRandom,``0[])">
            <summary>
            Returns a random element from the provided array.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="r"></param>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Utils.Next``1(Terraria.Utilities.UnifiedRandom,System.Collections.Generic.IList{``0})">
            <summary>
            Returns a random element from the provided list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="r"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Utils.NextFloat(Terraria.Utilities.UnifiedRandom,System.Single)">
            <summary>
            Generates a random value between 0f (inclusive) and <paramref name="maxValue"/> (exclusive). <br/>It will not return <paramref name="maxValue"/>.
            </summary>
            <param name="r"></param>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Utils.NextFloat(Terraria.Utilities.UnifiedRandom,System.Single,System.Single)">
            <summary>
            Generates a random value between <paramref name="minValue"/> (inclusive) and <paramref name="maxValue"/> (exclusive). <br/>It will not return <paramref name="maxValue"/>.
            </summary>
            <param name="r"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Utils.NextBool(Terraria.Utilities.UnifiedRandom)">
            <summary>
            Returns true or false randomly with equal chance.
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Utils.NextBool(Terraria.Utilities.UnifiedRandom,System.Int32)">
            <summary> Returns true 1 out of X times. </summary>
        </member>
        <member name="M:Terraria.Utils.NextBool(Terraria.Utilities.UnifiedRandom,System.Int32,System.Int32)">
            <summary> Returns true X out of Y times. </summary>
        </member>
        <member name="M:Terraria.Utils.SendBitArray(System.Collections.BitArray,System.IO.BinaryWriter)">
            <summary>
            Bit packs a BitArray in to a Byte Array and then sends the byte array
            </summary>
        </member>
        <member name="M:Terraria.Utils.ReceiveBitArray(System.Int32,System.IO.BinaryReader)">
            <summary>
            Receives the result of SendBitArray, and returns the corresponding BitArray
            </summary>
        </member>
        <member name="M:Terraria.Wiring.SkipWire(System.Int32,System.Int32)">
            <summary>
            Use to prevent wire signals from running for the provided coordinates. Typically used in multi-tiles to prevent a wire touching multiple tiles of the multi-tile from erroneously running wire code multiple times. In <see cref="M:Terraria.ModLoader.ModTile.HitWire(System.Int32,System.Int32)"/>, call SkipWire for all the coordinates the tile covers.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Terraria.Wiring.SkipWire(Terraria.DataStructures.Point16)">
            <inheritdoc cref="M:Terraria.Wiring.SkipWire(System.Int32,System.Int32)"/>
        </member>
        <member name="M:Terraria.Wiring.CheckMech(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns true if the wiring cooldown has been reached for the provided tile coordinates. The <paramref name="time"/> parameter will set the cooldown if wiring cooldown has elapsed. Use larger values for less frequent activations. Use this method to limit how often mechanisms can be triggerd. <see cref="M:Terraria.Item.MechSpawn(System.Single,System.Single,System.Int32)"/> and <see cref="M:Terraria.NPC.MechSpawn(System.Single,System.Single,System.Int32)"/> should also be checked for mechanisms spawning items or NPC, such as Statues.
            </summary>
            <param name="i"></param>
            <param name="j"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Terraria.Wiring.TripWire(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Used to send a single to wiring wired up to the specified area. The parameters represent the tile coordinates where wire signals will be sent. Mechanism tiles such as <see cref="F:Terraria.ID.TileID.Switches"/>, <see cref="F:Terraria.ID.TileID.PressurePlates"/>, <see cref="F:Terraria.ID.TileID.Timers"/>, and <see cref="F:Terraria.ID.TileID.LogicSensor"/> use this method as part of their interaction code.
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Terraria.WorldGen.Convert(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts biome variant tiles and walls to a target biome.<br/>
            Converts a 9x9 square by default, but can be adjusted with the <paramref name="size"/> parameter.
            </summary>
            <remarks>
            For an easily-viewable usage example, refer to the code for projectile AI style 31 (used for the Clentaminator's solutions).
            </remarks>
            <param name="i">The X coordinate of the target tile.</param>
            <param name="j">The Y coordinate of the target tile.</param>
            <param name="conversionType">The biome that you wish to convert to. See <see cref="T:Terraria.ID.BiomeConversionID"/>
            Setting this to 0 (Purity) returns affected tiles to their default states (e.g. Ebonstone, Crimstone, and Pearlstone will be converted back into normal Stone Blocks).<br/>
            </param>
            <param name="size">
            When using this method to convert tiles, a square centered on the target tile is converted into those of the target biome.<br/>
            This optional parameter, which defaults to 4, determines the "radius" of that square in tiles, counting outward from the central tile.<br/>
            Set to 0 if you only want to convert a single tile. In other cases, use this parameter wisely.
            </param>
        </member>
        <member name="M:UwUPnP.Gateway.GetGenericPortMappingEntry(System.Int32)">
            <summary>2.4.14.GetGenericPortMappingEntry</summary>
        </member>
        <member name="T:UwUPnP.UPnP">
            <summary>
            A simple UPnP library
            See: https://github.com/Rartrin/UwUPnP
            </summary>
        </member>
    </members>
</doc>
